/*
* generated by Xtext
*/
grammar InternalCSharp;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.myModel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.myModel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.myModel.services.CSharpGrammarAccess;

}

@parser::members {
 
 	private CSharpGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CSharpGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getInputsAssignment()); }
(rule__Model__InputsAssignment)
{ after(grammarAccess.getModelAccess().getInputsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInput
entryRuleInput 
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputAccess().getInputSectionPartParserRuleCall()); }
	ruleInputSectionPart
{ after(grammarAccess.getInputAccess().getInputSectionPartParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputSectionPart
entryRuleInputSectionPart 
:
{ before(grammarAccess.getInputSectionPartRule()); }
	 ruleInputSectionPart
{ after(grammarAccess.getInputSectionPartRule()); } 
	 EOF 
;

// Rule InputSectionPart
ruleInputSectionPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputSectionPartAccess().getAlternatives()); }
(rule__InputSectionPart__Alternatives)
{ after(grammarAccess.getInputSectionPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPDirective
entryRulePPDirective 
:
{ before(grammarAccess.getPPDirectiveRule()); }
	 rulePPDirective
{ after(grammarAccess.getPPDirectiveRule()); } 
	 EOF 
;

// Rule PPDirective
rulePPDirective
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPDirectiveAccess().getAlternatives()); }
(rule__PPDirective__Alternatives)
{ after(grammarAccess.getPPDirectiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPConditional
entryRulePPConditional 
:
{ before(grammarAccess.getPPConditionalRule()); }
	 rulePPConditional
{ after(grammarAccess.getPPConditionalRule()); } 
	 EOF 
;

// Rule PPConditional
rulePPConditional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPConditionalAccess().getGroup()); }
(rule__PPConditional__Group__0)
{ after(grammarAccess.getPPConditionalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPEndif
entryRulePPEndif 
:
{ before(grammarAccess.getPPEndifRule()); }
	 rulePPEndif
{ after(grammarAccess.getPPEndifRule()); } 
	 EOF 
;

// Rule PPEndif
rulePPEndif
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPEndifAccess().getGroup()); }
(rule__PPEndif__Group__0)
{ after(grammarAccess.getPPEndifAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPElseSection
entryRulePPElseSection 
:
{ before(grammarAccess.getPPElseSectionRule()); }
	 rulePPElseSection
{ after(grammarAccess.getPPElseSectionRule()); } 
	 EOF 
;

// Rule PPElseSection
rulePPElseSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPElseSectionAccess().getGroup()); }
(rule__PPElseSection__Group__0)
{ after(grammarAccess.getPPElseSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPElifSections
entryRulePPElifSections 
:
{ before(grammarAccess.getPPElifSectionsRule()); }
	 rulePPElifSections
{ after(grammarAccess.getPPElifSectionsRule()); } 
	 EOF 
;

// Rule PPElifSections
rulePPElifSections
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPElifSectionsAccess().getGroup()); }
(rule__PPElifSections__Group__0)
{ after(grammarAccess.getPPElifSectionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPElifSections2
entryRulePPElifSections2 
:
{ before(grammarAccess.getPPElifSections2Rule()); }
	 rulePPElifSections2
{ after(grammarAccess.getPPElifSections2Rule()); } 
	 EOF 
;

// Rule PPElifSections2
rulePPElifSections2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPElifSections2Access().getGroup()); }
(rule__PPElifSections2__Group__0)*
{ after(grammarAccess.getPPElifSections2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPElifSection
entryRulePPElifSection 
:
{ before(grammarAccess.getPPElifSectionRule()); }
	 rulePPElifSection
{ after(grammarAccess.getPPElifSectionRule()); } 
	 EOF 
;

// Rule PPElifSection
rulePPElifSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPElifSectionAccess().getGroup()); }
(rule__PPElifSection__Group__0)
{ after(grammarAccess.getPPElifSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPIfSection
entryRulePPIfSection 
:
{ before(grammarAccess.getPPIfSectionRule()); }
	 rulePPIfSection
{ after(grammarAccess.getPPIfSectionRule()); } 
	 EOF 
;

// Rule PPIfSection
rulePPIfSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPIfSectionAccess().getGroup()); }
(rule__PPIfSection__Group__0)
{ after(grammarAccess.getPPIfSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPExpression
entryRulePPExpression 
:
{ before(grammarAccess.getPPExpressionRule()); }
	 rulePPExpression
{ after(grammarAccess.getPPExpressionRule()); } 
	 EOF 
;

// Rule PPExpression
rulePPExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPExpressionAccess().getPPOrExpressionParserRuleCall()); }
	rulePPOrExpression
{ after(grammarAccess.getPPExpressionAccess().getPPOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPOrExpression
entryRulePPOrExpression 
:
{ before(grammarAccess.getPPOrExpressionRule()); }
	 rulePPOrExpression
{ after(grammarAccess.getPPOrExpressionRule()); } 
	 EOF 
;

// Rule PPOrExpression
rulePPOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPOrExpressionAccess().getGroup()); }
(rule__PPOrExpression__Group__0)
{ after(grammarAccess.getPPOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPOrExpression2
entryRulePPOrExpression2 
:
{ before(grammarAccess.getPPOrExpression2Rule()); }
	 rulePPOrExpression2
{ after(grammarAccess.getPPOrExpression2Rule()); } 
	 EOF 
;

// Rule PPOrExpression2
rulePPOrExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPOrExpression2Access().getGroup()); }
(rule__PPOrExpression2__Group__0)*
{ after(grammarAccess.getPPOrExpression2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPAndExpression
entryRulePPAndExpression 
:
{ before(grammarAccess.getPPAndExpressionRule()); }
	 rulePPAndExpression
{ after(grammarAccess.getPPAndExpressionRule()); } 
	 EOF 
;

// Rule PPAndExpression
rulePPAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPAndExpressionAccess().getGroup()); }
(rule__PPAndExpression__Group__0)
{ after(grammarAccess.getPPAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPAndExpression2
entryRulePPAndExpression2 
:
{ before(grammarAccess.getPPAndExpression2Rule()); }
	 rulePPAndExpression2
{ after(grammarAccess.getPPAndExpression2Rule()); } 
	 EOF 
;

// Rule PPAndExpression2
rulePPAndExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPAndExpression2Access().getGroup()); }
(rule__PPAndExpression2__Group__0)*
{ after(grammarAccess.getPPAndExpression2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPEqualityExpression
entryRulePPEqualityExpression 
:
{ before(grammarAccess.getPPEqualityExpressionRule()); }
	 rulePPEqualityExpression
{ after(grammarAccess.getPPEqualityExpressionRule()); } 
	 EOF 
;

// Rule PPEqualityExpression
rulePPEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPEqualityExpressionAccess().getGroup()); }
(rule__PPEqualityExpression__Group__0)
{ after(grammarAccess.getPPEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPEqualityExpression2
entryRulePPEqualityExpression2 
:
{ before(grammarAccess.getPPEqualityExpression2Rule()); }
	 rulePPEqualityExpression2
{ after(grammarAccess.getPPEqualityExpression2Rule()); } 
	 EOF 
;

// Rule PPEqualityExpression2
rulePPEqualityExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getGroup()); }
(rule__PPEqualityExpression2__Group__0)
{ after(grammarAccess.getPPEqualityExpression2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPUnaryExpression
entryRulePPUnaryExpression 
:
{ before(grammarAccess.getPPUnaryExpressionRule()); }
	 rulePPUnaryExpression
{ after(grammarAccess.getPPUnaryExpressionRule()); } 
	 EOF 
;

// Rule PPUnaryExpression
rulePPUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPUnaryExpressionAccess().getAlternatives()); }
(rule__PPUnaryExpression__Alternatives)
{ after(grammarAccess.getPPUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPPrimaryExpression
entryRulePPPrimaryExpression 
:
{ before(grammarAccess.getPPPrimaryExpressionRule()); }
	 rulePPPrimaryExpression
{ after(grammarAccess.getPPPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PPPrimaryExpression
rulePPPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getAlternatives()); }
(rule__PPPrimaryExpression__Alternatives)
{ after(grammarAccess.getPPPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPDeclaration
entryRulePPDeclaration 
:
{ before(grammarAccess.getPPDeclarationRule()); }
	 rulePPDeclaration
{ after(grammarAccess.getPPDeclarationRule()); } 
	 EOF 
;

// Rule PPDeclaration
rulePPDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPDeclarationAccess().getGroup()); }
(rule__PPDeclaration__Group__0)
{ after(grammarAccess.getPPDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPNewLine
entryRulePPNewLine 
:
{ before(grammarAccess.getPPNewLineRule()); }
	 rulePPNewLine
{ after(grammarAccess.getPPNewLineRule()); } 
	 EOF 
;

// Rule PPNewLine
rulePPNewLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPNewLineAccess().getGroup()); }
(rule__PPNewLine__Group__0)
{ after(grammarAccess.getPPNewLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalSymbol
entryRuleConditionalSymbol 
:
{ before(grammarAccess.getConditionalSymbolRule()); }
	 ruleConditionalSymbol
{ after(grammarAccess.getConditionalSymbolRule()); } 
	 EOF 
;

// Rule ConditionalSymbol
ruleConditionalSymbol
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalSymbolAccess().getIdentifierOrKeywordParserRuleCall()); }
	ruleIdentifierOrKeyword
{ after(grammarAccess.getConditionalSymbolAccess().getIdentifierOrKeywordParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputElement
entryRuleInputElement 
:
{ before(grammarAccess.getInputElementRule()); }
	 ruleInputElement
{ after(grammarAccess.getInputElementRule()); } 
	 EOF 
;

// Rule InputElement
ruleInputElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputElementAccess().getAlternatives()); }
(rule__InputElement__Alternatives)
{ after(grammarAccess.getInputElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleToken
entryRuleToken 
:
{ before(grammarAccess.getTokenRule()); }
	 ruleToken
{ after(grammarAccess.getTokenRule()); } 
	 EOF 
;

// Rule Token
ruleToken
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTokenAccess().getAlternatives()); }
(rule__Token__Alternatives)
{ after(grammarAccess.getTokenAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywords
entryRuleKeywords 
:
{ before(grammarAccess.getKeywordsRule()); }
	 ruleKeywords
{ after(grammarAccess.getKeywordsRule()); } 
	 EOF 
;

// Rule Keywords
ruleKeywords
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordsAccess().getAlternatives()); }
(rule__Keywords__Alternatives)
{ after(grammarAccess.getKeywordsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral 
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
(rule__IntegerLiteral__Alternatives)
{ after(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLiteral
entryRuleRealLiteral 
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealLiteralAccess().getAlternatives()); }
(rule__RealLiteral__Alternatives)
{ after(grammarAccess.getRealLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExponentPart
entryRuleExponentPart 
:
{ before(grammarAccess.getExponentPartRule()); }
	 ruleExponentPart
{ after(grammarAccess.getExponentPartRule()); } 
	 EOF 
;

// Rule ExponentPart
ruleExponentPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExponentPartAccess().getAlternatives()); }
(rule__ExponentPart__Alternatives)
{ after(grammarAccess.getExponentPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharacterLiteral
entryRuleCharacterLiteral 
:
{ before(grammarAccess.getCharacterLiteralRule()); }
	 ruleCharacterLiteral
{ after(grammarAccess.getCharacterLiteralRule()); } 
	 EOF 
;

// Rule CharacterLiteral
ruleCharacterLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharacterLiteralAccess().getGroup()); }
(rule__CharacterLiteral__Group__0)
{ after(grammarAccess.getCharacterLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharacter
entryRuleCharacter 
:
{ before(grammarAccess.getCharacterRule()); }
	 ruleCharacter
{ after(grammarAccess.getCharacterRule()); } 
	 EOF 
;

// Rule Character
ruleCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharacterAccess().getAlternatives()); }
(rule__Character__Alternatives)
{ after(grammarAccess.getCharacterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEscapeSequence
entryRuleEscapeSequence 
:
{ before(grammarAccess.getEscapeSequenceRule()); }
	 ruleEscapeSequence
{ after(grammarAccess.getEscapeSequenceRule()); } 
	 EOF 
;

// Rule EscapeSequence
ruleEscapeSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEscapeSequenceAccess().getAlternatives()); }
(rule__EscapeSequence__Alternatives)
{ after(grammarAccess.getEscapeSequenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnicodeCharacterEscapeSequence
entryRuleUnicodeCharacterEscapeSequence 
:
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceRule()); }
	 ruleUnicodeCharacterEscapeSequence
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceRule()); } 
	 EOF 
;

// Rule UnicodeCharacterEscapeSequence
ruleUnicodeCharacterEscapeSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getAlternatives()); }
(rule__UnicodeCharacterEscapeSequence__Alternatives)
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHexadecimalEscapeSequence
entryRuleHexadecimalEscapeSequence 
:
{ before(grammarAccess.getHexadecimalEscapeSequenceRule()); }
	 ruleHexadecimalEscapeSequence
{ after(grammarAccess.getHexadecimalEscapeSequenceRule()); } 
	 EOF 
;

// Rule HexadecimalEscapeSequence
ruleHexadecimalEscapeSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup()); }
(rule__HexadecimalEscapeSequence__Group__0)
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getAlternatives()); }
(rule__StringLiteral__Alternatives)
{ after(grammarAccess.getStringLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerbatimStringCharacter
entryRuleVerbatimStringCharacter 
:
{ before(grammarAccess.getVerbatimStringCharacterRule()); }
	 ruleVerbatimStringCharacter
{ after(grammarAccess.getVerbatimStringCharacterRule()); } 
	 EOF 
;

// Rule VerbatimStringCharacter
ruleVerbatimStringCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerbatimStringCharacterAccess().getAlternatives()); }
(rule__VerbatimStringCharacter__Alternatives)
{ after(grammarAccess.getVerbatimStringCharacterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegularStringCharacter
entryRuleRegularStringCharacter 
:
{ before(grammarAccess.getRegularStringCharacterRule()); }
	 ruleRegularStringCharacter
{ after(grammarAccess.getRegularStringCharacterRule()); } 
	 EOF 
;

// Rule RegularStringCharacter
ruleRegularStringCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegularStringCharacterAccess().getAlternatives()); }
(rule__RegularStringCharacter__Alternatives)
{ after(grammarAccess.getRegularStringCharacterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment
entryRuleComment 
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getAlternatives()); }
(rule__Comment__Alternatives)
{ after(grammarAccess.getCommentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAvailableIdentifier
entryRuleAvailableIdentifier 
:
{ before(grammarAccess.getAvailableIdentifierRule()); }
	 ruleAvailableIdentifier
{ after(grammarAccess.getAvailableIdentifierRule()); } 
	 EOF 
;

// Rule AvailableIdentifier
ruleAvailableIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAvailableIdentifierAccess().getIdentifierOrKeywordParserRuleCall()); }
	ruleIdentifierOrKeyword
{ after(grammarAccess.getAvailableIdentifierAccess().getIdentifierOrKeywordParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifierOrKeyword
entryRuleIdentifierOrKeyword 
:
{ before(grammarAccess.getIdentifierOrKeywordRule()); }
	 ruleIdentifierOrKeyword
{ after(grammarAccess.getIdentifierOrKeywordRule()); } 
	 EOF 
;

// Rule IdentifierOrKeyword
ruleIdentifierOrKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierOrKeywordAccess().getGroup()); }
(rule__IdentifierOrKeyword__Group__0)
{ after(grammarAccess.getIdentifierOrKeywordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifierPartCharacter
entryRuleIdentifierPartCharacter 
:
{ before(grammarAccess.getIdentifierPartCharacterRule()); }
	 ruleIdentifierPartCharacter
{ after(grammarAccess.getIdentifierPartCharacterRule()); } 
	 EOF 
;

// Rule IdentifierPartCharacter
ruleIdentifierPartCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierPartCharacterAccess().getAlternatives()); }
(rule__IdentifierPartCharacter__Alternatives)
{ after(grammarAccess.getIdentifierPartCharacterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleIntegralType
entryRuleIntegralType 
:
{ before(grammarAccess.getIntegralTypeRule()); }
	 ruleIntegralType
{ after(grammarAccess.getIntegralTypeRule()); } 
	 EOF 
;

// Rule IntegralType
ruleIntegralType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegralTypeAccess().getAlternatives()); }
(rule__IntegralType__Alternatives)
{ after(grammarAccess.getIntegralTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleNonArrayType
entryRuleNonArrayType 
:
{ before(grammarAccess.getNonArrayTypeRule()); }
	 ruleNonArrayType
{ after(grammarAccess.getNonArrayTypeRule()); } 
	 EOF 
;

// Rule NonArrayType
ruleNonArrayType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonArrayTypeAccess().getBuiltInTypeParserRuleCall()); }
	ruleBuiltInType
{ after(grammarAccess.getNonArrayTypeAccess().getBuiltInTypeParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleBuiltInType
entryRuleBuiltInType 
:
{ before(grammarAccess.getBuiltInTypeRule()); }
	 ruleBuiltInType
{ after(grammarAccess.getBuiltInTypeRule()); } 
	 EOF 
;

// Rule BuiltInType
ruleBuiltInType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInTypeAccess().getAlternatives()); }
(rule__BuiltInType__Alternatives)
{ after(grammarAccess.getBuiltInTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInClassType
entryRuleBuiltInClassType 
:
{ before(grammarAccess.getBuiltInClassTypeRule()); }
	 ruleBuiltInClassType
{ after(grammarAccess.getBuiltInClassTypeRule()); } 
	 EOF 
;

// Rule BuiltInClassType
ruleBuiltInClassType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInClassTypeAccess().getAlternatives()); }
(rule__BuiltInClassType__Alternatives)
{ after(grammarAccess.getBuiltInClassTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumBody
entryRuleEnumBody 
:
{ before(grammarAccess.getEnumBodyRule()); }
	 ruleEnumBody
{ after(grammarAccess.getEnumBodyRule()); } 
	 EOF 
;

// Rule EnumBody
ruleEnumBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumBodyAccess().getGroup()); }
(rule__EnumBody__Group__0)
{ after(grammarAccess.getEnumBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumModifier
entryRuleEnumModifier 
:
{ before(grammarAccess.getEnumModifierRule()); }
	 ruleEnumModifier
{ after(grammarAccess.getEnumModifierRule()); } 
	 EOF 
;

// Rule EnumModifier
ruleEnumModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumModifierAccess().getAlternatives()); }
(rule__EnumModifier__Alternatives)
{ after(grammarAccess.getEnumModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributes
entryRuleAttributes 
:
{ before(grammarAccess.getAttributesRule()); }
	 ruleAttributes
{ after(grammarAccess.getAttributesRule()); } 
	 EOF 
;

// Rule Attributes
ruleAttributes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributesAccess().getNullKeyword()); }

	'null' 

{ after(grammarAccess.getAttributesAccess().getNullKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__InputSectionPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSectionPartAccess().getGroup_0()); }
(rule__InputSectionPart__Group_0__0)
{ after(grammarAccess.getInputSectionPartAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInputSectionPartAccess().getPPDirectiveParserRuleCall_1()); }
	rulePPDirective
{ after(grammarAccess.getInputSectionPartAccess().getPPDirectiveParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPDirective__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDirectiveAccess().getPPDeclarationParserRuleCall_0()); }
	rulePPDeclaration
{ after(grammarAccess.getPPDirectiveAccess().getPPDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPPDirectiveAccess().getPPConditionalParserRuleCall_1()); }
	rulePPConditional
{ after(grammarAccess.getPPDirectiveAccess().getPPConditionalParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getEqualsSignEqualsSignKeyword_0_0()); }

	'==' 

{ after(grammarAccess.getPPEqualityExpression2Access().getEqualsSignEqualsSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getPPEqualityExpression2Access().getExclamationMarkEqualsSignKeyword_0_1()); }

	'!=' 

{ after(grammarAccess.getPPEqualityExpression2Access().getExclamationMarkEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPUnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPUnaryExpressionAccess().getPPPrimaryExpressionParserRuleCall_0()); }
	rulePPPrimaryExpression
{ after(grammarAccess.getPPUnaryExpressionAccess().getPPPrimaryExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPPUnaryExpressionAccess().getGroup_1()); }
(rule__PPUnaryExpression__Group_1__0)
{ after(grammarAccess.getPPUnaryExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getPPPrimaryExpressionAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getPPPrimaryExpressionAccess().getFalseKeyword_1()); }
)

    |(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getConditionalSymbolParserRuleCall_2()); }
	ruleConditionalSymbol
{ after(grammarAccess.getPPPrimaryExpressionAccess().getConditionalSymbolParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getGroup_3()); }
(rule__PPPrimaryExpression__Group_3__0)
{ after(grammarAccess.getPPPrimaryExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getDefineKeyword_3_0()); }

	'define' 

{ after(grammarAccess.getPPDeclarationAccess().getDefineKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getPPDeclarationAccess().getUndefKeyword_3_1()); }

	'undef' 

{ after(grammarAccess.getPPDeclarationAccess().getUndefKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputElementAccess().getWSTerminalRuleCall_0()); }
	RULE_WS
{ after(grammarAccess.getInputElementAccess().getWSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInputElementAccess().getCommentParserRuleCall_1()); }
	ruleComment
{ after(grammarAccess.getInputElementAccess().getCommentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInputElementAccess().getTokenParserRuleCall_2()); }
	ruleToken
{ after(grammarAccess.getInputElementAccess().getTokenParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getTokenAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getKeywordsParserRuleCall_1()); }
	ruleKeywords
{ after(grammarAccess.getTokenAccess().getKeywordsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getIntegerLiteralParserRuleCall_2()); }
	ruleIntegerLiteral
{ after(grammarAccess.getTokenAccess().getIntegerLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getRealLiteralParserRuleCall_3()); }
	ruleRealLiteral
{ after(grammarAccess.getTokenAccess().getRealLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getCharacterLiteralParserRuleCall_4()); }
	ruleCharacterLiteral
{ after(grammarAccess.getTokenAccess().getCharacterLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getStringLiteralParserRuleCall_5()); }
	ruleStringLiteral
{ after(grammarAccess.getTokenAccess().getStringLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getOPERATOR_OR_PUNCTUATORTerminalRuleCall_6()); }
	RULE_OPERATOR_OR_PUNCTUATOR
{ after(grammarAccess.getTokenAccess().getOPERATOR_OR_PUNCTUATORTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keywords__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordsAccess().getAbstractKeyword_0()); }

	'abstract' 

{ after(grammarAccess.getKeywordsAccess().getAbstractKeyword_0()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getAsKeyword_1()); }

	'as' 

{ after(grammarAccess.getKeywordsAccess().getAsKeyword_1()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getBaseKeyword_2()); }

	'base' 

{ after(grammarAccess.getKeywordsAccess().getBaseKeyword_2()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getBoolKeyword_3()); }

	'bool' 

{ after(grammarAccess.getKeywordsAccess().getBoolKeyword_3()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getBreakKeyword_4()); }

	'break' 

{ after(grammarAccess.getKeywordsAccess().getBreakKeyword_4()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getByteKeyword_5()); }

	'byte' 

{ after(grammarAccess.getKeywordsAccess().getByteKeyword_5()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getCaseKeyword_6()); }

	'case' 

{ after(grammarAccess.getKeywordsAccess().getCaseKeyword_6()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getCatchKeyword_7()); }

	'catch' 

{ after(grammarAccess.getKeywordsAccess().getCatchKeyword_7()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getCharKeyword_8()); }

	'char' 

{ after(grammarAccess.getKeywordsAccess().getCharKeyword_8()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getCheckedKeyword_9()); }

	'checked' 

{ after(grammarAccess.getKeywordsAccess().getCheckedKeyword_9()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getClassKeyword_10()); }

	'class' 

{ after(grammarAccess.getKeywordsAccess().getClassKeyword_10()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getConstKeyword_11()); }

	'const' 

{ after(grammarAccess.getKeywordsAccess().getConstKeyword_11()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getContinueKeyword_12()); }

	'continue' 

{ after(grammarAccess.getKeywordsAccess().getContinueKeyword_12()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getDecimalKeyword_13()); }

	'decimal' 

{ after(grammarAccess.getKeywordsAccess().getDecimalKeyword_13()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getDefaultKeyword_14()); }

	'default' 

{ after(grammarAccess.getKeywordsAccess().getDefaultKeyword_14()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getDelegateKeyword_15()); }

	'delegate' 

{ after(grammarAccess.getKeywordsAccess().getDelegateKeyword_15()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getDoKeyword_16()); }

	'do' 

{ after(grammarAccess.getKeywordsAccess().getDoKeyword_16()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getDoubleKeyword_17()); }

	'double' 

{ after(grammarAccess.getKeywordsAccess().getDoubleKeyword_17()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getElseKeyword_18()); }

	'else' 

{ after(grammarAccess.getKeywordsAccess().getElseKeyword_18()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getEnumKeyword_19()); }

	'enum' 

{ after(grammarAccess.getKeywordsAccess().getEnumKeyword_19()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getEventKeyword_20()); }

	'event' 

{ after(grammarAccess.getKeywordsAccess().getEventKeyword_20()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getExplicitKeyword_21()); }

	'explicit' 

{ after(grammarAccess.getKeywordsAccess().getExplicitKeyword_21()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getExternKeyword_22()); }

	'extern' 

{ after(grammarAccess.getKeywordsAccess().getExternKeyword_22()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getFalseKeyword_23()); }

	'false' 

{ after(grammarAccess.getKeywordsAccess().getFalseKeyword_23()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getFinallyKeyword_24()); }

	'finally' 

{ after(grammarAccess.getKeywordsAccess().getFinallyKeyword_24()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getFixedKeyword_25()); }

	'fixed' 

{ after(grammarAccess.getKeywordsAccess().getFixedKeyword_25()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getFloatKeyword_26()); }

	'float' 

{ after(grammarAccess.getKeywordsAccess().getFloatKeyword_26()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getForKeyword_27()); }

	'for' 

{ after(grammarAccess.getKeywordsAccess().getForKeyword_27()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getForeachKeyword_28()); }

	'foreach' 

{ after(grammarAccess.getKeywordsAccess().getForeachKeyword_28()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getGotoKeyword_29()); }

	'goto' 

{ after(grammarAccess.getKeywordsAccess().getGotoKeyword_29()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getIfKeyword_30()); }

	'if' 

{ after(grammarAccess.getKeywordsAccess().getIfKeyword_30()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getImplicitKeyword_31()); }

	'implicit' 

{ after(grammarAccess.getKeywordsAccess().getImplicitKeyword_31()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getInKeyword_32()); }

	'in' 

{ after(grammarAccess.getKeywordsAccess().getInKeyword_32()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getIntKeyword_33()); }

	'int' 

{ after(grammarAccess.getKeywordsAccess().getIntKeyword_33()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getInterfaceKeyword_34()); }

	'interface' 

{ after(grammarAccess.getKeywordsAccess().getInterfaceKeyword_34()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getInternalKeyword_35()); }

	'internal' 

{ after(grammarAccess.getKeywordsAccess().getInternalKeyword_35()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getIsKeyword_36()); }

	'is' 

{ after(grammarAccess.getKeywordsAccess().getIsKeyword_36()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getLockKeyword_37()); }

	'lock' 

{ after(grammarAccess.getKeywordsAccess().getLockKeyword_37()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getLongKeyword_38()); }

	'long' 

{ after(grammarAccess.getKeywordsAccess().getLongKeyword_38()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getNamespaceKeyword_39()); }

	'namespace' 

{ after(grammarAccess.getKeywordsAccess().getNamespaceKeyword_39()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getNewKeyword_40()); }

	'new' 

{ after(grammarAccess.getKeywordsAccess().getNewKeyword_40()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getNullKeyword_41()); }

	'null' 

{ after(grammarAccess.getKeywordsAccess().getNullKeyword_41()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getObjectKeyword_42()); }

	'object' 

{ after(grammarAccess.getKeywordsAccess().getObjectKeyword_42()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getOperatorKeyword_43()); }

	'operator' 

{ after(grammarAccess.getKeywordsAccess().getOperatorKeyword_43()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getOutKeyword_44()); }

	'out' 

{ after(grammarAccess.getKeywordsAccess().getOutKeyword_44()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getOverrideKeyword_45()); }

	'override' 

{ after(grammarAccess.getKeywordsAccess().getOverrideKeyword_45()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getParamsKeyword_46()); }

	'params' 

{ after(grammarAccess.getKeywordsAccess().getParamsKeyword_46()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getPrivateKeyword_47()); }

	'private' 

{ after(grammarAccess.getKeywordsAccess().getPrivateKeyword_47()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getProtectedKeyword_48()); }

	'protected' 

{ after(grammarAccess.getKeywordsAccess().getProtectedKeyword_48()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getPublicKeyword_49()); }

	'public' 

{ after(grammarAccess.getKeywordsAccess().getPublicKeyword_49()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getReadonlyKeyword_50()); }

	'readonly' 

{ after(grammarAccess.getKeywordsAccess().getReadonlyKeyword_50()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getRefKeyword_51()); }

	'ref' 

{ after(grammarAccess.getKeywordsAccess().getRefKeyword_51()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getReturnKeyword_52()); }

	'return' 

{ after(grammarAccess.getKeywordsAccess().getReturnKeyword_52()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getSbyteKeyword_53()); }

	'sbyte' 

{ after(grammarAccess.getKeywordsAccess().getSbyteKeyword_53()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getSealedKeyword_54()); }

	'sealed' 

{ after(grammarAccess.getKeywordsAccess().getSealedKeyword_54()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getShortKeyword_55()); }

	'short' 

{ after(grammarAccess.getKeywordsAccess().getShortKeyword_55()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getSizeofKeyword_56()); }

	'sizeof' 

{ after(grammarAccess.getKeywordsAccess().getSizeofKeyword_56()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getStackallocKeyword_57()); }

	'stackalloc' 

{ after(grammarAccess.getKeywordsAccess().getStackallocKeyword_57()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getStaticKeyword_58()); }

	'static' 

{ after(grammarAccess.getKeywordsAccess().getStaticKeyword_58()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getStringKeyword_59()); }

	'string' 

{ after(grammarAccess.getKeywordsAccess().getStringKeyword_59()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getStructKeyword_60()); }

	'struct' 

{ after(grammarAccess.getKeywordsAccess().getStructKeyword_60()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getSwitchKeyword_61()); }

	'switch' 

{ after(grammarAccess.getKeywordsAccess().getSwitchKeyword_61()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getThisKeyword_62()); }

	'this' 

{ after(grammarAccess.getKeywordsAccess().getThisKeyword_62()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getThrowKeyword_63()); }

	'throw' 

{ after(grammarAccess.getKeywordsAccess().getThrowKeyword_63()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getTrueKeyword_64()); }

	'true' 

{ after(grammarAccess.getKeywordsAccess().getTrueKeyword_64()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getTryKeyword_65()); }

	'try' 

{ after(grammarAccess.getKeywordsAccess().getTryKeyword_65()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getTypeofKeyword_66()); }

	'typeof' 

{ after(grammarAccess.getKeywordsAccess().getTypeofKeyword_66()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getUintKeyword_67()); }

	'uint' 

{ after(grammarAccess.getKeywordsAccess().getUintKeyword_67()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getUlongKeyword_68()); }

	'ulong' 

{ after(grammarAccess.getKeywordsAccess().getUlongKeyword_68()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getUncheckedKeyword_69()); }

	'unchecked' 

{ after(grammarAccess.getKeywordsAccess().getUncheckedKeyword_69()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getUnsafeKeyword_70()); }

	'unsafe' 

{ after(grammarAccess.getKeywordsAccess().getUnsafeKeyword_70()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getUshortKeyword_71()); }

	'ushort' 

{ after(grammarAccess.getKeywordsAccess().getUshortKeyword_71()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getUsingKeyword_72()); }

	'using' 

{ after(grammarAccess.getKeywordsAccess().getUsingKeyword_72()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getVirtualKeyword_73()); }

	'virtual' 

{ after(grammarAccess.getKeywordsAccess().getVirtualKeyword_73()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getVoidKeyword_74()); }

	'void' 

{ after(grammarAccess.getKeywordsAccess().getVoidKeyword_74()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getVolatileKeyword_75()); }

	'volatile' 

{ after(grammarAccess.getKeywordsAccess().getVolatileKeyword_75()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getWhileKeyword_76()); }

	'while' 

{ after(grammarAccess.getKeywordsAccess().getWhileKeyword_76()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getGroup_0()); }
(rule__IntegerLiteral__Group_0__0)
{ after(grammarAccess.getIntegerLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getIntegerLiteralAccess().getGroup_1()); }
(rule__IntegerLiteral__Group_1__0)
{ after(grammarAccess.getIntegerLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_0()); }

	'0x' 

{ after(grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_1()); }

	'0X' 

{ after(grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getGroup_0()); }
(rule__RealLiteral__Group_0__0)
{ after(grammarAccess.getRealLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRealLiteralAccess().getGroup_1()); }
(rule__RealLiteral__Group_1__0)
{ after(grammarAccess.getRealLiteralAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getRealLiteralAccess().getGroup_2()); }
(rule__RealLiteral__Group_2__0)
{ after(grammarAccess.getRealLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getGroup_0()); }
(rule__ExponentPart__Group_0__0)
{ after(grammarAccess.getExponentPartAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExponentPartAccess().getGroup_1()); }
(rule__ExponentPart__Group_1__0)
{ after(grammarAccess.getExponentPartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Character__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
	RULE_SINGLE_CHARACTER
{ after(grammarAccess.getCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCharacterAccess().getGroup_1()); }
(rule__Character__Group_1__0)
{ after(grammarAccess.getCharacterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EscapeSequence__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapeSequenceAccess().getESCAPE_SEQUENCETerminalRuleCall_0()); }
	RULE_ESCAPE_SEQUENCE
{ after(grammarAccess.getEscapeSequenceAccess().getESCAPE_SEQUENCETerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEscapeSequenceAccess().getHexadecimalEscapeSequenceParserRuleCall_1()); }
	ruleHexadecimalEscapeSequence
{ after(grammarAccess.getEscapeSequenceAccess().getHexadecimalEscapeSequenceParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEscapeSequenceAccess().getUnicodeCharacterEscapeSequenceParserRuleCall_2()); }
	ruleUnicodeCharacterEscapeSequence
{ after(grammarAccess.getEscapeSequenceAccess().getUnicodeCharacterEscapeSequenceParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getGroup_0()); }
(rule__UnicodeCharacterEscapeSequence__Group_0__0)
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getGroup_1()); }
(rule__UnicodeCharacterEscapeSequence__Group_1__0)
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup_0()); }
(rule__StringLiteral__Group_0__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStringLiteralAccess().getGroup_1()); }
(rule__StringLiteral__Group_1__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerbatimStringCharacter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerbatimStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
	RULE_SINGLE_CHARACTER
{ after(grammarAccess.getVerbatimStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVerbatimStringCharacterAccess().getQUOTE_ESCAPE_SEQUENCETerminalRuleCall_1()); }
	RULE_QUOTE_ESCAPE_SEQUENCE
{ after(grammarAccess.getVerbatimStringCharacterAccess().getQUOTE_ESCAPE_SEQUENCETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularStringCharacter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
	RULE_SINGLE_CHARACTER
{ after(grammarAccess.getRegularStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRegularStringCharacterAccess().getGroup_1()); }
(rule__RegularStringCharacter__Group_1__0)
{ after(grammarAccess.getRegularStringCharacterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getSL_COMMENTTerminalRuleCall_0()); }
	RULE_SL_COMMENT
{ after(grammarAccess.getCommentAccess().getSL_COMMENTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCommentAccess().getML_COMMENTTerminalRuleCall_1()); }
	RULE_ML_COMMENT
{ after(grammarAccess.getCommentAccess().getML_COMMENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierPartCharacter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierPartCharacterAccess().getLETTERTerminalRuleCall_0()); }
	RULE_LETTER
{ after(grammarAccess.getIdentifierPartCharacterAccess().getLETTERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdentifierPartCharacterAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getIdentifierPartCharacterAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegralType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegralTypeAccess().getSbyteKeyword_0()); }

	'sbyte' 

{ after(grammarAccess.getIntegralTypeAccess().getSbyteKeyword_0()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getByteKeyword_1()); }

	'byte' 

{ after(grammarAccess.getIntegralTypeAccess().getByteKeyword_1()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getShortKeyword_2()); }

	'short' 

{ after(grammarAccess.getIntegralTypeAccess().getShortKeyword_2()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getUshortKeyword_3()); }

	'ushort' 

{ after(grammarAccess.getIntegralTypeAccess().getUshortKeyword_3()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getIntKeyword_4()); }

	'int' 

{ after(grammarAccess.getIntegralTypeAccess().getIntKeyword_4()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getUintKeyword_5()); }

	'uint' 

{ after(grammarAccess.getIntegralTypeAccess().getUintKeyword_5()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getLongKeyword_6()); }

	'long' 

{ after(grammarAccess.getIntegralTypeAccess().getLongKeyword_6()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getUlongKeyword_7()); }

	'ulong' 

{ after(grammarAccess.getIntegralTypeAccess().getUlongKeyword_7()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getCharKeyword_8()); }

	'char' 

{ after(grammarAccess.getIntegralTypeAccess().getCharKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInTypeAccess().getIntegralTypeParserRuleCall_0()); }
	ruleIntegralType
{ after(grammarAccess.getBuiltInTypeAccess().getIntegralTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBuiltInClassTypeParserRuleCall_1()); }
	ruleBuiltInClassType
{ after(grammarAccess.getBuiltInTypeAccess().getBuiltInClassTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBoolKeyword_2()); }

	'bool' 

{ after(grammarAccess.getBuiltInTypeAccess().getBoolKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getDecimalKeyword_3()); }

	'decimal' 

{ after(grammarAccess.getBuiltInTypeAccess().getDecimalKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getFloatKeyword_4()); }

	'float' 

{ after(grammarAccess.getBuiltInTypeAccess().getFloatKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getDoubleKeyword_5()); }

	'double' 

{ after(grammarAccess.getBuiltInTypeAccess().getDoubleKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInClassType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInClassTypeAccess().getObjectKeyword_0()); }

	'object' 

{ after(grammarAccess.getBuiltInClassTypeAccess().getObjectKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInClassTypeAccess().getStringKeyword_1()); }

	'string' 

{ after(grammarAccess.getBuiltInClassTypeAccess().getStringKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumModifierAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getEnumModifierAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getEnumModifierAccess().getPublicKeyword_1()); }

	'public' 

{ after(grammarAccess.getEnumModifierAccess().getPublicKeyword_1()); }
)

    |(
{ before(grammarAccess.getEnumModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getEnumModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getEnumModifierAccess().getInternalKeyword_3()); }

	'internal' 

{ after(grammarAccess.getEnumModifierAccess().getInternalKeyword_3()); }
)

    |(
{ before(grammarAccess.getEnumModifierAccess().getPrivateKeyword_4()); }

	'private' 

{ after(grammarAccess.getEnumModifierAccess().getPrivateKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__InputSectionPart__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSectionPart__Group_0__0__Impl
	rule__InputSectionPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSectionPart__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSectionPartAccess().getInputElementParserRuleCall_0_0()); }
(	ruleInputElement)*
{ after(grammarAccess.getInputSectionPartAccess().getInputElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputSectionPart__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSectionPart__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSectionPart__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSectionPartAccess().getNEW_LINETerminalRuleCall_0_1()); }
	RULE_NEW_LINE
{ after(grammarAccess.getInputSectionPartAccess().getNEW_LINETerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPConditional__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPConditional__Group__0__Impl
	rule__PPConditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPConditional__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPConditionalAccess().getWSTerminalRuleCall_0()); }
(	RULE_WS)*
{ after(grammarAccess.getPPConditionalAccess().getWSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPConditional__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPConditional__Group__1__Impl
	rule__PPConditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPConditional__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPConditionalAccess().getPPIfSectionParserRuleCall_1()); }
	rulePPIfSection
{ after(grammarAccess.getPPConditionalAccess().getPPIfSectionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPConditional__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPConditional__Group__2__Impl
	rule__PPConditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPConditional__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPConditionalAccess().getPPElifSectionsParserRuleCall_2()); }
(	rulePPElifSections)?
{ after(grammarAccess.getPPConditionalAccess().getPPElifSectionsParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPConditional__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPConditional__Group__3__Impl
	rule__PPConditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPConditional__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPConditionalAccess().getPPElseSectionParserRuleCall_3()); }
(	rulePPElseSection)?
{ after(grammarAccess.getPPConditionalAccess().getPPElseSectionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPConditional__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPConditional__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPConditional__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPConditionalAccess().getPPEndifParserRuleCall_4()); }
	rulePPEndif
{ after(grammarAccess.getPPConditionalAccess().getPPEndifParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PPEndif__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEndif__Group__0__Impl
	rule__PPEndif__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEndif__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEndifAccess().getEndifKeyword_0()); }

	'endif' 

{ after(grammarAccess.getPPEndifAccess().getEndifKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEndif__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEndif__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEndif__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEndifAccess().getPPNewLineParserRuleCall_1()); }
	rulePPNewLine
{ after(grammarAccess.getPPEndifAccess().getPPNewLineParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPElseSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElseSection__Group__0__Impl
	rule__PPElseSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElseSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElseSectionAccess().getElseKeyword_0()); }

	'else' 

{ after(grammarAccess.getPPElseSectionAccess().getElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElseSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElseSection__Group__1__Impl
	rule__PPElseSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElseSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElseSectionAccess().getPPNewLineParserRuleCall_1()); }
	rulePPNewLine
{ after(grammarAccess.getPPElseSectionAccess().getPPNewLineParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElseSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElseSection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElseSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElseSectionAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getPPElseSectionAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PPElifSections__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSections__Group__0__Impl
	rule__PPElifSections__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSections__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionsAccess().getPPElifSectionParserRuleCall_0()); }
(	rulePPElifSection)
{ after(grammarAccess.getPPElifSectionsAccess().getPPElifSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSections__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSections__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSections__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionsAccess().getPPElifSections2ParserRuleCall_1()); }
(	rulePPElifSections2)
{ after(grammarAccess.getPPElifSectionsAccess().getPPElifSections2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPElifSections2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSections2__Group__0__Impl
	rule__PPElifSections2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSections2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSections2Access().getPPElifSectionParserRuleCall_0()); }
(	rulePPElifSection)
{ after(grammarAccess.getPPElifSections2Access().getPPElifSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSections2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSections2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSections2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSections2Access().getPPElifSections2ParserRuleCall_1()); }
(	rulePPElifSections2)
{ after(grammarAccess.getPPElifSections2Access().getPPElifSections2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPElifSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__0__Impl
	rule__PPElifSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getElifKeyword_0()); }
(
	'elif' 
)
{ after(grammarAccess.getPPElifSectionAccess().getElifKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__1__Impl
	rule__PPElifSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPElifSectionAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__2__Impl
	rule__PPElifSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getPPExpressionParserRuleCall_2()); }
	rulePPExpression
{ after(grammarAccess.getPPElifSectionAccess().getPPExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__3__Impl
	rule__PPElifSection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getPPNewLineParserRuleCall_3()); }
	rulePPNewLine
{ after(grammarAccess.getPPElifSectionAccess().getPPNewLineParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getWSTerminalRuleCall_4()); }
(	RULE_WS)*
{ after(grammarAccess.getPPElifSectionAccess().getWSTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PPIfSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__0__Impl
	rule__PPIfSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getPPIfSectionAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPIfSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__1__Impl
	rule__PPIfSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPIfSectionAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPIfSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__2__Impl
	rule__PPIfSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getPPExpressionParserRuleCall_2()); }
	rulePPExpression
{ after(grammarAccess.getPPIfSectionAccess().getPPExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPIfSection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__3__Impl
	rule__PPIfSection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getPPNewLineParserRuleCall_3()); }
	rulePPNewLine
{ after(grammarAccess.getPPIfSectionAccess().getPPNewLineParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPIfSection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getWSTerminalRuleCall_4()); }
(	RULE_WS)*
{ after(grammarAccess.getPPIfSectionAccess().getWSTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PPOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression__Group__0__Impl
	rule__PPOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpressionAccess().getPPAndExpressionParserRuleCall_0()); }
	rulePPAndExpression
{ after(grammarAccess.getPPOrExpressionAccess().getPPAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression__Group__1__Impl
	rule__PPOrExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpressionAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPOrExpressionAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpressionAccess().getPPOrExpression2ParserRuleCall_2()); }
(	rulePPOrExpression2)
{ after(grammarAccess.getPPOrExpressionAccess().getPPOrExpression2ParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PPOrExpression2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression2__Group__0__Impl
	rule__PPOrExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpression2Access().getVerticalLineVerticalLineKeyword_0()); }
(
	'||' 
)
{ after(grammarAccess.getPPOrExpression2Access().getVerticalLineVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression2__Group__1__Impl
	rule__PPOrExpression2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpression2Access().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPOrExpression2Access().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression2__Group__2__Impl
	rule__PPOrExpression2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpression2Access().getPPAndExpressionParserRuleCall_2()); }
	rulePPAndExpression
{ after(grammarAccess.getPPOrExpression2Access().getPPAndExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression2__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression2__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression2__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpression2Access().getPPOrExpression2ParserRuleCall_3()); }
(	rulePPOrExpression2)
{ after(grammarAccess.getPPOrExpression2Access().getPPOrExpression2ParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression__Group__0__Impl
	rule__PPAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpressionAccess().getPPEqualityExpressionParserRuleCall_0()); }
	rulePPEqualityExpression
{ after(grammarAccess.getPPAndExpressionAccess().getPPEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression__Group__1__Impl
	rule__PPAndExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpressionAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPAndExpressionAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpressionAccess().getPPAndExpression2ParserRuleCall_2()); }
(	rulePPAndExpression2)
{ after(grammarAccess.getPPAndExpressionAccess().getPPAndExpression2ParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PPAndExpression2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression2__Group__0__Impl
	rule__PPAndExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpression2Access().getAmpersandAmpersandKeyword_0()); }
(
	'&&' 
)
{ after(grammarAccess.getPPAndExpression2Access().getAmpersandAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression2__Group__1__Impl
	rule__PPAndExpression2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpression2Access().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPAndExpression2Access().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression2__Group__2__Impl
	rule__PPAndExpression2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpression2Access().getPPEqualityExpressionParserRuleCall_2()); }
	rulePPEqualityExpression
{ after(grammarAccess.getPPAndExpression2Access().getPPEqualityExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression2__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression2__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression2__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpression2Access().getPPAndExpression2ParserRuleCall_3()); }
(	rulePPAndExpression2)
{ after(grammarAccess.getPPAndExpression2Access().getPPAndExpression2ParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPEqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression__Group__0__Impl
	rule__PPEqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpressionAccess().getPPUnaryExpressionParserRuleCall_0()); }
	rulePPUnaryExpression
{ after(grammarAccess.getPPEqualityExpressionAccess().getPPUnaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpressionAccess().getPPEqualityExpression2ParserRuleCall_1()); }
(	rulePPEqualityExpression2)*
{ after(grammarAccess.getPPEqualityExpressionAccess().getPPEqualityExpression2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPEqualityExpression2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression2__Group__0__Impl
	rule__PPEqualityExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getAlternatives_0()); }
(rule__PPEqualityExpression2__Alternatives_0)
{ after(grammarAccess.getPPEqualityExpression2Access().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEqualityExpression2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression2__Group__1__Impl
	rule__PPEqualityExpression2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPEqualityExpression2Access().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEqualityExpression2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression2__Group__2__Impl
	rule__PPEqualityExpression2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getPPUnaryExpressionParserRuleCall_2()); }
	rulePPUnaryExpression
{ after(grammarAccess.getPPEqualityExpression2Access().getPPUnaryExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEqualityExpression2__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression2__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getPPEqualityExpression2ParserRuleCall_3()); }
	rulePPEqualityExpression2
{ after(grammarAccess.getPPEqualityExpression2Access().getPPEqualityExpression2ParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPUnaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPUnaryExpression__Group_1__0__Impl
	rule__PPUnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPUnaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPUnaryExpressionAccess().getExclamationMarkKeyword_1_0()); }

	'!' 

{ after(grammarAccess.getPPUnaryExpressionAccess().getExclamationMarkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPUnaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPUnaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPUnaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPUnaryExpressionAccess().getPPUnaryExpressionParserRuleCall_1_1()); }
	rulePPUnaryExpression
{ after(grammarAccess.getPPUnaryExpressionAccess().getPPUnaryExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPPrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__0__Impl
	rule__PPPrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getPPPrimaryExpressionAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPPrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__1__Impl
	rule__PPPrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getWSTerminalRuleCall_3_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPPrimaryExpressionAccess().getWSTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPPrimaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__2__Impl
	rule__PPPrimaryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getPPExpressionParserRuleCall_3_2()); }
	rulePPExpression
{ after(grammarAccess.getPPPrimaryExpressionAccess().getPPExpressionParserRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPPrimaryExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__3__Impl
	rule__PPPrimaryExpression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getWSTerminalRuleCall_3_3()); }
(	RULE_WS)*
{ after(grammarAccess.getPPPrimaryExpressionAccess().getWSTerminalRuleCall_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPPrimaryExpression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getRightParenthesisKeyword_3_4()); }

	')' 

{ after(grammarAccess.getPPPrimaryExpressionAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PPDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__0__Impl
	rule__PPDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getWSTerminalRuleCall_0()); }
(	RULE_WS)?
{ after(grammarAccess.getPPDeclarationAccess().getWSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__1__Impl
	rule__PPDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getPPDeclarationAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__2__Impl
	rule__PPDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)?
{ after(grammarAccess.getPPDeclarationAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__3__Impl
	rule__PPDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getAlternatives_3()); }
(rule__PPDeclaration__Alternatives_3)
{ after(grammarAccess.getPPDeclarationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__4__Impl
	rule__PPDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getWSTerminalRuleCall_4()); }
	RULE_WS
{ after(grammarAccess.getPPDeclarationAccess().getWSTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__5__Impl
	rule__PPDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getConditionalSymbolParserRuleCall_5()); }
	ruleConditionalSymbol
{ after(grammarAccess.getPPDeclarationAccess().getConditionalSymbolParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getPPNewLineParserRuleCall_6()); }
	rulePPNewLine
{ after(grammarAccess.getPPDeclarationAccess().getPPNewLineParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__PPNewLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPNewLine__Group__0__Impl
	rule__PPNewLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPNewLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPNewLineAccess().getWSTerminalRuleCall_0()); }
(	RULE_WS)*
{ after(grammarAccess.getPPNewLineAccess().getWSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPNewLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPNewLine__Group__1__Impl
	rule__PPNewLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPNewLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPNewLineAccess().getSL_COMMENTTerminalRuleCall_1()); }
(	RULE_SL_COMMENT)?
{ after(grammarAccess.getPPNewLineAccess().getSL_COMMENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPNewLine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPNewLine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPNewLine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPNewLineAccess().getNEW_LINETerminalRuleCall_2()); }
	RULE_NEW_LINE
{ after(grammarAccess.getPPNewLineAccess().getNEW_LINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_0__0__Impl
	rule__IntegerLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getAlternatives_0_0()); }
(rule__IntegerLiteral__Alternatives_0_0)
{ after(grammarAccess.getIntegerLiteralAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_0__1__Impl
	rule__IntegerLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIntegerLiteralAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
(	RULE_HEX_DIGIT)
{ after(grammarAccess.getIntegerLiteralAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
)
(
{ before(grammarAccess.getIntegerLiteralAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
(	RULE_HEX_DIGIT)*
{ after(grammarAccess.getIntegerLiteralAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_0_2()); }
	RULE_INTEGER_TYPE_SUFFIX
{ after(grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_1__0__Impl
	rule__IntegerLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_1_1()); }
(	RULE_INTEGER_TYPE_SUFFIX)?
{ after(grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__0__Impl
	rule__RealLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_0()); }
	RULE_INT
{ after(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__1__Impl
	rule__RealLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getRealLiteralAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__2__Impl
	rule__RealLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_2()); }
	RULE_INT
{ after(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__3__Impl
	rule__RealLiteral__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_0_3()); }
(	ruleExponentPart)?
{ after(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_0_4()); }
(	RULE_REAL_TYPE_SUFFIX)?
{ after(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RealLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_1__0__Impl
	rule__RealLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_1__1__Impl
	rule__RealLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_1_1()); }
	ruleExponentPart
{ after(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_1_2()); }
(	RULE_REAL_TYPE_SUFFIX)?
{ after(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RealLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_2__0__Impl
	rule__RealLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_2_0()); }
	RULE_INT
{ after(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_2_1()); }
	RULE_REAL_TYPE_SUFFIX
{ after(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExponentPart__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_0__0__Impl
	rule__ExponentPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getEKeyword_0_0()); }

	'e' 

{ after(grammarAccess.getExponentPartAccess().getEKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentPart__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_0__1__Impl
	rule__ExponentPart__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getSIGNTerminalRuleCall_0_1()); }
(	RULE_SIGN)?
{ after(grammarAccess.getExponentPartAccess().getSIGNTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentPart__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_0_2()); }
	RULE_INT
{ after(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExponentPart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_1__0__Impl
	rule__ExponentPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getEKeyword_1_0()); }

	'E' 

{ after(grammarAccess.getExponentPartAccess().getEKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentPart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_1__1__Impl
	rule__ExponentPart__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getSIGNTerminalRuleCall_1_1()); }
(	RULE_SIGN)?
{ after(grammarAccess.getExponentPartAccess().getSIGNTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentPart__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
{ after(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CharacterLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharacterLiteral__Group__0__Impl
	rule__CharacterLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_0()); }

	'\'' 

{ after(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CharacterLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharacterLiteral__Group__1__Impl
	rule__CharacterLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getCharacterParserRuleCall_1()); }
	ruleCharacter
{ after(grammarAccess.getCharacterLiteralAccess().getCharacterParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CharacterLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharacterLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_2()); }

	'\'' 

{ after(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Character__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Character__Group_1__0__Impl
	rule__Character__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Character__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterAccess().getReverseSolidusKeyword_1_0()); }

	'\\' 

{ after(grammarAccess.getCharacterAccess().getReverseSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Character__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Character__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Character__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterAccess().getEscapeSequenceParserRuleCall_1_1()); }
	ruleEscapeSequence
{ after(grammarAccess.getCharacterAccess().getEscapeSequenceParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnicodeCharacterEscapeSequence__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__0__Impl
	rule__UnicodeCharacterEscapeSequence__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_0_0()); }

	'u' 

{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__1__Impl
	rule__UnicodeCharacterEscapeSequence__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__2__Impl
	rule__UnicodeCharacterEscapeSequence__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_2()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__3__Impl
	rule__UnicodeCharacterEscapeSequence__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_3()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_4()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnicodeCharacterEscapeSequence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__0__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_1_0()); }

	'U' 

{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__1__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_1()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__2__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_2()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__3__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_3()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__4__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_4()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__5__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_5()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__6__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_6()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__7__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_7()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_8()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__HexadecimalEscapeSequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group__0__Impl
	rule__HexadecimalEscapeSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getXKeyword_0()); }

	'x' 

{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getXKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HexadecimalEscapeSequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group__1__Impl
	rule__HexadecimalEscapeSequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HexadecimalEscapeSequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup_2()); }
(rule__HexadecimalEscapeSequence__Group_2__0)?
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HexadecimalEscapeSequence__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group_2__0__Impl
	rule__HexadecimalEscapeSequence__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_0()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HexadecimalEscapeSequence__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup_2_1()); }
(rule__HexadecimalEscapeSequence__Group_2_1__0)?
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HexadecimalEscapeSequence__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group_2_1__0__Impl
	rule__HexadecimalEscapeSequence__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_0()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HexadecimalEscapeSequence__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_1()); }
(	RULE_HEX_DIGIT)?
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_0__0__Impl
	rule__StringLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_0()); }

	'"' 

{ after(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_0__1__Impl
	rule__StringLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getRegularStringCharacterParserRuleCall_0_1()); }
(	ruleRegularStringCharacter)*
{ after(grammarAccess.getStringLiteralAccess().getRegularStringCharacterParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_2()); }

	'"' 

{ after(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StringLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_1__0__Impl
	rule__StringLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getCommercialAtKeyword_1_0()); }

	'@' 

{ after(grammarAccess.getStringLiteralAccess().getCommercialAtKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_1__1__Impl
	rule__StringLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getVerbatimStringCharacterParserRuleCall_1_1()); }
(	ruleVerbatimStringCharacter)*
{ after(grammarAccess.getStringLiteralAccess().getVerbatimStringCharacterParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_1_2()); }

	'"' 

{ after(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RegularStringCharacter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularStringCharacter__Group_1__0__Impl
	rule__RegularStringCharacter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularStringCharacter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularStringCharacterAccess().getReverseSolidusKeyword_1_0()); }

	'\\' 

{ after(grammarAccess.getRegularStringCharacterAccess().getReverseSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularStringCharacter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularStringCharacter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularStringCharacter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularStringCharacterAccess().getESCAPE_SEQUENCETerminalRuleCall_1_1()); }
	RULE_ESCAPE_SEQUENCE
{ after(grammarAccess.getRegularStringCharacterAccess().getESCAPE_SEQUENCETerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__IdentifierOrKeyword__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrKeyword__Group__0__Impl
	rule__IdentifierOrKeyword__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrKeyword__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrKeywordAccess().getIDENTIFIER_START_CHARACTERTerminalRuleCall_0()); }
	RULE_IDENTIFIER_START_CHARACTER
{ after(grammarAccess.getIdentifierOrKeywordAccess().getIDENTIFIER_START_CHARACTERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierOrKeyword__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrKeyword__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrKeyword__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrKeywordAccess().getIdentifierPartCharacterParserRuleCall_1()); }
(	ruleIdentifierPartCharacter)*
{ after(grammarAccess.getIdentifierOrKeywordAccess().getIdentifierPartCharacterParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group__0__Impl
	rule__EnumBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getEnumBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getRightCurlyBracketKeyword_1()); }

	'}' 

{ after(grammarAccess.getEnumBodyAccess().getRightCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__InputsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getInputsInputParserRuleCall_0()); }
	ruleInput{ after(grammarAccess.getModelAccess().getInputsInputParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_REAL_TYPE_SUFFIX : ('F'|'f'|'D'|'d'|'M'|'m');

RULE_LETTER : ('A'..'Z'|'a'..'z');

RULE_IDENTIFIER_START_CHARACTER : (RULE_LETTER|'_');

RULE_QUOTE_ESCAPE_SEQUENCE : '""';

RULE_ESCAPE_SEQUENCE : ('\''|'"'|'\\'|'0'|'a'|'b'|'f'|'n'|'r'|'t'|'v');

RULE_NEW_LINE : ('\r'|'\n')* EOF;

RULE_RANK_SPECIFIER : '[' ','* ']';

RULE_INTEGER_TYPE_SUFFIX : ('U'|'u'|'L'|'l'|'UL'|'Ul'|'uL'|'ul'|'LU'|'Lu'|'lU'|'lu');

RULE_HEX_DIGIT : ('0'..'9'|('A'..'F'|'a'..'f'));

RULE_SIGN : ('+'|'-');

RULE_OPERATOR_OR_PUNCTUATOR : ('{'|'}'|'['|']'|'('|')'|'.'|','|':'|';'|'+'|'-'|'*'|'/'|'%'|'&'|'|'|'^'|'!'|'~'|'='|'<'|'>'|'?'|'++'|'--'|'&&'|'||'|'<<'|'>>'|'=='|'!='|'<='|'>='|'+='|'-='|'*='|'/='|'%='|'&='|'|='|'^='|'<<='|'>>='|'->');

RULE_SINGLE_CHARACTER : .?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


