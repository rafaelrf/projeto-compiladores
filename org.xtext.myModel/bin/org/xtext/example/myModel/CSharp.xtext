grammar org.xtext.example.myModel.CSharp

generate cSharp 'http://www.xtext.org/example/myModel/CSharp'
import 'http://www.eclipse.org/emf/2002/Ecore' as ecore

Model:
	input+=Input*;

terminal NEW_LINE:
	('\n' | '\r');

terminal WHITE_SPACE:
	(' ' | '\t' |NEW_LINE)+;

terminal SINGLE_LINE_COMMENT:
	'//' ('/S')*;

terminal DELIMITED_COMMENT:
	'/*'->'*/';

terminal DECIMAL_DIGIT:
	('0'..'9');

terminal INTEGER_TYPE_SUFFIX:
	'U' | 'u' | 'L' | 'l' | 'UL' | 'Ul' | 'uL' | 'ul' | 'LU' | 'Lu' | 'lU' | 'lu';

terminal HEX_DIGIT:
	DECIMAL_DIGIT | LETTER;
terminal LETTER: ('A'..'F') | ('a'..'f');	
	

Input:
	InputSectionPart*;

InputSectionPart:
	InputElement* NEW_LINE
	| SINGLE_LINE_COMMENT;

InputElement:
	WHITE_SPACE
	| Comment
	| Token;

Token:
	identifier
	| Keywords
	| IntegerLiteral
	/*   |RealLiteral
    |CharacterLiteral
    |StringLiteral
    |OperatorOrPunctuator
    */;

Keywords:
	'abstract'
	| 'as'
	| 'base'
	| 'bool'
	| 'break'
	| 'byte'
	| 'case'
	| 'catch'
	| 'char'
	| 'checked'
	| 'class'
	| 'const'
	| 'continue'
	| 'decimal'
	| 'default'
	| 'delegate'
	| 'do'
	| 'double'
	| 'else'
	| 'enum'
	| 'event'
	| 'explicit'
	| 'extern'
	| 'false'
	| 'finally'
	| 'fixed'
	| 'float'
	| 'for'
	| 'foreach'
	| 'goto'
	| 'if'
	| 'implicit'
	| 'in'
	| 'int'
	| 'interface'
	| 'internal'
	| 'is'
	| 'lock'
	| 'long'
	| 'namespace'
	| 'new'
	| 'null'
	| 'object'
	| 'operator'
	| 'out'
	| 'override'
	| 'params'
	| 'private'
	| 'protected'
	| 'public'
	| 'readonly'
	| 'ref'
	| 'return'
	| 'sbyte'
	| 'sealed'
	| 'short'
	| 'sizeof'
	| 'stackalloc'
	| 'static'
	| 'string'
	| 'struct'
	| 'switch'
	| 'this'
	| 'throw'
	| 'true'
	| 'try'
	| 'typeof'
	| 'uint'
	| 'ulong'
	| 'unchecked'
	| 'unsafe'
	| 'ushort'
	| 'using'
	| 'virtual'
	| 'void'
	| 'volatile'
	| 'while';

IntegerLiteral:
	DECIMAL_DIGIT+ INTEGER_TYPE_SUFFIX?
	| '0x' HEX_DIGIT+ INTEGER_TYPE_SUFFIX
	| '0X' HEX_DIGIT+ INTEGER_TYPE_SUFFIX?;
	/*
RealLiteral:
	
;

CharacterLiteral:
	
;

StringLiteral:
	
;

OperatorOrPunctuator:
	
;
* 
*/
Comment:
	SINGLE_LINE_COMMENT
	| DELIMITED_COMMENT;

Type:
	NonArrayType RANK_SPECIFIER*;

IntegralType:
	'sbyte'
	| 'byte'
	| 'short'
	| 'ushort'
	| 'int'
	| 'uint'
	| 'long'
	| 'ulong'
	| 'char';

ArrayType:
	NonArrayType RANK_SPECIFIER+;

EnumType:
	Attributes EnumModifier* 'enum' identifier (':' IntegralType)? EnumBody
	';'?;

RANK_SPECIFIER:
	'[' ','* ']';

NonArrayType:
//QualifiedIdentifier|
	builtInType;
	/*
QualifiedIdentifier:
   {identifier}+ 
;
 */
builtInType:
	IntegralType | BuiltInClassType | 'bool' | 'decimal' | 'float' | 'double';

BuiltInClassType:
	'object' | 'string';

EnumBody:
	'{' '}'
	//|'{' {EnumMemberDeclaration ','}+ ','? '}'
;

identifier:
	'null';

EnumModifier:
	'new' | 'public' | 'protected' | 'internal' | 'private';

Attributes:
	'null';




	