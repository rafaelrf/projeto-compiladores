/*
* generated by Xtext
*/
grammar InternalCSharp;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.myModel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.myModel.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.myModel.services.CSharpGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private CSharpGrammarAccess grammarAccess;
 	
    public InternalCSharpParser(TokenStream input, CSharpGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected CSharpGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getInputsCompilationUnitParserRuleCall_0()); 
	    }
		lv_inputs_0_0=ruleCompilationUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"inputs",
        		lv_inputs_0_0, 
        		"CompilationUnit");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRulePredefinedType
entryRulePredefinedType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredefinedTypeRule()); } 
	 iv_rulePredefinedType=rulePredefinedType 
	 { $current=$iv_rulePredefinedType.current.getText(); }  
	 EOF 
;

// Rule PredefinedType
rulePredefinedType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='bool' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getBoolKeyword_0()); 
    }

    |
	kw='byte' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getByteKeyword_1()); 
    }

    |
	kw='char' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getCharKeyword_2()); 
    }

    |
	kw='decimal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getDecimalKeyword_3()); 
    }

    |
	kw='double' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getDoubleKeyword_4()); 
    }

    |
	kw='float' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getFloatKeyword_5()); 
    }

    |
	kw='int' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getIntKeyword_6()); 
    }

    |
	kw='long' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getLongKeyword_7()); 
    }

    |
	kw='object' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getObjectKeyword_8()); 
    }

    |
	kw='short' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getShortKeyword_9()); 
    }

    |
	kw='sbyte' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getSbyteKeyword_10()); 
    }

    |
	kw='string' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getStringKeyword_11()); 
    }

    |
	kw='uint' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getUintKeyword_12()); 
    }

    |(
	kw='ulong' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getUlongKeyword_13_0()); 
    }

	kw='ushort' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPredefinedTypeAccess().getUshortKeyword_13_1()); 
    }
))
    ;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); } 
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current.getText(); }  
	 EOF 
;

// Rule Literal
ruleLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); 
    }
    this_BooleanLiteral_0=ruleBooleanLiteral    {
		$current.merge(this_BooleanLiteral_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_1()); 
    }
    this_IntegerLiteral_1=ruleIntegerLiteral    {
		$current.merge(this_IntegerLiteral_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_2()); 
    }
    this_RealLiteral_2=ruleRealLiteral    {
		$current.merge(this_RealLiteral_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getCharacterLiteralParserRuleCall_3()); 
    }
    this_CharacterLiteral_3=ruleCharacterLiteral    {
		$current.merge(this_CharacterLiteral_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_4()); 
    }
    this_StringLiteral_4=ruleStringLiteral    {
		$current.merge(this_StringLiteral_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_5()); 
    }
    this_NullLiteral_5=ruleNullLiteral    {
		$current.merge(this_NullLiteral_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleNullLiteral
entryRuleNullLiteral returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNullLiteralRule()); } 
	 iv_ruleNullLiteral=ruleNullLiteral 
	 { $current=$iv_ruleNullLiteral.current.getText(); }  
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='null' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNullLiteralAccess().getNullKeyword()); 
    }

    ;





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); } 
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current.getText(); }  
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanLiteralAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerLiteralRule()); } 
	 iv_ruleIntegerLiteral=ruleIntegerLiteral 
	 { $current=$iv_ruleIntegerLiteral.current.getText(); }  
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	kw='0x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_0()); 
    }

    |
	kw='0X' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_1()); 
    }
)(    this_HEX_DIGIT_2=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_2);
    }

    { 
    newLeafNode(this_HEX_DIGIT_2, grammarAccess.getIntegerLiteralAccess().getHEX_DIGITTerminalRuleCall_0_1()); 
    }
)+    this_INTEGER_TYPE_SUFFIX_3=RULE_INTEGER_TYPE_SUFFIX    {
		$current.merge(this_INTEGER_TYPE_SUFFIX_3);
    }

    { 
    newLeafNode(this_INTEGER_TYPE_SUFFIX_3, grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_0_2()); 
    }
)
    |(    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_1_0()); 
    }
(    this_INTEGER_TYPE_SUFFIX_5=RULE_INTEGER_TYPE_SUFFIX    {
		$current.merge(this_INTEGER_TYPE_SUFFIX_5);
    }

    { 
    newLeafNode(this_INTEGER_TYPE_SUFFIX_5, grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_1_1()); 
    }
)?))
    ;





// Entry rule entryRuleRealLiteral
entryRuleRealLiteral returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealLiteralRule()); } 
	 iv_ruleRealLiteral=ruleRealLiteral 
	 { $current=$iv_ruleRealLiteral.current.getText(); }  
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_0()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRealLiteralAccess().getFullStopKeyword_0_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_2()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_0_3()); 
    }
    this_ExponentPart_3=ruleExponentPart    {
		$current.merge(this_ExponentPart_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?(    this_REAL_TYPE_SUFFIX_4=RULE_REAL_TYPE_SUFFIX    {
		$current.merge(this_REAL_TYPE_SUFFIX_4);
    }

    { 
    newLeafNode(this_REAL_TYPE_SUFFIX_4, grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_0_4()); 
    }
)?)
    |(    this_INT_5=RULE_INT    {
		$current.merge(this_INT_5);
    }

    { 
    newLeafNode(this_INT_5, grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_1_1()); 
    }
    this_ExponentPart_6=ruleExponentPart    {
		$current.merge(this_ExponentPart_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(    this_REAL_TYPE_SUFFIX_7=RULE_REAL_TYPE_SUFFIX    {
		$current.merge(this_REAL_TYPE_SUFFIX_7);
    }

    { 
    newLeafNode(this_REAL_TYPE_SUFFIX_7, grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_1_2()); 
    }
)?)
    |(    this_INT_8=RULE_INT    {
		$current.merge(this_INT_8);
    }

    { 
    newLeafNode(this_INT_8, grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_2_0()); 
    }
    this_REAL_TYPE_SUFFIX_9=RULE_REAL_TYPE_SUFFIX    {
		$current.merge(this_REAL_TYPE_SUFFIX_9);
    }

    { 
    newLeafNode(this_REAL_TYPE_SUFFIX_9, grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_2_1()); 
    }
))
    ;





// Entry rule entryRuleExponentPart
entryRuleExponentPart returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExponentPartRule()); } 
	 iv_ruleExponentPart=ruleExponentPart 
	 { $current=$iv_ruleExponentPart.current.getText(); }  
	 EOF 
;

// Rule ExponentPart
ruleExponentPart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExponentPartAccess().getEKeyword_0_0()); 
    }
(    this_OPERATOR_OR_SIGN_1=RULE_OPERATOR_OR_SIGN    {
		$current.merge(this_OPERATOR_OR_SIGN_1);
    }

    { 
    newLeafNode(this_OPERATOR_OR_SIGN_1, grammarAccess.getExponentPartAccess().getOPERATOR_OR_SIGNTerminalRuleCall_0_1()); 
    }
)?    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_0_2()); 
    }
)
    |(
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExponentPartAccess().getEKeyword_1_0()); 
    }
(    this_OPERATOR_OR_SIGN_4=RULE_OPERATOR_OR_SIGN    {
		$current.merge(this_OPERATOR_OR_SIGN_4);
    }

    { 
    newLeafNode(this_OPERATOR_OR_SIGN_4, grammarAccess.getExponentPartAccess().getOPERATOR_OR_SIGNTerminalRuleCall_1_1()); 
    }
)?    this_INT_5=RULE_INT    {
		$current.merge(this_INT_5);
    }

    { 
    newLeafNode(this_INT_5, grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_1_2()); 
    }
))
    ;





// Entry rule entryRuleCharacterLiteral
entryRuleCharacterLiteral returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharacterLiteralRule()); } 
	 iv_ruleCharacterLiteral=ruleCharacterLiteral 
	 { $current=$iv_ruleCharacterLiteral.current.getText(); }  
	 EOF 
;

// Rule CharacterLiteral
ruleCharacterLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='\'' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getCharacterLiteralAccess().getCharacterParserRuleCall_1()); 
    }
    this_Character_1=ruleCharacter    {
		$current.merge(this_Character_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='\'' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleCharacter
entryRuleCharacter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharacterRule()); } 
	 iv_ruleCharacter=ruleCharacter 
	 { $current=$iv_ruleCharacter.current.getText(); }  
	 EOF 
;

// Rule Character
ruleCharacter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SINGLE_CHARACTER_0=RULE_SINGLE_CHARACTER    {
		$current.merge(this_SINGLE_CHARACTER_0);
    }

    { 
    newLeafNode(this_SINGLE_CHARACTER_0, grammarAccess.getCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); 
    }

    |(
	kw='\\' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCharacterAccess().getReverseSolidusKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getCharacterAccess().getEscapeSequenceParserRuleCall_1_1()); 
    }
    this_EscapeSequence_2=ruleEscapeSequence    {
		$current.merge(this_EscapeSequence_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleEscapeSequence
entryRuleEscapeSequence returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEscapeSequenceRule()); } 
	 iv_ruleEscapeSequence=ruleEscapeSequence 
	 { $current=$iv_ruleEscapeSequence.current.getText(); }  
	 EOF 
;

// Rule EscapeSequence
ruleEscapeSequence returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ESCAPE_SEQUENCE_0=RULE_ESCAPE_SEQUENCE    {
		$current.merge(this_ESCAPE_SEQUENCE_0);
    }

    { 
    newLeafNode(this_ESCAPE_SEQUENCE_0, grammarAccess.getEscapeSequenceAccess().getESCAPE_SEQUENCETerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getEscapeSequenceAccess().getHexadecimalEscapeSequenceParserRuleCall_1()); 
    }
    this_HexadecimalEscapeSequence_1=ruleHexadecimalEscapeSequence    {
		$current.merge(this_HexadecimalEscapeSequence_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEscapeSequenceAccess().getUnicodeCharacterEscapeSequenceParserRuleCall_2()); 
    }
    this_UnicodeCharacterEscapeSequence_2=ruleUnicodeCharacterEscapeSequence    {
		$current.merge(this_UnicodeCharacterEscapeSequence_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleUnicodeCharacterEscapeSequence
entryRuleUnicodeCharacterEscapeSequence returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnicodeCharacterEscapeSequenceRule()); } 
	 iv_ruleUnicodeCharacterEscapeSequence=ruleUnicodeCharacterEscapeSequence 
	 { $current=$iv_ruleUnicodeCharacterEscapeSequence.current.getText(); }  
	 EOF 
;

// Rule UnicodeCharacterEscapeSequence
ruleUnicodeCharacterEscapeSequence returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='u' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_0_0()); 
    }
    this_HEX_DIGIT_1=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_1);
    }

    { 
    newLeafNode(this_HEX_DIGIT_1, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_1()); 
    }
    this_HEX_DIGIT_2=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_2);
    }

    { 
    newLeafNode(this_HEX_DIGIT_2, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_2()); 
    }
    this_HEX_DIGIT_3=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_3);
    }

    { 
    newLeafNode(this_HEX_DIGIT_3, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_3()); 
    }
    this_HEX_DIGIT_4=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_4);
    }

    { 
    newLeafNode(this_HEX_DIGIT_4, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_4()); 
    }
)
    |(
	kw='U' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_1_0()); 
    }
    this_HEX_DIGIT_6=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_6);
    }

    { 
    newLeafNode(this_HEX_DIGIT_6, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_1()); 
    }
    this_HEX_DIGIT_7=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_7);
    }

    { 
    newLeafNode(this_HEX_DIGIT_7, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_2()); 
    }
    this_HEX_DIGIT_8=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_8);
    }

    { 
    newLeafNode(this_HEX_DIGIT_8, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_3()); 
    }
    this_HEX_DIGIT_9=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_9);
    }

    { 
    newLeafNode(this_HEX_DIGIT_9, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_4()); 
    }
    this_HEX_DIGIT_10=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_10);
    }

    { 
    newLeafNode(this_HEX_DIGIT_10, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_5()); 
    }
    this_HEX_DIGIT_11=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_11);
    }

    { 
    newLeafNode(this_HEX_DIGIT_11, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_6()); 
    }
    this_HEX_DIGIT_12=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_12);
    }

    { 
    newLeafNode(this_HEX_DIGIT_12, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_7()); 
    }
    this_HEX_DIGIT_13=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_13);
    }

    { 
    newLeafNode(this_HEX_DIGIT_13, grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_8()); 
    }
))
    ;





// Entry rule entryRuleHexadecimalEscapeSequence
entryRuleHexadecimalEscapeSequence returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getHexadecimalEscapeSequenceRule()); } 
	 iv_ruleHexadecimalEscapeSequence=ruleHexadecimalEscapeSequence 
	 { $current=$iv_ruleHexadecimalEscapeSequence.current.getText(); }  
	 EOF 
;

// Rule HexadecimalEscapeSequence
ruleHexadecimalEscapeSequence returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getHexadecimalEscapeSequenceAccess().getXKeyword_0()); 
    }
    this_HEX_DIGIT_1=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_1);
    }

    { 
    newLeafNode(this_HEX_DIGIT_1, grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1()); 
    }
(    this_HEX_DIGIT_2=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_2);
    }

    { 
    newLeafNode(this_HEX_DIGIT_2, grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_0()); 
    }
(    this_HEX_DIGIT_3=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_3);
    }

    { 
    newLeafNode(this_HEX_DIGIT_3, grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_0()); 
    }
(    this_HEX_DIGIT_4=RULE_HEX_DIGIT    {
		$current.merge(this_HEX_DIGIT_4);
    }

    { 
    newLeafNode(this_HEX_DIGIT_4, grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_1()); 
    }
)?)?)?)
    ;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); } 
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current.getText(); }  
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getStringLiteralAccess().getRegularStringCharacterParserRuleCall_0_1()); 
    }
    this_RegularStringCharacter_1=ruleRegularStringCharacter    {
		$current.merge(this_RegularStringCharacter_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*
	kw='"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_2()); 
    }
)
    |(
	kw='@' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStringLiteralAccess().getCommercialAtKeyword_1_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getStringLiteralAccess().getVerbatimStringCharacterParserRuleCall_1_1()); 
    }
    this_VerbatimStringCharacter_4=ruleVerbatimStringCharacter    {
		$current.merge(this_VerbatimStringCharacter_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*
	kw='"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_1_2()); 
    }
))
    ;





// Entry rule entryRuleVerbatimStringCharacter
entryRuleVerbatimStringCharacter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerbatimStringCharacterRule()); } 
	 iv_ruleVerbatimStringCharacter=ruleVerbatimStringCharacter 
	 { $current=$iv_ruleVerbatimStringCharacter.current.getText(); }  
	 EOF 
;

// Rule VerbatimStringCharacter
ruleVerbatimStringCharacter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SINGLE_CHARACTER_0=RULE_SINGLE_CHARACTER    {
		$current.merge(this_SINGLE_CHARACTER_0);
    }

    { 
    newLeafNode(this_SINGLE_CHARACTER_0, grammarAccess.getVerbatimStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); 
    }

    |    this_QUOTE_ESCAPE_SEQUENCE_1=RULE_QUOTE_ESCAPE_SEQUENCE    {
		$current.merge(this_QUOTE_ESCAPE_SEQUENCE_1);
    }

    { 
    newLeafNode(this_QUOTE_ESCAPE_SEQUENCE_1, grammarAccess.getVerbatimStringCharacterAccess().getQUOTE_ESCAPE_SEQUENCETerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleRegularStringCharacter
entryRuleRegularStringCharacter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegularStringCharacterRule()); } 
	 iv_ruleRegularStringCharacter=ruleRegularStringCharacter 
	 { $current=$iv_ruleRegularStringCharacter.current.getText(); }  
	 EOF 
;

// Rule RegularStringCharacter
ruleRegularStringCharacter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SINGLE_CHARACTER_0=RULE_SINGLE_CHARACTER    {
		$current.merge(this_SINGLE_CHARACTER_0);
    }

    { 
    newLeafNode(this_SINGLE_CHARACTER_0, grammarAccess.getRegularStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); 
    }

    |(
	kw='\\' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRegularStringCharacterAccess().getReverseSolidusKeyword_1_0()); 
    }
    this_ESCAPE_SEQUENCE_2=RULE_ESCAPE_SEQUENCE    {
		$current.merge(this_ESCAPE_SEQUENCE_2);
    }

    { 
    newLeafNode(this_ESCAPE_SEQUENCE_2, grammarAccess.getRegularStringCharacterAccess().getESCAPE_SEQUENCETerminalRuleCall_1_1()); 
    }
))
    ;







// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	 iv_ruleIdentifier=ruleIdentifier 
	 { $current=$iv_ruleIdentifier.current; } 
	 EOF 
;

// Rule Identifier
ruleIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIdentifierAccess().getIdentifierAction_0_0(),
            $current);
    }
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIdentifierAccess().getAvailableIdentifierParserRuleCall_0_1()); 
    }
ruleAvailableIdentifier
    { 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_2='@' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIdentifierAccess().getCommercialAtKeyword_1_0());
    }
this_IDENTIFIER_START_CHARACTER_3=RULE_IDENTIFIER_START_CHARACTER
    { 
    newLeafNode(this_IDENTIFIER_START_CHARACTER_3, grammarAccess.getIdentifierAccess().getIDENTIFIER_START_CHARACTERTerminalRuleCall_1_1()); 
    }
))
;





// Entry rule entryRuleAvailableIdentifier
entryRuleAvailableIdentifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAvailableIdentifierRule()); } 
	 iv_ruleAvailableIdentifier=ruleAvailableIdentifier 
	 { $current=$iv_ruleAvailableIdentifier.current.getText(); }  
	 EOF 
;

// Rule AvailableIdentifier
ruleAvailableIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getAvailableIdentifierAccess().getIdentifierOrKeywordParserRuleCall()); 
    }
    this_IdentifierOrKeyword_0=ruleIdentifierOrKeyword    {
		$current.merge(this_IdentifierOrKeyword_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleIdentifierOrKeyword
entryRuleIdentifierOrKeyword returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierOrKeywordRule()); } 
	 iv_ruleIdentifierOrKeyword=ruleIdentifierOrKeyword 
	 { $current=$iv_ruleIdentifierOrKeyword.current.getText(); }  
	 EOF 
;

// Rule IdentifierOrKeyword
ruleIdentifierOrKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_IDENTIFIER_START_CHARACTER_0=RULE_IDENTIFIER_START_CHARACTER    {
		$current.merge(this_IDENTIFIER_START_CHARACTER_0);
    }

    { 
    newLeafNode(this_IDENTIFIER_START_CHARACTER_0, grammarAccess.getIdentifierOrKeywordAccess().getIDENTIFIER_START_CHARACTERTerminalRuleCall_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getIdentifierOrKeywordAccess().getIdentifierPartCharacterParserRuleCall_1()); 
    }
    this_IdentifierPartCharacter_1=ruleIdentifierPartCharacter    {
		$current.merge(this_IdentifierPartCharacter_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleIdentifierPartCharacter
entryRuleIdentifierPartCharacter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierPartCharacterRule()); } 
	 iv_ruleIdentifierPartCharacter=ruleIdentifierPartCharacter 
	 { $current=$iv_ruleIdentifierPartCharacter.current.getText(); }  
	 EOF 
;

// Rule IdentifierPartCharacter
ruleIdentifierPartCharacter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_LETTER_0=RULE_LETTER    {
		$current.merge(this_LETTER_0);
    }

    { 
    newLeafNode(this_LETTER_0, grammarAccess.getIdentifierPartCharacterAccess().getLETTERTerminalRuleCall_0()); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getIdentifierPartCharacterAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleCompilationUnit
entryRuleCompilationUnit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompilationUnitRule()); }
	 iv_ruleCompilationUnit=ruleCompilationUnit 
	 { $current=$iv_ruleCompilationUnit.current; } 
	 EOF 
;

// Rule CompilationUnit
ruleCompilationUnit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompilationUnitAccess().getUsingDirectivesUsingDirectiveParserRuleCall_0_0()); 
	    }
		lv_usingDirectives_0_0=ruleUsingDirective		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompilationUnitRule());
	        }
       		add(
       			$current, 
       			"usingDirectives",
        		lv_usingDirectives_0_0, 
        		"UsingDirective");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCompilationUnitAccess().getGlobalAttGlobalAttributesParserRuleCall_1_0()); 
	    }
		lv_globalAtt_1_0=ruleGlobalAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompilationUnitRule());
	        }
       		set(
       			$current, 
       			"globalAtt",
        		lv_globalAtt_1_0, 
        		"GlobalAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompilationUnitAccess().getNameSpacesNamespaceMemberDeclarationParserRuleCall_2_0()); 
	    }
		lv_nameSpaces_2_0=ruleNamespaceMemberDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompilationUnitRule());
	        }
       		add(
       			$current, 
       			"nameSpaces",
        		lv_nameSpaces_2_0, 
        		"NamespaceMemberDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleNamespaceMemberDeclaration
entryRuleNamespaceMemberDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceMemberDeclarationRule()); }
	 iv_ruleNamespaceMemberDeclaration=ruleNamespaceMemberDeclaration 
	 { $current=$iv_ruleNamespaceMemberDeclaration.current; } 
	 EOF 
;

// Rule NamespaceMemberDeclaration
ruleNamespaceMemberDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamespaceMemberDeclarationAccess().getNamespaceMemberDeclarationAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNamespaceMemberDeclarationAccess().getNameDeclaretionNamespaceDeclarationParserRuleCall_0_1_0()); 
	    }
		lv_nameDeclaretion_1_0=ruleNamespaceDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamespaceMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"nameDeclaretion",
        		lv_nameDeclaretion_1_0, 
        		"NamespaceDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getNamespaceMemberDeclarationAccess().getTypeDeclarationTypeDeclarationParserRuleCall_1_0()); 
	    }
		lv_typeDeclaration_2_0=ruleTypeDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamespaceMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"typeDeclaration",
        		lv_typeDeclaration_2_0, 
        		"TypeDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNamespaceDeclaration
entryRuleNamespaceDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceDeclarationRule()); }
	 iv_ruleNamespaceDeclaration=ruleNamespaceDeclaration 
	 { $current=$iv_ruleNamespaceDeclaration.current; } 
	 EOF 
;

// Rule NamespaceDeclaration
ruleNamespaceDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='namespace' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getQIdQualifiedIdentifierParserRuleCall_1_0()); 
	    }
		lv_qId_1_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamespaceDeclarationRule());
	        }
       		set(
       			$current, 
       			"qId",
        		lv_qId_1_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getNameBodyNamespaceBodyParserRuleCall_2_0()); 
	    }
		lv_nameBody_2_0=ruleNamespaceBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamespaceDeclarationRule());
	        }
       		set(
       			$current, 
       			"nameBody",
        		lv_nameBody_2_0, 
        		"NamespaceBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getNamespaceDeclarationAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)?)
;





// Entry rule entryRuleNamespaceBody
entryRuleNamespaceBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceBodyRule()); }
	 iv_ruleNamespaceBody=ruleNamespaceBody 
	 { $current=$iv_ruleNamespaceBody.current; } 
	 EOF 
;

// Rule NamespaceBody
ruleNamespaceBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamespaceBodyAccess().getNamespaceBodyAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamespaceBodyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamespaceBodyAccess().getUsingDirectivesUsingDirectiveParserRuleCall_2_0()); 
	    }
		lv_usingDirectives_2_0=ruleUsingDirective		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
	        }
       		add(
       			$current, 
       			"usingDirectives",
        		lv_usingDirectives_2_0, 
        		"UsingDirective");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getNamespaceBodyAccess().getNameSpacesNamespaceMemberDeclarationParserRuleCall_3_0()); 
	    }
		lv_nameSpaces_3_0=ruleNamespaceMemberDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
	        }
       		add(
       			$current, 
       			"nameSpaces",
        		lv_nameSpaces_3_0, 
        		"NamespaceMemberDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNamespaceBodyAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDeclarationRule()); }
	 iv_ruleTypeDeclaration=ruleTypeDeclaration 
	 { $current=$iv_ruleTypeDeclaration.current; } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeDeclarationAccess().getTypeDeclarationAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclarationAccess().getClassDeclarationClassDeclarationParserRuleCall_1_0_0()); 
	    }
		lv_classDeclaration_1_0=ruleClassDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"classDeclaration",
        		lv_classDeclaration_1_0, 
        		"ClassDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclarationAccess().getModModifierParserRuleCall_1_1_0_0()); 
	    }
		lv_mod_2_0=ruleModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"mod",
        		lv_mod_2_0, 
        		"Modifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclarationAccess().getStructDeclarationStructDeclarationParserRuleCall_1_1_1_0_0()); 
	    }
		lv_structDeclaration_3_0=ruleStructDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"structDeclaration",
        		lv_structDeclaration_3_0, 
        		"StructDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclarationAccess().getInterfaceDeclarationInterfaceDeclarationParserRuleCall_1_1_1_1_0()); 
	    }
		lv_interfaceDeclaration_4_0=ruleInterfaceDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"interfaceDeclaration",
        		lv_interfaceDeclaration_4_0, 
        		"InterfaceDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclarationAccess().getEnumDeclarationEnumDeclarationParserRuleCall_1_1_1_2_0()); 
	    }
		lv_enumDeclaration_5_0=ruleEnumDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"enumDeclaration",
        		lv_enumDeclaration_5_0, 
        		"EnumDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclarationAccess().getDelegateDeclarationDelegateDeclarationParserRuleCall_1_1_1_3_0()); 
	    }
		lv_delegateDeclaration_6_0=ruleDelegateDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"delegateDeclaration",
        		lv_delegateDeclaration_6_0, 
        		"DelegateDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)))))
;





// Entry rule entryRuleDelegateDeclaration
entryRuleDelegateDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDelegateDeclarationRule()); }
	 iv_ruleDelegateDeclaration=ruleDelegateDeclaration 
	 { $current=$iv_ruleDelegateDeclaration.current; } 
	 EOF 
;

// Rule DelegateDeclaration
ruleDelegateDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delegate' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDelegateDeclarationAccess().getDelegateKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDelegateDeclarationAccess().getTypeOrVoidParserRuleCall_1()); 
    }
    this_TypeOrVoid_1=ruleTypeOrVoid
    { 
        $current = $this_TypeOrVoid_1.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDelegateDeclarationAccess().getNameIdentifierParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegateDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDelegateDeclarationAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDelegateDeclarationAccess().getFormalParametersFormalParameterListParserRuleCall_4_0()); 
	    }
		lv_formalParameters_4_0=ruleFormalParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegateDeclarationRule());
	        }
       		set(
       			$current, 
       			"formalParameters",
        		lv_formalParameters_4_0, 
        		"FormalParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDelegateDeclarationAccess().getRightParenthesisKeyword_5());
    }
this_SEMICOLON_6=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_6, grammarAccess.getDelegateDeclarationAccess().getSEMICOLONTerminalRuleCall_6()); 
    }
)
;





// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumDeclarationRule()); }
	 iv_ruleEnumDeclaration=ruleEnumDeclaration 
	 { $current=$iv_ruleEnumDeclaration.current; } 
	 EOF 
;

// Rule EnumDeclaration
ruleEnumDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumDeclarationAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumDeclarationAccess().getIntTypeIntegralTypeParserRuleCall_2_1_0()); 
	    }
		lv_intType_3_0=ruleIntegralType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
	        }
       		set(
       			$current, 
       			"intType",
        		lv_intType_3_0, 
        		"IntegralType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumDeclarationAccess().getEnumBodyEnumBodyParserRuleCall_3_0()); 
	    }
		lv_enumBody_4_0=ruleEnumBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
	        }
       		set(
       			$current, 
       			"enumBody",
        		lv_enumBody_4_0, 
        		"EnumBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getEnumDeclarationAccess().getSEMICOLONTerminalRuleCall_4()); 
    }
)?)
;





// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceDeclarationRule()); }
	 iv_ruleInterfaceDeclaration=ruleInterfaceDeclaration 
	 { $current=$iv_ruleInterfaceDeclaration.current; } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInterfaceDeclarationAccess().getStructKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterfaceDeclarationAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getQIdentifiersQualifiedIdentifierListParserRuleCall_2_1_0()); 
	    }
		lv_qIdentifiers_3_0=ruleQualifiedIdentifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
	        }
       		set(
       			$current, 
       			"qIdentifiers",
        		lv_qIdentifiers_3_0, 
        		"QualifiedIdentifierList");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getInterBodyInterfaceBodyParserRuleCall_3_0()); 
	    }
		lv_interBody_4_0=ruleInterfaceBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
	        }
       		set(
       			$current, 
       			"interBody",
        		lv_interBody_4_0, 
        		"InterfaceBody");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getInterfaceDeclarationAccess().getSEMICOLONTerminalRuleCall_4()); 
    }
)?)
;





// Entry rule entryRuleModifier
entryRuleModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getModifierRule()); } 
	 iv_ruleModifier=ruleModifier 
	 { $current=$iv_ruleModifier.current.getText(); }  
	 EOF 
;

// Rule Modifier
ruleModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierAccess().getNewKeyword_0()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierAccess().getPublicKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierAccess().getProtectedKeyword_2()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierAccess().getInternalKeyword_3()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierAccess().getPrivateKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleInterfaceBody
entryRuleInterfaceBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceBodyRule()); }
	 iv_ruleInterfaceBody=ruleInterfaceBody 
	 { $current=$iv_ruleInterfaceBody.current; } 
	 EOF 
;

// Rule InterfaceBody
ruleInterfaceBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfaceBodyAccess().getInterfaceBodyAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfaceBodyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceBodyAccess().getInterfaceMemberDeclarationsInterfaceMemberDeclarationParserRuleCall_2_0()); 
	    }
		lv_interfaceMemberDeclarations_2_0=ruleInterfaceMemberDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceBodyRule());
	        }
       		add(
       			$current, 
       			"interfaceMemberDeclarations",
        		lv_interfaceMemberDeclarations_2_0, 
        		"InterfaceMemberDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInterfaceBodyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleInterfaceMemberDeclaration
entryRuleInterfaceMemberDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceMemberDeclarationRule()); }
	 iv_ruleInterfaceMemberDeclaration=ruleInterfaceMemberDeclaration 
	 { $current=$iv_ruleInterfaceMemberDeclaration.current; } 
	 EOF 
;

// Rule InterfaceMemberDeclaration
ruleInterfaceMemberDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfaceMemberDeclarationAccess().getInterfaceMemberDeclarationAction_0(),
            $current);
    }
)(	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfaceMemberDeclarationAccess().getNewKeyword_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceMemberDeclarationAccess().getIntermethodDeclarationInterfaceMethodDeclarationParserRuleCall_2_0_0()); 
	    }
		lv_intermethodDeclaration_2_0=ruleInterfaceMethodDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"intermethodDeclaration",
        		lv_intermethodDeclaration_2_0, 
        		"InterfaceMethodDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceMemberDeclarationAccess().getInterEventDeclarationInterfaceEventDeclarationParserRuleCall_2_1_0()); 
	    }
		lv_interEventDeclaration_3_0=ruleInterfaceEventDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"interEventDeclaration",
        		lv_interEventDeclaration_3_0, 
        		"InterfaceEventDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceMemberDeclarationAccess().getType1TypeParserRuleCall_2_2_0_0()); 
	    }
		lv_type1_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"type1",
        		lv_type1_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceMemberDeclarationAccess().getInterfaceIndexerDeclaInterfaceIndexerDeclarationParserRuleCall_2_2_1_0_0()); 
	    }
		lv_interfaceIndexerDecla_5_0=ruleInterfaceIndexerDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"interfaceIndexerDecla",
        		lv_interfaceIndexerDecla_5_0, 
        		"InterfaceIndexerDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceMemberDeclarationAccess().getInterPropertyInterfacePropertyDeclarationParserRuleCall_2_2_1_1_0()); 
	    }
		lv_interProperty_6_0=ruleInterfacePropertyDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"interProperty",
        		lv_interProperty_6_0, 
        		"InterfacePropertyDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)))))
;





// Entry rule entryRuleInterfaceIndexerDeclaration
entryRuleInterfaceIndexerDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceIndexerDeclarationRule()); }
	 iv_ruleInterfaceIndexerDeclaration=ruleInterfaceIndexerDeclaration 
	 { $current=$iv_ruleInterfaceIndexerDeclaration.current; } 
	 EOF 
;

// Rule InterfaceIndexerDeclaration
ruleInterfaceIndexerDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfaceIndexerDeclarationAccess().getInterfaceIndexerDeclarationAction_0(),
            $current);
    }
)	otherlv_1='this' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfaceIndexerDeclarationAccess().getThisKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterfaceIndexerDeclarationAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceIndexerDeclarationAccess().getParameterListFormalParameterListParserRuleCall_3_0()); 
	    }
		lv_parameterList_3_0=ruleFormalParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceIndexerDeclarationRule());
	        }
       		set(
       			$current, 
       			"parameterList",
        		lv_parameterList_3_0, 
        		"FormalParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterfaceIndexerDeclarationAccess().getRightSquareBracketKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInterfaceIndexerDeclarationAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceIndexerDeclarationAccess().getInterAccessorsInterfaceAccessorsParserRuleCall_6_0()); 
	    }
		lv_interAccessors_6_0=ruleInterfaceAccessors		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceIndexerDeclarationRule());
	        }
       		set(
       			$current, 
       			"interAccessors",
        		lv_interAccessors_6_0, 
        		"InterfaceAccessors");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInterfaceIndexerDeclarationAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleInterfaceEventDeclaration
entryRuleInterfaceEventDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceEventDeclarationRule()); }
	 iv_ruleInterfaceEventDeclaration=ruleInterfaceEventDeclaration 
	 { $current=$iv_ruleInterfaceEventDeclaration.current; } 
	 EOF 
;

// Rule InterfaceEventDeclaration
ruleInterfaceEventDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfaceEventDeclarationAccess().getInterfaceEventDeclarationAction_0(),
            $current);
    }
)	otherlv_1='event' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfaceEventDeclarationAccess().getEventKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceEventDeclarationAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceEventDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceEventDeclarationAccess().getNameIdentifierParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceEventDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_4=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_4, grammarAccess.getInterfaceEventDeclarationAccess().getSEMICOLONTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleInterfacePropertyDeclaration
entryRuleInterfacePropertyDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfacePropertyDeclarationRule()); }
	 iv_ruleInterfacePropertyDeclaration=ruleInterfacePropertyDeclaration 
	 { $current=$iv_ruleInterfacePropertyDeclaration.current; } 
	 EOF 
;

// Rule InterfacePropertyDeclaration
ruleInterfacePropertyDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfacePropertyDeclarationAccess().getInterfacePropertyDeclarationAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfacePropertyDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfacePropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterfacePropertyDeclarationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfacePropertyDeclarationAccess().getInterAccessorInterfaceAccessorsParserRuleCall_3_0()); 
	    }
		lv_interAccessor_3_0=ruleInterfaceAccessors		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfacePropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"interAccessor",
        		lv_interAccessor_3_0, 
        		"InterfaceAccessors");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterfacePropertyDeclarationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleInterfaceAccessors
entryRuleInterfaceAccessors returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceAccessorsRule()); }
	 iv_ruleInterfaceAccessors=ruleInterfaceAccessors 
	 { $current=$iv_ruleInterfaceAccessors.current; } 
	 EOF 
;

// Rule InterfaceAccessors
ruleInterfaceAccessors returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccessorsAccess().getAttAttributesParserRuleCall_0_0()); 
	    }
		lv_att_0_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceAccessorsRule());
	        }
       		set(
       			$current, 
       			"att",
        		lv_att_0_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_1='get' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfaceAccessorsAccess().getGetKeyword_1_0_0());
    }
this_SEMICOLON_2=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_2, grammarAccess.getInterfaceAccessorsAccess().getSEMICOLONTerminalRuleCall_1_0_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccessorsAccess().getNewAttAttributesParserRuleCall_1_0_2_0_0()); 
	    }
		lv_newAtt_3_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceAccessorsRule());
	        }
       		set(
       			$current, 
       			"newAtt",
        		lv_newAtt_3_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='set' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterfaceAccessorsAccess().getSetKeyword_1_0_2_1());
    }
this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getInterfaceAccessorsAccess().getSEMICOLONTerminalRuleCall_1_0_2_2()); 
    }
)?)
    |(	otherlv_6='set' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInterfaceAccessorsAccess().getSetKeyword_1_1_0());
    }
this_SEMICOLON_7=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_7, grammarAccess.getInterfaceAccessorsAccess().getSEMICOLONTerminalRuleCall_1_1_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccessorsAccess().getOtherAttAttributesParserRuleCall_1_1_2_0_0()); 
	    }
		lv_otherAtt_8_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceAccessorsRule());
	        }
       		set(
       			$current, 
       			"otherAtt",
        		lv_otherAtt_8_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='get' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInterfaceAccessorsAccess().getGetKeyword_1_1_2_1());
    }
this_SEMICOLON_10=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_10, grammarAccess.getInterfaceAccessorsAccess().getSEMICOLONTerminalRuleCall_1_1_2_2()); 
    }
)?)))
;





// Entry rule entryRuleInterfaceMethodDeclaration
entryRuleInterfaceMethodDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceMethodDeclarationRule()); }
	 iv_ruleInterfaceMethodDeclaration=ruleInterfaceMethodDeclaration 
	 { $current=$iv_ruleInterfaceMethodDeclaration.current; } 
	 EOF 
;

// Rule InterfaceMethodDeclaration
ruleInterfaceMethodDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceMethodDeclarationAccess().getTypeTypeOrVoidParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleTypeOrVoid		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceMethodDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"TypeOrVoid");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceMethodDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceMethodDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterfaceMethodDeclarationAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceMethodDeclarationAccess().getParameterListFormalParameterListParserRuleCall_3_0()); 
	    }
		lv_parameterList_3_0=ruleFormalParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceMethodDeclarationRule());
	        }
       		set(
       			$current, 
       			"parameterList",
        		lv_parameterList_3_0, 
        		"FormalParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterfaceMethodDeclarationAccess().getRightParenthesisKeyword_4());
    }
this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getInterfaceMethodDeclarationAccess().getSEMICOLONTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructDeclarationRule()); }
	 iv_ruleStructDeclaration=ruleStructDeclaration 
	 { $current=$iv_ruleStructDeclaration.current; } 
	 EOF 
;

// Rule StructDeclaration
ruleStructDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructDeclarationAccess().getStructKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStructDeclarationAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getQualIdQualifiedIdentifierListParserRuleCall_2_1_0()); 
	    }
		lv_qualId_3_0=ruleQualifiedIdentifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"qualId",
        		lv_qualId_3_0, 
        		"QualifiedIdentifierList");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getStructbodyStructBodyParserRuleCall_3_0()); 
	    }
		lv_structbody_4_0=ruleStructBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"structbody",
        		lv_structbody_4_0, 
        		"StructBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getStructDeclarationAccess().getSEMICOLONTerminalRuleCall_4()); 
    }
)?)
;





// Entry rule entryRuleStructBody
entryRuleStructBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructBodyRule()); }
	 iv_ruleStructBody=ruleStructBody 
	 { $current=$iv_ruleStructBody.current; } 
	 EOF 
;

// Rule StructBody
ruleStructBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructBodyAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructBodyAccess().getStructMemberStructMemberDeclarationParserRuleCall_1_0()); 
	    }
		lv_structMember_1_0=ruleStructMemberDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructBodyRule());
	        }
       		add(
       			$current, 
       			"structMember",
        		lv_structMember_1_0, 
        		"StructMemberDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStructBodyAccess().getRightCurlyBracketKeyword_2());
    }
)
;







// Entry rule entryRuleStructMemberDeclarations2
entryRuleStructMemberDeclarations2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructMemberDeclarations2Rule()); }
	 iv_ruleStructMemberDeclarations2=ruleStructMemberDeclarations2 
	 { $current=$iv_ruleStructMemberDeclarations2.current; } 
	 EOF 
;

// Rule StructMemberDeclarations2
ruleStructMemberDeclarations2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarations2Access().getStructMemberDeclarationParserRuleCall_0()); 
    }
    this_StructMemberDeclaration_0=ruleStructMemberDeclaration
    { 
        $current = $this_StructMemberDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructMemberDeclarations2Access().getStructMember2StructMemberDeclarations2ParserRuleCall_1_0()); 
	    }
		lv_structMember2_1_0=ruleStructMemberDeclarations2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructMemberDeclarations2Rule());
	        }
       		add(
       			$current, 
       			"structMember2",
        		lv_structMember2_1_0, 
        		"StructMemberDeclarations2");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStructMemberDeclaration
entryRuleStructMemberDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructMemberDeclarationRule()); }
	 iv_ruleStructMemberDeclaration=ruleStructMemberDeclaration 
	 { $current=$iv_ruleStructMemberDeclaration.current; } 
	 EOF 
;

// Rule StructMemberDeclaration
ruleStructMemberDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getConstantDeclarationParserRuleCall_0()); 
    }
    this_ConstantDeclaration_0=ruleConstantDeclaration
    { 
        $current = $this_ConstantDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getFieldDeclarationParserRuleCall_1()); 
    }
    this_FieldDeclaration_1=ruleFieldDeclaration
    { 
        $current = $this_FieldDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getMethodDeclarationParserRuleCall_2()); 
    }
    this_MethodDeclaration_2=ruleMethodDeclaration
    { 
        $current = $this_MethodDeclaration_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getPropertyDeclarationParserRuleCall_3()); 
    }
    this_PropertyDeclaration_3=rulePropertyDeclaration
    { 
        $current = $this_PropertyDeclaration_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getEventDeclarationParserRuleCall_4()); 
    }
    this_EventDeclaration_4=ruleEventDeclaration
    { 
        $current = $this_EventDeclaration_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getIndexerDeclarationParserRuleCall_5()); 
    }
    this_IndexerDeclaration_5=ruleIndexerDeclaration
    { 
        $current = $this_IndexerDeclaration_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getOperatorDeclarationParserRuleCall_6()); 
    }
    this_OperatorDeclaration_6=ruleOperatorDeclaration
    { 
        $current = $this_OperatorDeclaration_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getConstructorDeclarationParserRuleCall_7()); 
    }
    this_ConstructorDeclaration_7=ruleConstructorDeclaration
    { 
        $current = $this_ConstructorDeclaration_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getStaticConstructorDeclarationParserRuleCall_8()); 
    }
    this_StaticConstructorDeclaration_8=ruleStaticConstructorDeclaration
    { 
        $current = $this_StaticConstructorDeclaration_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStructMemberDeclarationAccess().getTypeDeclarationParserRuleCall_9()); 
    }
    this_TypeDeclaration_9=ruleTypeDeclaration
    { 
        $current = $this_TypeDeclaration_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassDeclarationRule()); }
	 iv_ruleClassDeclaration=ruleClassDeclaration 
	 { $current=$iv_ruleClassDeclaration.current; } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassModifierClassModifierParserRuleCall_1_0()); 
	    }
		lv_classModifier_1_0=ruleClassModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		add(
       			$current, 
       			"classModifier",
        		lv_classModifier_1_0, 
        		"ClassModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='class' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassDeclarationAccess().getClassKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassNameIdentifierParserRuleCall_3_0()); 
	    }
		lv_className_3_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_3_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassBaseClassBaseParserRuleCall_4_0()); 
	    }
		lv_classBase_4_0=ruleClassBase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"classBase",
        		lv_classBase_4_0, 
        		"ClassBase");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassBodyClassBodyParserRuleCall_5_0()); 
	    }
		lv_classBody_5_0=ruleClassBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"classBody",
        		lv_classBody_5_0, 
        		"ClassBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEMICOLON_6=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_6, grammarAccess.getClassDeclarationAccess().getSEMICOLONTerminalRuleCall_6()); 
    }
)?)
;





// Entry rule entryRuleClassBody
entryRuleClassBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassBodyRule()); }
	 iv_ruleClassBody=ruleClassBody 
	 { $current=$iv_ruleClassBody.current; } 
	 EOF 
;

// Rule ClassBody
ruleClassBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getClassBodyAccess().getClassBodyAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassBodyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassBodyAccess().getClassDeclarationClassMemberDeclarationParserRuleCall_2_0()); 
	    }
		lv_classDeclaration_2_0=ruleClassMemberDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassBodyRule());
	        }
       		add(
       			$current, 
       			"classDeclaration",
        		lv_classDeclaration_2_0, 
        		"ClassMemberDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClassBodyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleClassMemberDeclaration
entryRuleClassMemberDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassMemberDeclarationRule()); }
	 iv_ruleClassMemberDeclaration=ruleClassMemberDeclaration 
	 { $current=$iv_ruleClassMemberDeclaration.current; } 
	 EOF 
;

// Rule ClassMemberDeclaration
ruleClassMemberDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getMethodDeclarationParserRuleCall_0()); 
    }
    this_MethodDeclaration_0=ruleMethodDeclaration
    { 
        $current = $this_MethodDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getClassAttAttributesParserRuleCall_1_0_0()); 
	    }
		lv_classAtt_1_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"classAtt",
        		lv_classAtt_1_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getConstDeclarationConstantDeclarationParserRuleCall_1_1_0_0()); 
	    }
		lv_constDeclaration_2_0=ruleConstantDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"constDeclaration",
        		lv_constDeclaration_2_0, 
        		"ConstantDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getFieldDeclarationFieldDeclarationParserRuleCall_1_1_1_0()); 
	    }
		lv_fieldDeclaration_3_0=ruleFieldDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"fieldDeclaration",
        		lv_fieldDeclaration_3_0, 
        		"FieldDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getPropertyDeclarationPropertyDeclarationParserRuleCall_1_1_2_0()); 
	    }
		lv_propertyDeclaration_4_0=rulePropertyDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"propertyDeclaration",
        		lv_propertyDeclaration_4_0, 
        		"PropertyDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getEventDeclarationEventDeclarationParserRuleCall_1_1_3_0()); 
	    }
		lv_eventDeclaration_5_0=ruleEventDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"eventDeclaration",
        		lv_eventDeclaration_5_0, 
        		"EventDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getIndexDeclarationIndexerDeclarationParserRuleCall_1_1_4_0()); 
	    }
		lv_indexDeclaration_6_0=ruleIndexerDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"indexDeclaration",
        		lv_indexDeclaration_6_0, 
        		"IndexerDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getOpDeclarationOperatorDeclarationParserRuleCall_1_1_5_0()); 
	    }
		lv_opDeclaration_7_0=ruleOperatorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"opDeclaration",
        		lv_opDeclaration_7_0, 
        		"OperatorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getConstructorDeclarationConstructorDeclarationParserRuleCall_1_1_6_0()); 
	    }
		lv_constructorDeclaration_8_0=ruleConstructorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"constructorDeclaration",
        		lv_constructorDeclaration_8_0, 
        		"ConstructorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getDestructorDeclarationDestructorDeclarationParserRuleCall_1_1_7_0()); 
	    }
		lv_destructorDeclaration_9_0=ruleDestructorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"destructorDeclaration",
        		lv_destructorDeclaration_9_0, 
        		"DestructorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getStaticDeclarationStaticConstructorDeclarationParserRuleCall_1_1_8_0()); 
	    }
		lv_staticDeclaration_10_0=ruleStaticConstructorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"staticDeclaration",
        		lv_staticDeclaration_10_0, 
        		"StaticConstructorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getTypeDeclarationTypeDeclarationParserRuleCall_1_1_9_0()); 
	    }
		lv_typeDeclaration_11_0=ruleTypeDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"typeDeclaration",
        		lv_typeDeclaration_11_0, 
        		"TypeDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleStaticConstructorDeclaration
entryRuleStaticConstructorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStaticConstructorDeclarationRule()); }
	 iv_ruleStaticConstructorDeclaration=ruleStaticConstructorDeclaration 
	 { $current=$iv_ruleStaticConstructorDeclaration.current; } 
	 EOF 
;

// Rule StaticConstructorDeclaration
ruleStaticConstructorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStaticConstructorDeclarationAccess().getStaticCosntModifierStaticConstructorModifiersParserRuleCall_0_0()); 
	    }
		lv_staticCosntModifier_0_0=ruleStaticConstructorModifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticConstructorDeclarationRule());
	        }
       		set(
       			$current, 
       			"staticCosntModifier",
        		lv_staticCosntModifier_0_0, 
        		"StaticConstructorModifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticConstructorDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticConstructorDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStaticConstructorDeclarationAccess().getLeftParenthesisKeyword_2());
    }
	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStaticConstructorDeclarationAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticConstructorDeclarationAccess().getEmptyBlockMaybeEmptyBlockParserRuleCall_4_0()); 
	    }
		lv_emptyBlock_4_0=ruleMaybeEmptyBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticConstructorDeclarationRule());
	        }
       		set(
       			$current, 
       			"emptyBlock",
        		lv_emptyBlock_4_0, 
        		"MaybeEmptyBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStaticConstructorModifiers
entryRuleStaticConstructorModifiers returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getStaticConstructorModifiersRule()); } 
	 iv_ruleStaticConstructorModifiers=ruleStaticConstructorModifiers 
	 { $current=$iv_ruleStaticConstructorModifiers.current.getText(); }  
	 EOF 
;

// Rule StaticConstructorModifiers
ruleStaticConstructorModifiers returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	kw='extern' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStaticConstructorModifiersAccess().getExternKeyword_0_0()); 
    }
)?
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStaticConstructorModifiersAccess().getStaticKeyword_0_1()); 
    }
)
    |(
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStaticConstructorModifiersAccess().getStaticKeyword_1_0()); 
    }

	kw='extern' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStaticConstructorModifiersAccess().getExternKeyword_1_1()); 
    }
))
    ;





// Entry rule entryRuleDestructorDeclaration
entryRuleDestructorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDestructorDeclarationRule()); }
	 iv_ruleDestructorDeclaration=ruleDestructorDeclaration 
	 { $current=$iv_ruleDestructorDeclaration.current; } 
	 EOF 
;

// Rule DestructorDeclaration
ruleDestructorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='extern' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDestructorDeclarationAccess().getExternKeyword_0());
    }
)?	otherlv_1='~' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDestructorDeclarationAccess().getTildeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDestructorDeclarationAccess().getNameIdentifierParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDestructorDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDestructorDeclarationAccess().getLeftParenthesisKeyword_3());
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDestructorDeclarationAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDestructorDeclarationAccess().getEmptyBlockMaybeEmptyBlockParserRuleCall_5_0()); 
	    }
		lv_emptyBlock_5_0=ruleMaybeEmptyBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDestructorDeclarationRule());
	        }
       		set(
       			$current, 
       			"emptyBlock",
        		lv_emptyBlock_5_0, 
        		"MaybeEmptyBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConstructorDeclaration
entryRuleConstructorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorDeclarationRule()); }
	 iv_ruleConstructorDeclaration=ruleConstructorDeclaration 
	 { $current=$iv_ruleConstructorDeclaration.current; } 
	 EOF 
;

// Rule ConstructorDeclaration
ruleConstructorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorDeclarationAccess().getConstModifierConstructorModifierParserRuleCall_0_0()); 
	    }
		lv_constModifier_0_0=ruleConstructorModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorDeclarationRule());
	        }
       		add(
       			$current, 
       			"constModifier",
        		lv_constModifier_0_0, 
        		"ConstructorModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorDeclarationAccess().getConstrDeclaratorConstructorDeclaratorParserRuleCall_1_0()); 
	    }
		lv_constrDeclarator_1_0=ruleConstructorDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorDeclarationRule());
	        }
       		set(
       			$current, 
       			"constrDeclarator",
        		lv_constrDeclarator_1_0, 
        		"ConstructorDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorDeclarationAccess().getEmptyBlockMaybeEmptyBlockParserRuleCall_2_0()); 
	    }
		lv_emptyBlock_2_0=ruleMaybeEmptyBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorDeclarationRule());
	        }
       		set(
       			$current, 
       			"emptyBlock",
        		lv_emptyBlock_2_0, 
        		"MaybeEmptyBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConstructorDeclarator
entryRuleConstructorDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorDeclaratorRule()); }
	 iv_ruleConstructorDeclarator=ruleConstructorDeclarator 
	 { $current=$iv_ruleConstructorDeclarator.current; } 
	 EOF 
;

// Rule ConstructorDeclarator
ruleConstructorDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstructorDeclaratorAccess().getIdentifierParserRuleCall_0()); 
    }
    this_Identifier_0=ruleIdentifier
    { 
        $current = $this_Identifier_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstructorDeclaratorAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorDeclaratorAccess().getFormalListFormalParameterListParserRuleCall_2_0()); 
	    }
		lv_formalList_2_0=ruleFormalParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"formalList",
        		lv_formalList_2_0, 
        		"FormalParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstructorDeclaratorAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorDeclaratorAccess().getConstInitializerConstructorInitializerParserRuleCall_4_0()); 
	    }
		lv_constInitializer_4_0=ruleConstructorInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"constInitializer",
        		lv_constInitializer_4_0, 
        		"ConstructorInitializer");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleConstructorInitializer
entryRuleConstructorInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorInitializerRule()); }
	 iv_ruleConstructorInitializer=ruleConstructorInitializer 
	 { $current=$iv_ruleConstructorInitializer.current; } 
	 EOF 
;

// Rule ConstructorInitializer
ruleConstructorInitializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstructorInitializerAccess().getColonKeyword_0_0());
    }
	otherlv_1='base' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstructorInitializerAccess().getBaseKeyword_0_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstructorInitializerAccess().getLeftParenthesisKeyword_0_2());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstructorInitializerAccess().getArgumentListParserRuleCall_0_3()); 
    }
    this_ArgumentList_3=ruleArgumentList
    { 
        $current = $this_ArgumentList_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstructorInitializerAccess().getRightParenthesisKeyword_0_4());
    }
)
    |(	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstructorInitializerAccess().getColonKeyword_1_0());
    }
	otherlv_6='this' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstructorInitializerAccess().getThisKeyword_1_1());
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstructorInitializerAccess().getLeftParenthesisKeyword_1_2());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstructorInitializerAccess().getArgumentListParserRuleCall_1_3()); 
    }
    this_ArgumentList_8=ruleArgumentList
    { 
        $current = $this_ArgumentList_8.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConstructorInitializerAccess().getRightParenthesisKeyword_1_4());
    }
))
;





// Entry rule entryRuleArgumentList
entryRuleArgumentList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentListRule()); }
	 iv_ruleArgumentList=ruleArgumentList 
	 { $current=$iv_ruleArgumentList.current; } 
	 EOF 
;

// Rule ArgumentList
ruleArgumentList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getArgumentListAccess().getArgumentListAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentListAccess().getArgArgumentParserRuleCall_1_0_0()); 
	    }
		lv_arg_1_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentListRule());
	        }
       		add(
       			$current, 
       			"arg",
        		lv_arg_1_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArgumentListAccess().getCommaKeyword_1_1());
    }
)*)
;





// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	 iv_ruleArgument=ruleArgument 
	 { $current=$iv_ruleArgument.current; } 
	 EOF 
;

// Rule Argument
ruleArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArgumentAccess().getRefOrOutParserRuleCall_0()); 
    }
ruleRefOrOut
    { 
        afterParserOrEnumRuleCall();
    }
)?
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArgumentAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRefOrOut
entryRuleRefOrOut returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefOrOutRule()); } 
	 iv_ruleRefOrOut=ruleRefOrOut 
	 { $current=$iv_ruleRefOrOut.current.getText(); }  
	 EOF 
;

// Rule RefOrOut
ruleRefOrOut returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='ref' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRefOrOutAccess().getRefKeyword_0()); 
    }

    |
	kw='out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRefOrOutAccess().getOutKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleConstructorModifier
entryRuleConstructorModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorModifierRule()); } 
	 iv_ruleConstructorModifier=ruleConstructorModifier 
	 { $current=$iv_ruleConstructorModifier.current.getText(); }  
	 EOF 
;

// Rule ConstructorModifier
ruleConstructorModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstructorModifierAccess().getPublicKeyword_0()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstructorModifierAccess().getProtectedKeyword_1()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstructorModifierAccess().getInternalKeyword_2()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstructorModifierAccess().getPrivateKeyword_3()); 
    }

    |
	kw='extern' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstructorModifierAccess().getExternKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleOperatorDeclaration
entryRuleOperatorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorDeclarationRule()); }
	 iv_ruleOperatorDeclaration=ruleOperatorDeclaration 
	 { $current=$iv_ruleOperatorDeclaration.current; } 
	 EOF 
;

// Rule OperatorDeclaration
ruleOperatorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorDeclarationAccess().getOpModifierOperatorModifierParserRuleCall_0_0()); 
	    }
		lv_opModifier_0_0=ruleOperatorModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorDeclarationRule());
	        }
       		add(
       			$current, 
       			"opModifier",
        		lv_opModifier_0_0, 
        		"OperatorModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorDeclarationAccess().getOpDeclaratorOperatorDeclaratorParserRuleCall_1_0()); 
	    }
		lv_opDeclarator_1_0=ruleOperatorDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorDeclarationRule());
	        }
       		set(
       			$current, 
       			"opDeclarator",
        		lv_opDeclarator_1_0, 
        		"OperatorDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorDeclarationAccess().getEmptyBlockMaybeEmptyBlockParserRuleCall_2_0()); 
	    }
		lv_emptyBlock_2_0=ruleMaybeEmptyBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorDeclarationRule());
	        }
       		set(
       			$current, 
       			"emptyBlock",
        		lv_emptyBlock_2_0, 
        		"MaybeEmptyBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOperatorDeclarator
entryRuleOperatorDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorDeclaratorRule()); }
	 iv_ruleOperatorDeclarator=ruleOperatorDeclarator 
	 { $current=$iv_ruleOperatorDeclarator.current; } 
	 EOF 
;

// Rule OperatorDeclarator
ruleOperatorDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorDeclaratorAccess().getUnaryOperatorDeclaratorParserRuleCall_0()); 
    }
    this_UnaryOperatorDeclarator_0=ruleUnaryOperatorDeclarator
    { 
        $current = $this_UnaryOperatorDeclarator_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorDeclaratorAccess().getBinaryOperatorDeclaratorParserRuleCall_1()); 
    }
    this_BinaryOperatorDeclarator_1=ruleBinaryOperatorDeclarator
    { 
        $current = $this_BinaryOperatorDeclarator_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorDeclaratorAccess().getConversionOperatorDeclaratorParserRuleCall_2()); 
    }
    this_ConversionOperatorDeclarator_2=ruleConversionOperatorDeclarator
    { 
        $current = $this_ConversionOperatorDeclarator_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConversionOperatorDeclarator
entryRuleConversionOperatorDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConversionOperatorDeclaratorRule()); }
	 iv_ruleConversionOperatorDeclarator=ruleConversionOperatorDeclarator 
	 { $current=$iv_ruleConversionOperatorDeclarator.current; } 
	 EOF 
;

// Rule ConversionOperatorDeclarator
ruleConversionOperatorDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConversionOperatorDeclaratorAccess().getConversionKindParserRuleCall_0()); 
    }
ruleConversionKind
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='operator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConversionOperatorDeclaratorAccess().getOperatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConversionOperatorDeclaratorAccess().getFirstTypeTypeParserRuleCall_2_0()); 
	    }
		lv_firstType_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConversionOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"firstType",
        		lv_firstType_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConversionOperatorDeclaratorAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConversionOperatorDeclaratorAccess().getTypeTypeParserRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConversionOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConversionOperatorDeclaratorAccess().getConversionNameIdentifierParserRuleCall_5_0()); 
	    }
		lv_conversionName_5_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConversionOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"conversionName",
        		lv_conversionName_5_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConversionOperatorDeclaratorAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleConversionKind
entryRuleConversionKind returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConversionKindRule()); } 
	 iv_ruleConversionKind=ruleConversionKind 
	 { $current=$iv_ruleConversionKind.current.getText(); }  
	 EOF 
;

// Rule ConversionKind
ruleConversionKind returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='implicit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConversionKindAccess().getImplicitKeyword_0()); 
    }

    |
	kw='explicit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConversionKindAccess().getExplicitKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleBinaryOperatorDeclarator
entryRuleBinaryOperatorDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinaryOperatorDeclaratorRule()); }
	 iv_ruleBinaryOperatorDeclarator=ruleBinaryOperatorDeclarator 
	 { $current=$iv_ruleBinaryOperatorDeclarator.current; } 
	 EOF 
;

// Rule BinaryOperatorDeclarator
ruleBinaryOperatorDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBinaryOperatorDeclaratorAccess().getBinTypeTypeParserRuleCall_0_0()); 
	    }
		lv_binType_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinaryOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"binType",
        		lv_binType_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='operator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBinaryOperatorDeclaratorAccess().getOperatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBinaryOperatorDeclaratorAccess().getOverBinOperatorOverloadableBinaryOperatorParserRuleCall_2_0()); 
	    }
		lv_overBinOperator_2_0=ruleOverloadableBinaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinaryOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"overBinOperator",
        		lv_overBinOperator_2_0, 
        		"OverloadableBinaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBinaryOperatorDeclaratorAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBinaryOperatorDeclaratorAccess().getTypeTypeParserRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinaryOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBinaryOperatorDeclaratorAccess().getOtherNameIdentifierParserRuleCall_5_0()); 
	    }
		lv_otherName_5_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinaryOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"otherName",
        		lv_otherName_5_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBinaryOperatorDeclaratorAccess().getCommaKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBinaryOperatorDeclaratorAccess().getSecondTypeTypeParserRuleCall_7_0()); 
	    }
		lv_secondType_7_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinaryOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"secondType",
        		lv_secondType_7_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBinaryOperatorDeclaratorAccess().getSecondNameIdentifierParserRuleCall_8_0()); 
	    }
		lv_secondName_8_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinaryOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"secondName",
        		lv_secondName_8_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBinaryOperatorDeclaratorAccess().getRightParenthesisKeyword_9());
    }
)
;





// Entry rule entryRuleOverloadableBinaryOperator
entryRuleOverloadableBinaryOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOverloadableBinaryOperatorRule()); } 
	 iv_ruleOverloadableBinaryOperator=ruleOverloadableBinaryOperator 
	 { $current=$iv_ruleOverloadableBinaryOperator.current.getText(); }  
	 EOF 
;

// Rule OverloadableBinaryOperator
ruleOverloadableBinaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_OPERATOR_OR_SIGN_0=RULE_OPERATOR_OR_SIGN    {
		$current.merge(this_OPERATOR_OR_SIGN_0);
    }

    { 
    newLeafNode(this_OPERATOR_OR_SIGN_0, grammarAccess.getOverloadableBinaryOperatorAccess().getOPERATOR_OR_SIGNTerminalRuleCall_0()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getAsteriskKeyword_1()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getSolidusKeyword_2()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getPercentSignKeyword_3()); 
    }

    |    this_AMPERSAND_4=RULE_AMPERSAND    {
		$current.merge(this_AMPERSAND_4);
    }

    { 
    newLeafNode(this_AMPERSAND_4, grammarAccess.getOverloadableBinaryOperatorAccess().getAMPERSANDTerminalRuleCall_4()); 
    }

    |    this_BAR_5=RULE_BAR    {
		$current.merge(this_BAR_5);
    }

    { 
    newLeafNode(this_BAR_5, grammarAccess.getOverloadableBinaryOperatorAccess().getBARTerminalRuleCall_5()); 
    }

    |
	kw='^' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getCircumflexAccentKeyword_6()); 
    }

    |
	kw='<<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getLessThanSignLessThanSignKeyword_7()); 
    }

    |
	kw='>>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_8()); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getEqualsSignEqualsSignKeyword_9()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getExclamationMarkEqualsSignKeyword_10()); 
    }

    |    this_GREATER_THAN_11=RULE_GREATER_THAN    {
		$current.merge(this_GREATER_THAN_11);
    }

    { 
    newLeafNode(this_GREATER_THAN_11, grammarAccess.getOverloadableBinaryOperatorAccess().getGREATER_THANTerminalRuleCall_11()); 
    }

    |    this_LESS_THAN_12=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_12);
    }

    { 
    newLeafNode(this_LESS_THAN_12, grammarAccess.getOverloadableBinaryOperatorAccess().getLESS_THANTerminalRuleCall_12()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getGreaterThanSignEqualsSignKeyword_13()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableBinaryOperatorAccess().getLessThanSignEqualsSignKeyword_14()); 
    }
)
    ;





// Entry rule entryRuleUnaryOperatorDeclarator
entryRuleUnaryOperatorDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryOperatorDeclaratorRule()); }
	 iv_ruleUnaryOperatorDeclarator=ruleUnaryOperatorDeclarator 
	 { $current=$iv_ruleUnaryOperatorDeclarator.current; } 
	 EOF 
;

// Rule UnaryOperatorDeclarator
ruleUnaryOperatorDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryOperatorDeclaratorAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='operator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnaryOperatorDeclaratorAccess().getOperatorKeyword_1());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnaryOperatorDeclaratorAccess().getOverloadableUnaryOperatorParserRuleCall_2()); 
    }
ruleOverloadableUnaryOperator
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUnaryOperatorDeclaratorAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryOperatorDeclaratorAccess().getOtherTypeTypeParserRuleCall_4_0()); 
	    }
		lv_otherType_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"otherType",
        		lv_otherType_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryOperatorDeclaratorAccess().getNameIdentifierParserRuleCall_5_0()); 
	    }
		lv_name_5_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryOperatorDeclaratorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUnaryOperatorDeclaratorAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleOverloadableUnaryOperator
entryRuleOverloadableUnaryOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOverloadableUnaryOperatorRule()); } 
	 iv_ruleOverloadableUnaryOperator=ruleOverloadableUnaryOperator 
	 { $current=$iv_ruleOverloadableUnaryOperator.current.getText(); }  
	 EOF 
;

// Rule OverloadableUnaryOperator
ruleOverloadableUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_OPERATOR_OR_SIGN_0=RULE_OPERATOR_OR_SIGN    {
		$current.merge(this_OPERATOR_OR_SIGN_0);
    }

    { 
    newLeafNode(this_OPERATOR_OR_SIGN_0, grammarAccess.getOverloadableUnaryOperatorAccess().getOPERATOR_OR_SIGNTerminalRuleCall_0()); 
    }

    |    this_INCREMENT_DECREMENT_1=RULE_INCREMENT_DECREMENT    {
		$current.merge(this_INCREMENT_DECREMENT_1);
    }

    { 
    newLeafNode(this_INCREMENT_DECREMENT_1, grammarAccess.getOverloadableUnaryOperatorAccess().getINCREMENT_DECREMENTTerminalRuleCall_1()); 
    }

    |
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableUnaryOperatorAccess().getExclamationMarkKeyword_2()); 
    }

    |
	kw='~' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableUnaryOperatorAccess().getTildeKeyword_3()); 
    }

    |
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableUnaryOperatorAccess().getTrueKeyword_4()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverloadableUnaryOperatorAccess().getFalseKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleOperatorModifier
entryRuleOperatorModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorModifierRule()); } 
	 iv_ruleOperatorModifier=ruleOperatorModifier 
	 { $current=$iv_ruleOperatorModifier.current.getText(); }  
	 EOF 
;

// Rule OperatorModifier
ruleOperatorModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorModifierAccess().getPublicKeyword_0()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorModifierAccess().getStaticKeyword_1()); 
    }

    |
	kw='extern' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorModifierAccess().getExternKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleIndexerDeclaration
entryRuleIndexerDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexerDeclarationRule()); }
	 iv_ruleIndexerDeclaration=ruleIndexerDeclaration 
	 { $current=$iv_ruleIndexerDeclaration.current; } 
	 EOF 
;

// Rule IndexerDeclaration
ruleIndexerDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIndexerDeclarationAccess().getIdModifierIndexerModifierParserRuleCall_0_0()); 
	    }
		lv_idModifier_0_0=ruleIndexerModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexerDeclarationRule());
	        }
       		add(
       			$current, 
       			"idModifier",
        		lv_idModifier_0_0, 
        		"IndexerModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexerDeclarationAccess().getIndexerDeclaratorIndexerDeclaratorParserRuleCall_1_0()); 
	    }
		lv_indexerDeclarator_1_0=ruleIndexerDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexerDeclarationRule());
	        }
       		set(
       			$current, 
       			"indexerDeclarator",
        		lv_indexerDeclarator_1_0, 
        		"IndexerDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIndexerDeclarationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexerDeclarationAccess().getAccDeclarationAccessorDeclarationsParserRuleCall_3_0()); 
	    }
		lv_accDeclaration_3_0=ruleAccessorDeclarations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexerDeclarationRule());
	        }
       		set(
       			$current, 
       			"accDeclaration",
        		lv_accDeclaration_3_0, 
        		"AccessorDeclarations");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIndexerDeclarationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleIndexerDeclarator
entryRuleIndexerDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexerDeclaratorRule()); }
	 iv_ruleIndexerDeclarator=ruleIndexerDeclarator 
	 { $current=$iv_ruleIndexerDeclarator.current; } 
	 EOF 
;

// Rule IndexerDeclarator
ruleIndexerDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIndexerDeclaratorAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexerDeclaratorRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_1='this' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIndexerDeclaratorAccess().getThisKeyword_1_0_0());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIndexerDeclaratorAccess().getLeftSquareBracketKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexerDeclaratorAccess().getFormalListFormalParameterListParserRuleCall_1_0_2_0()); 
	    }
		lv_formalList_3_0=ruleFormalParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexerDeclaratorRule());
	        }
       		set(
       			$current, 
       			"formalList",
        		lv_formalList_3_0, 
        		"FormalParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIndexerDeclaratorAccess().getRightSquareBracketKeyword_1_0_3());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIndexerDeclaratorAccess().getQualifiedIdQualifiedIdentifierParserRuleCall_1_1_0_0()); 
	    }
		lv_qualifiedId_5_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexerDeclaratorRule());
	        }
       		set(
       			$current, 
       			"qualifiedId",
        		lv_qualifiedId_5_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIndexerDeclaratorAccess().getFullStopKeyword_1_1_1());
    }
	otherlv_7='this' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIndexerDeclaratorAccess().getThisKeyword_1_1_2());
    }
	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIndexerDeclaratorAccess().getLeftSquareBracketKeyword_1_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexerDeclaratorAccess().getFormalListFormalParameterListParserRuleCall_1_1_4_0()); 
	    }
		lv_formalList_9_0=ruleFormalParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexerDeclaratorRule());
	        }
       		set(
       			$current, 
       			"formalList",
        		lv_formalList_9_0, 
        		"FormalParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIndexerDeclaratorAccess().getRightSquareBracketKeyword_1_1_5());
    }
)))
;





// Entry rule entryRuleIndexerModifier
entryRuleIndexerModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexerModifierRule()); } 
	 iv_ruleIndexerModifier=ruleIndexerModifier 
	 { $current=$iv_ruleIndexerModifier.current.getText(); }  
	 EOF 
;

// Rule IndexerModifier
ruleIndexerModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getNewKeyword_0()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getPublicKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getProtectedKeyword_2()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getInternalKeyword_3()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getPrivateKeyword_4()); 
    }

    |
	kw='virtual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getVirtualKeyword_5()); 
    }

    |
	kw='sealed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getSealedKeyword_6()); 
    }

    |
	kw='override' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getOverrideKeyword_7()); 
    }

    |
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getAbstractKeyword_8()); 
    }

    |
	kw='extern' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexerModifierAccess().getExternKeyword_9()); 
    }
)
    ;





// Entry rule entryRuleEventDeclaration
entryRuleEventDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventDeclarationRule()); }
	 iv_ruleEventDeclaration=ruleEventDeclaration 
	 { $current=$iv_ruleEventDeclaration.current; } 
	 EOF 
;

// Rule EventDeclaration
ruleEventDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getEventDeclarationAccess().getEventModifierParserRuleCall_0()); 
    }
ruleEventModifier
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_1='event' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEventDeclarationAccess().getEventKeyword_1());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getEventDeclarationAccess().getTypeParserRuleCall_2()); 
    }
    this_Type_2=ruleType
    { 
        $current = $this_Type_2.current; 
        afterParserOrEnumRuleCall();
    }
((((
(
		{ 
	        newCompositeNode(grammarAccess.getEventDeclarationAccess().getVariableDeclaratorVariableDeclaratorParserRuleCall_3_0_0_0_0()); 
	    }
		lv_variableDeclarator_3_0=ruleVariableDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDeclarationRule());
	        }
       		add(
       			$current, 
       			"variableDeclarator",
        		lv_variableDeclarator_3_0, 
        		"VariableDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEventDeclarationAccess().getCommaKeyword_3_0_0_1());
    }
)+this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getEventDeclarationAccess().getSEMICOLONTerminalRuleCall_3_0_1()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getEventDeclarationAccess().getQIdentQualifiedIdentifierParserRuleCall_3_1_0_0()); 
	    }
		lv_qIdent_6_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDeclarationRule());
	        }
       		set(
       			$current, 
       			"qIdent",
        		lv_qIdent_6_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEventDeclarationAccess().getLeftCurlyBracketKeyword_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventDeclarationAccess().getEventAccessorDeclarationsEventAccessorDeclarationsParserRuleCall_3_1_2_0()); 
	    }
		lv_eventAccessorDeclarations_8_0=ruleEventAccessorDeclarations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDeclarationRule());
	        }
       		set(
       			$current, 
       			"eventAccessorDeclarations",
        		lv_eventAccessorDeclarations_8_0, 
        		"EventAccessorDeclarations");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEventDeclarationAccess().getRightCurlyBracketKeyword_3_1_3());
    }
)))
;





// Entry rule entryRuleEventAccessorDeclarations
entryRuleEventAccessorDeclarations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventAccessorDeclarationsRule()); }
	 iv_ruleEventAccessorDeclarations=ruleEventAccessorDeclarations 
	 { $current=$iv_ruleEventAccessorDeclarations.current; } 
	 EOF 
;

// Rule EventAccessorDeclarations
ruleEventAccessorDeclarations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccessorDeclarationsAccess().getAtt1AttributesParserRuleCall_0_0()); 
	    }
		lv_att1_0_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"att1",
        		lv_att1_0_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccessorDeclarationsAccess().getAddAccessorAddAccessorDeclarationParserRuleCall_1_0_0_0()); 
	    }
		lv_addAccessor_1_0=ruleAddAccessorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"addAccessor",
        		lv_addAccessor_1_0, 
        		"AddAccessorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccessorDeclarationsAccess().getAttAttributesParserRuleCall_1_0_1_0()); 
	    }
		lv_att_2_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"att",
        		lv_att_2_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccessorDeclarationsAccess().getRemovAccessorRemoveAccessorDeclarationParserRuleCall_1_0_2_0()); 
	    }
		lv_removAccessor_3_0=ruleRemoveAccessorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"removAccessor",
        		lv_removAccessor_3_0, 
        		"RemoveAccessorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccessorDeclarationsAccess().getRemovAccessorRemoveAccessorDeclarationParserRuleCall_1_1_0_0()); 
	    }
		lv_removAccessor_4_0=ruleRemoveAccessorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"removAccessor",
        		lv_removAccessor_4_0, 
        		"RemoveAccessorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccessorDeclarationsAccess().getAttAttributesParserRuleCall_1_1_1_0()); 
	    }
		lv_att_5_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"att",
        		lv_att_5_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccessorDeclarationsAccess().getAddAccessorAddAccessorDeclarationParserRuleCall_1_1_2_0()); 
	    }
		lv_addAccessor_6_0=ruleAddAccessorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"addAccessor",
        		lv_addAccessor_6_0, 
        		"AddAccessorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleRemoveAccessorDeclaration
entryRuleRemoveAccessorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveAccessorDeclarationRule()); }
	 iv_ruleRemoveAccessorDeclaration=ruleRemoveAccessorDeclaration 
	 { $current=$iv_ruleRemoveAccessorDeclaration.current; } 
	 EOF 
;

// Rule RemoveAccessorDeclaration
ruleRemoveAccessorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='remove' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRemoveAccessorDeclarationAccess().getRemoveKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRemoveAccessorDeclarationAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAddAccessorDeclaration
entryRuleAddAccessorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddAccessorDeclarationRule()); }
	 iv_ruleAddAccessorDeclaration=ruleAddAccessorDeclaration 
	 { $current=$iv_ruleAddAccessorDeclaration.current; } 
	 EOF 
;

// Rule AddAccessorDeclaration
ruleAddAccessorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='add' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddAccessorDeclarationAccess().getAddKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAddAccessorDeclarationAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEventModifier
entryRuleEventModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventModifierRule()); } 
	 iv_ruleEventModifier=ruleEventModifier 
	 { $current=$iv_ruleEventModifier.current.getText(); }  
	 EOF 
;

// Rule EventModifier
ruleEventModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getNewKeyword_0()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getPublicKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getProtectedKeyword_2()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getInternalKeyword_3()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getPrivateKeyword_4()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getStaticKeyword_5()); 
    }

    |
	kw='virtual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getVirtualKeyword_6()); 
    }

    |
	kw='sealed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getSealedKeyword_7()); 
    }

    |
	kw='override' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getOverrideKeyword_8()); 
    }

    |
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getAbstractKeyword_9()); 
    }

    |
	kw='extern' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEventModifierAccess().getExternKeyword_10()); 
    }
)
    ;





// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyDeclarationRule()); }
	 iv_rulePropertyDeclaration=rulePropertyDeclaration 
	 { $current=$iv_rulePropertyDeclaration.current; } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getPropertyModifierParserRuleCall_0()); 
    }
rulePropertyModifier
    { 
        afterParserOrEnumRuleCall();
    }
)*
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getTypeParserRuleCall_1()); 
    }
    this_Type_1=ruleType
    { 
        $current = $this_Type_1.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getQualifiedIdQualifiedIdentifierParserRuleCall_2_0()); 
	    }
		lv_qualifiedId_2_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"qualifiedId",
        		lv_qualifiedId_2_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPropertyDeclarationAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getAccDeclarateAccessorDeclarationsParserRuleCall_4_0()); 
	    }
		lv_accDeclarate_4_0=ruleAccessorDeclarations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"accDeclarate",
        		lv_accDeclarate_4_0, 
        		"AccessorDeclarations");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPropertyDeclarationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAccessorDeclarations
entryRuleAccessorDeclarations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccessorDeclarationsRule()); }
	 iv_ruleAccessorDeclarations=ruleAccessorDeclarations 
	 { $current=$iv_ruleAccessorDeclarations.current; } 
	 EOF 
;

// Rule AccessorDeclarations
ruleAccessorDeclarations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAccessorDeclarationsAccess().getAttAttributesParserRuleCall_0_0()); 
	    }
		lv_att_0_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"att",
        		lv_att_0_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getAccessorDeclarationsAccess().getGetAccGetAccessorDeclarationParserRuleCall_1_0_0_0()); 
	    }
		lv_getAcc_1_0=ruleGetAccessorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"getAcc",
        		lv_getAcc_1_0, 
        		"GetAccessorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessorDeclarationsAccess().getAtt2AttributesParserRuleCall_1_0_1_0()); 
	    }
		lv_att2_2_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"att2",
        		lv_att2_2_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessorDeclarationsAccess().getSetAccSetAccessorDeclarationParserRuleCall_1_0_2_0()); 
	    }
		lv_setAcc_3_0=ruleSetAccessorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"setAcc",
        		lv_setAcc_3_0, 
        		"SetAccessorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAccessorDeclarationsAccess().getSetAccSetAccessorDeclarationParserRuleCall_1_1_0_0()); 
	    }
		lv_setAcc_4_0=ruleSetAccessorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"setAcc",
        		lv_setAcc_4_0, 
        		"SetAccessorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessorDeclarationsAccess().getAtt2AttributesParserRuleCall_1_1_1_0()); 
	    }
		lv_att2_5_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"att2",
        		lv_att2_5_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessorDeclarationsAccess().getGetAccGetAccessorDeclarationParserRuleCall_1_1_2_0()); 
	    }
		lv_getAcc_6_0=ruleGetAccessorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessorDeclarationsRule());
	        }
       		set(
       			$current, 
       			"getAcc",
        		lv_getAcc_6_0, 
        		"GetAccessorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?)))
;





// Entry rule entryRuleSetAccessorDeclaration
entryRuleSetAccessorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetAccessorDeclarationRule()); }
	 iv_ruleSetAccessorDeclaration=ruleSetAccessorDeclaration 
	 { $current=$iv_ruleSetAccessorDeclaration.current; } 
	 EOF 
;

// Rule SetAccessorDeclaration
ruleSetAccessorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSetAccessorDeclarationAccess().getSetKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSetAccessorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_1()); 
    }
    this_MaybeEmptyBlock_1=ruleMaybeEmptyBlock
    { 
        $current = $this_MaybeEmptyBlock_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGetAccessorDeclaration
entryRuleGetAccessorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGetAccessorDeclarationRule()); }
	 iv_ruleGetAccessorDeclaration=ruleGetAccessorDeclaration 
	 { $current=$iv_ruleGetAccessorDeclaration.current; } 
	 EOF 
;

// Rule GetAccessorDeclaration
ruleGetAccessorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='get' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGetAccessorDeclarationAccess().getGetKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGetAccessorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_1()); 
    }
    this_MaybeEmptyBlock_1=ruleMaybeEmptyBlock
    { 
        $current = $this_MaybeEmptyBlock_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePropertyModifier
entryRulePropertyModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyModifierRule()); } 
	 iv_rulePropertyModifier=rulePropertyModifier 
	 { $current=$iv_rulePropertyModifier.current.getText(); }  
	 EOF 
;

// Rule PropertyModifier
rulePropertyModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getNewKeyword_0()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getPublicKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getProtectedKeyword_2()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getInternalKeyword_3()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getPrivateKeyword_4()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getStaticKeyword_5()); 
    }

    |
	kw='virtual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getVirtualKeyword_6()); 
    }

    |
	kw='sealed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getSealedKeyword_7()); 
    }

    |
	kw='override' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getOverrideKeyword_8()); 
    }

    |
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getAbstractKeyword_9()); 
    }

    |
	kw='extern' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyModifierAccess().getExternKeyword_10()); 
    }
)
    ;





// Entry rule entryRuleMethodDeclaration
entryRuleMethodDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodDeclarationRule()); }
	 iv_ruleMethodDeclaration=ruleMethodDeclaration 
	 { $current=$iv_ruleMethodDeclaration.current; } 
	 EOF 
;

// Rule MethodDeclaration
ruleMethodDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodDeclarationAccess().getMethodHeaderMethodHeaderParserRuleCall_0_0()); 
	    }
		lv_methodHeader_0_0=ruleMethodHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
	        }
       		set(
       			$current, 
       			"methodHeader",
        		lv_methodHeader_0_0, 
        		"MethodHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodDeclarationAccess().getMaybeEmptyMaybeEmptyBlockParserRuleCall_1_0()); 
	    }
		lv_maybeEmpty_1_0=ruleMaybeEmptyBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
	        }
       		set(
       			$current, 
       			"maybeEmpty",
        		lv_maybeEmpty_1_0, 
        		"MaybeEmptyBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMethodHeader
entryRuleMethodHeader returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodHeaderRule()); }
	 iv_ruleMethodHeader=ruleMethodHeader 
	 { $current=$iv_ruleMethodHeader.current; } 
	 EOF 
;

// Rule MethodHeader
ruleMethodHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getMethodHeaderAccess().getAttributesParserRuleCall_0()); 
    }
    this_Attributes_0=ruleAttributes
    { 
        $current = $this_Attributes_0.current; 
        afterParserOrEnumRuleCall();
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getMethodHeaderAccess().getMethodModifierParserRuleCall_1()); 
    }
ruleMethodModifier
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getTypeOrVoidTypeOrVoidParserRuleCall_2_0()); 
	    }
		lv_typeOrVoid_2_0=ruleTypeOrVoid		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"typeOrVoid",
        		lv_typeOrVoid_2_0, 
        		"TypeOrVoid");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getQualifiedIDQualifiedIdentifierParserRuleCall_3_0()); 
	    }
		lv_qualifiedID_3_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"qualifiedID",
        		lv_qualifiedID_3_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMethodHeaderAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getFormalParametersFormalParameterListParserRuleCall_5_0()); 
	    }
		lv_formalParameters_5_0=ruleFormalParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"formalParameters",
        		lv_formalParameters_5_0, 
        		"FormalParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMethodHeaderAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleFormalParameterList
entryRuleFormalParameterList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormalParameterListRule()); }
	 iv_ruleFormalParameterList=ruleFormalParameterList 
	 { $current=$iv_ruleFormalParameterList.current; } 
	 EOF 
;

// Rule FormalParameterList
ruleFormalParameterList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterListAccess().getFixedParametersParserRuleCall_0()); 
    }
    this_FixedParameters_0=ruleFixedParameters
    { 
        $current = $this_FixedParameters_0.current; 
        afterParserOrEnumRuleCall();
    }
((	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFormalParameterListAccess().getCommaKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormalParameterListAccess().getParameterArrayParameterArrayParserRuleCall_1_0_1_0()); 
	    }
		lv_parameterArray_2_0=ruleParameterArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalParameterListRule());
	        }
       		set(
       			$current, 
       			"parameterArray",
        		lv_parameterArray_2_0, 
        		"ParameterArray");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFormalParameterListAccess().getParameterArrayParameterArrayParserRuleCall_1_1_0()); 
	    }
		lv_parameterArray_3_0=ruleParameterArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalParameterListRule());
	        }
       		set(
       			$current, 
       			"parameterArray",
        		lv_parameterArray_3_0, 
        		"ParameterArray");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleParameterArray
entryRuleParameterArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterArrayRule()); }
	 iv_ruleParameterArray=ruleParameterArray 
	 { $current=$iv_ruleParameterArray.current; } 
	 EOF 
;

// Rule ParameterArray
ruleParameterArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterArrayAccess().getParameterArrayAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterArrayAccess().getAttAttributesParserRuleCall_1_0()); 
	    }
		lv_att_1_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterArrayRule());
	        }
       		set(
       			$current, 
       			"att",
        		lv_att_1_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='params' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParameterArrayAccess().getParamsKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterArrayAccess().getArrayArrayTypeParserRuleCall_3_0()); 
	    }
		lv_array_3_0=ruleArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterArrayRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_3_0, 
        		"ArrayType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterArrayAccess().getNameIdentifierParserRuleCall_4_0()); 
	    }
		lv_name_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterArrayRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFixedParameters
entryRuleFixedParameters returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixedParametersRule()); }
	 iv_ruleFixedParameters=ruleFixedParameters 
	 { $current=$iv_ruleFixedParameters.current; } 
	 EOF 
;

// Rule FixedParameters
ruleFixedParameters returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFixedParametersAccess().getFixParametersFixedParameterParserRuleCall_0_0()); 
	    }
		lv_fixParameters_0_0=ruleFixedParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixedParametersRule());
	        }
       		add(
       			$current, 
       			"fixParameters",
        		lv_fixParameters_0_0, 
        		"FixedParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFixedParametersAccess().getCommaKeyword_1());
    }
)+
;





// Entry rule entryRuleFixedParameter
entryRuleFixedParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixedParameterRule()); }
	 iv_ruleFixedParameter=ruleFixedParameter 
	 { $current=$iv_ruleFixedParameter.current; } 
	 EOF 
;

// Rule FixedParameter
ruleFixedParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedParameterAccess().getParameterModifierParserRuleCall_0()); 
    }
ruleParameterModifier
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFixedParameterAccess().getTypeTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixedParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFixedParameterAccess().getNameIdentifierParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixedParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParameterModifier
entryRuleParameterModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterModifierRule()); } 
	 iv_ruleParameterModifier=ruleParameterModifier 
	 { $current=$iv_ruleParameterModifier.current.getText(); }  
	 EOF 
;

// Rule ParameterModifier
ruleParameterModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='ref' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterModifierAccess().getRefKeyword_0()); 
    }

    |
	kw='out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterModifierAccess().getOutKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleTypeOrVoid
entryRuleTypeOrVoid returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeOrVoidRule()); }
	 iv_ruleTypeOrVoid=ruleTypeOrVoid 
	 { $current=$iv_ruleTypeOrVoid.current; } 
	 EOF 
;

// Rule TypeOrVoid
ruleTypeOrVoid returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeOrVoidAccess().getTypeOrVoidAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeOrVoidAccess().getTypeTypeParserRuleCall_0_1_0()); 
	    }
		lv_type_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeOrVoidRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeOrVoidAccess().getVoidAction_1_0(),
            $current);
    }
)	otherlv_3='void' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTypeOrVoidAccess().getVoidKeyword_1_1());
    }
))
;





// Entry rule entryRuleMethodModifier
entryRuleMethodModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodModifierRule()); } 
	 iv_ruleMethodModifier=ruleMethodModifier 
	 { $current=$iv_ruleMethodModifier.current.getText(); }  
	 EOF 
;

// Rule MethodModifier
ruleMethodModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getNewKeyword_0()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getPublicKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getProtectedKeyword_2()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getInternalKeyword_3()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getPrivateKeyword_4()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getStaticKeyword_5()); 
    }

    |
	kw='virtual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getVirtualKeyword_6()); 
    }

    |
	kw='sealed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getSealedKeyword_7()); 
    }

    |
	kw='override' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getOverrideKeyword_8()); 
    }

    |
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getAbstractKeyword_9()); 
    }

    |
	kw='extern' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getExternKeyword_10()); 
    }
)
    ;





// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldDeclarationRule()); }
	 iv_ruleFieldDeclaration=ruleFieldDeclaration 
	 { $current=$iv_ruleFieldDeclaration.current; } 
	 EOF 
;

// Rule FieldDeclaration
ruleFieldDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFieldDeclarationAccess().getFieldModifierParserRuleCall_0()); 
    }
ruleFieldModifier
    { 
        afterParserOrEnumRuleCall();
    }
)*
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFieldDeclarationAccess().getTypeParserRuleCall_1()); 
    }
    this_Type_1=ruleType
    { 
        $current = $this_Type_1.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFieldDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_2_0_0()); 
	    }
		lv_variables_2_0=ruleVariableDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldDeclarationRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_2_0, 
        		"VariableDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldDeclarationAccess().getCommaKeyword_2_1());
    }
)+this_SEMICOLON_4=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_4, grammarAccess.getFieldDeclarationAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleVariableDeclarator
entryRuleVariableDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDeclaratorRule()); }
	 iv_ruleVariableDeclarator=ruleVariableDeclarator 
	 { $current=$iv_ruleVariableDeclarator.current; } 
	 EOF 
;

// Rule VariableDeclarator
ruleVariableDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclaratorAccess().getNameIdentifierParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclaratorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclaratorAccess().getVariableVariableInitializerParserRuleCall_1_1_0()); 
	    }
		lv_variable_2_0=ruleVariableInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclaratorRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"VariableInitializer");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleVariableInitializer
entryRuleVariableInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableInitializerRule()); }
	 iv_ruleVariableInitializer=ruleVariableInitializer 
	 { $current=$iv_ruleVariableInitializer.current; } 
	 EOF 
;

// Rule VariableInitializer
ruleVariableInitializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVariableInitializerAccess().getExpressionParserRuleCall_0()); 
    }
    this_Expression_0=ruleExpression
    { 
        $current = $this_Expression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVariableInitializerAccess().getArrayInitializerParserRuleCall_1()); 
    }
    this_ArrayInitializer_1=ruleArrayInitializer
    { 
        $current = $this_ArrayInitializer_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArrayInitializer
entryRuleArrayInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayInitializerRule()); }
	 iv_ruleArrayInitializer=ruleArrayInitializer 
	 { $current=$iv_ruleArrayInitializer.current; } 
	 EOF 
;

// Rule ArrayInitializer
ruleArrayInitializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getArrayInitializerAccess().getArrayInitializerAction_0_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0_1());
    }
	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_0_2());
    }
)
    |(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getArrayInitializerAccess().getVariableInitalizersVariableInitializerParserRuleCall_1_1_0_0()); 
	    }
		lv_variableInitalizers_4_0=ruleVariableInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayInitializerRule());
	        }
       		add(
       			$current, 
       			"variableInitalizers",
        		lv_variableInitalizers_4_0, 
        		"VariableInitializer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArrayInitializerAccess().getCommaKeyword_1_1_1());
    }
)+(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArrayInitializerAccess().getCommaKeyword_1_2());
    }
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_1_3());
    }
))
;





// Entry rule entryRuleFieldModifier
entryRuleFieldModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldModifierRule()); } 
	 iv_ruleFieldModifier=ruleFieldModifier 
	 { $current=$iv_ruleFieldModifier.current.getText(); }  
	 EOF 
;

// Rule FieldModifier
ruleFieldModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getNewKeyword_0()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getPublicKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getProtectedKeyword_2()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getInternalKeyword_3()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getPrivateKeyword_4()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getStaticKeyword_5()); 
    }

    |
	kw='readonly' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getReadonlyKeyword_6()); 
    }

    |
	kw='volatile' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getVolatileKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleConstantDeclaration
entryRuleConstantDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantDeclarationRule()); }
	 iv_ruleConstantDeclaration=ruleConstantDeclaration 
	 { $current=$iv_ruleConstantDeclaration.current; } 
	 EOF 
;

// Rule ConstantDeclaration
ruleConstantDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstantDeclarationAccess().getConstantModifierParserRuleCall_0()); 
    }
ruleConstantModifier
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_1='const' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantDeclarationAccess().getConstKeyword_1());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstantDeclarationAccess().getTypeParserRuleCall_2()); 
    }
    this_Type_2=ruleType
    { 
        $current = $this_Type_2.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstantDeclarationAccess().getConstDeclaratorsConstantDeclaratorParserRuleCall_3_0_0()); 
	    }
		lv_constDeclarators_3_0=ruleConstantDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantDeclarationRule());
	        }
       		add(
       			$current, 
       			"constDeclarators",
        		lv_constDeclarators_3_0, 
        		"ConstantDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstantDeclarationAccess().getCommaKeyword_3_1());
    }
)+this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getConstantDeclarationAccess().getSEMICOLONTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleConstantModifier
entryRuleConstantModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantModifierRule()); } 
	 iv_ruleConstantModifier=ruleConstantModifier 
	 { $current=$iv_ruleConstantModifier.current.getText(); }  
	 EOF 
;

// Rule ConstantModifier
ruleConstantModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstantModifierAccess().getNewKeyword_0()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstantModifierAccess().getPublicKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstantModifierAccess().getProtectedKeyword_2()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstantModifierAccess().getInternalKeyword_3()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstantModifierAccess().getPrivateKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleConstantDeclarator
entryRuleConstantDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantDeclaratorRule()); }
	 iv_ruleConstantDeclarator=ruleConstantDeclarator 
	 { $current=$iv_ruleConstantDeclarator.current; } 
	 EOF 
;

// Rule ConstantDeclarator
ruleConstantDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstantDeclaratorAccess().getConstantDeclaratorAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantDeclaratorAccess().getNameIdentifierParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantDeclaratorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstantDeclaratorAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantDeclaratorAccess().getExpExpressionParserRuleCall_3_0()); 
	    }
		lv_exp_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantDeclaratorRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassBase
entryRuleClassBase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassBaseRule()); }
	 iv_ruleClassBase=ruleClassBase 
	 { $current=$iv_ruleClassBase.current; } 
	 EOF 
;

// Rule ClassBase
ruleClassBase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassBaseAccess().getColonKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassBaseAccess().getQualifiedIdentifierListParserRuleCall_1_0()); 
    }
    this_QualifiedIdentifierList_1=ruleQualifiedIdentifierList
    { 
        $current = $this_QualifiedIdentifierList_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassBaseAccess().getBuiltInClassTypeParserRuleCall_1_1_0()); 
    }
ruleBuiltInClassType
    { 
        afterParserOrEnumRuleCall();
    }
(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClassBaseAccess().getCommaKeyword_1_1_1_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassBaseAccess().getQualifiedIdentifierListParserRuleCall_1_1_1_1()); 
    }
    this_QualifiedIdentifierList_4=ruleQualifiedIdentifierList
    { 
        $current = $this_QualifiedIdentifierList_4.current; 
        afterParserOrEnumRuleCall();
    }
)?)))
;





// Entry rule entryRuleQualifiedIdentifierList
entryRuleQualifiedIdentifierList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedIdentifierListRule()); }
	 iv_ruleQualifiedIdentifierList=ruleQualifiedIdentifierList 
	 { $current=$iv_ruleQualifiedIdentifierList.current; } 
	 EOF 
;

// Rule QualifiedIdentifierList
ruleQualifiedIdentifierList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getQualifiedIdentifierListAccess().getIdsQualifiedIdentifierParserRuleCall_0_0()); 
	    }
		lv_ids_0_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualifiedIdentifierListRule());
	        }
       		add(
       			$current, 
       			"ids",
        		lv_ids_0_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualifiedIdentifierListAccess().getCommaKeyword_1());
    }
)+
;





// Entry rule entryRuleClassModifier
entryRuleClassModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassModifierRule()); } 
	 iv_ruleClassModifier=ruleClassModifier 
	 { $current=$iv_ruleClassModifier.current.getText(); }  
	 EOF 
;

// Rule ClassModifier
ruleClassModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getClassModifierAccess().getModifierParserRuleCall_0()); 
    }
    this_Modifier_0=ruleModifier    {
		$current.merge(this_Modifier_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getClassModifierAccess().getAbstractKeyword_1()); 
    }

    |
	kw='sealed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getClassModifierAccess().getSealedKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleGlobalAttributes
entryRuleGlobalAttributes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalAttributesRule()); }
	 iv_ruleGlobalAttributes=ruleGlobalAttributes 
	 { $current=$iv_ruleGlobalAttributes.current; } 
	 EOF 
;

// Rule GlobalAttributes
ruleGlobalAttributes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getGlobalAttributesAccess().getGlobalAttributesAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalAttributesAccess().getGlobalAttSectionsGlobalAttributeSectionParserRuleCall_1_0()); 
	    }
		lv_globalAttSections_1_0=ruleGlobalAttributeSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalAttributesRule());
	        }
       		add(
       			$current, 
       			"globalAttSections",
        		lv_globalAttSections_1_0, 
        		"GlobalAttributeSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleGlobalAttributeSection
entryRuleGlobalAttributeSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalAttributeSectionRule()); }
	 iv_ruleGlobalAttributeSection=ruleGlobalAttributeSection 
	 { $current=$iv_ruleGlobalAttributeSection.current; } 
	 EOF 
;

// Rule GlobalAttributeSection
ruleGlobalAttributeSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGlobalAttributeSectionAccess().getLeftSquareBracketKeyword_0());
    }
	otherlv_1='assembly' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGlobalAttributeSectionAccess().getAssemblyKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGlobalAttributeSectionAccess().getColonKeyword_2());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGlobalAttributeSectionAccess().getAttributeListParserRuleCall_3()); 
    }
    this_AttributeList_3=ruleAttributeList
    { 
        $current = $this_AttributeList_3.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGlobalAttributeSectionAccess().getCommaKeyword_4());
    }
)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGlobalAttributeSectionAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAttributes
entryRuleAttributes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributesRule()); }
	 iv_ruleAttributes=ruleAttributes 
	 { $current=$iv_ruleAttributes.current; } 
	 EOF 
;

// Rule Attributes
ruleAttributes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributesAccess().getAttributesAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributesAccess().getAttributesAttributeSectionParserRuleCall_1_0()); 
	    }
		lv_attributes_1_0=ruleAttributeSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributesRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_1_0, 
        		"AttributeSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAttributeSection
entryRuleAttributeSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeSectionRule()); }
	 iv_ruleAttributeSection=ruleAttributeSection 
	 { $current=$iv_ruleAttributeSection.current; } 
	 EOF 
;

// Rule AttributeSection
ruleAttributeSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeSectionAccess().getLeftSquareBracketKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeSectionAccess().getAttributeTargetParserRuleCall_1_0()); 
    }
ruleAttributeTarget
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeSectionAccess().getColonKeyword_1_1());
    }
)?
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeSectionAccess().getAttributeListParserRuleCall_2()); 
    }
    this_AttributeList_3=ruleAttributeList
    { 
        $current = $this_AttributeList_3.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeSectionAccess().getCommaKeyword_3());
    }
)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeSectionAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleAttributeTarget
entryRuleAttributeTarget returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeTargetRule()); } 
	 iv_ruleAttributeTarget=ruleAttributeTarget 
	 { $current=$iv_ruleAttributeTarget.current.getText(); }  
	 EOF 
;

// Rule AttributeTarget
ruleAttributeTarget returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='field' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTargetAccess().getFieldKeyword_0()); 
    }

    |
	kw='event' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTargetAccess().getEventKeyword_1()); 
    }

    |
	kw='method' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTargetAccess().getMethodKeyword_2()); 
    }

    |
	kw='module' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTargetAccess().getModuleKeyword_3()); 
    }

    |
	kw='param' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTargetAccess().getParamKeyword_4()); 
    }

    |
	kw='property' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTargetAccess().getPropertyKeyword_5()); 
    }

    |
	kw='return' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTargetAccess().getReturnKeyword_6()); 
    }

    |
	kw='type' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTargetAccess().getTypeKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleAttributeList
entryRuleAttributeList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeListRule()); }
	 iv_ruleAttributeList=ruleAttributeList 
	 { $current=$iv_ruleAttributeList.current; } 
	 EOF 
;

// Rule AttributeList
ruleAttributeList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeListAccess().getAttributeListAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeListAccess().getAttributesAttributeParserRuleCall_1_0_0()); 
	    }
		lv_attributes_1_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeListRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_1_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeListAccess().getCommaKeyword_1_1());
    }
)+)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getAttNameAttributeNameParserRuleCall_0_0()); 
	    }
		lv_attName_0_0=ruleAttributeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"attName",
        		lv_attName_0_0, 
        		"AttributeName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getAttArgumentsAttributeArgumentsParserRuleCall_1_0()); 
	    }
		lv_attArguments_1_0=ruleAttributeArguments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"attArguments",
        		lv_attArguments_1_0, 
        		"AttributeArguments");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleAttributeArguments
entryRuleAttributeArguments returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeArgumentsRule()); }
	 iv_ruleAttributeArguments=ruleAttributeArguments 
	 { $current=$iv_ruleAttributeArguments.current; } 
	 EOF 
;

// Rule AttributeArguments
ruleAttributeArguments returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeArgumentsAccess().getAttributeArgumentsAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeArgumentsAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeArgumentsAccess().getExpresionsExpressionListParserRuleCall_2_0()); 
	    }
		lv_expresions_2_0=ruleExpressionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeArgumentsRule());
	        }
       		add(
       			$current, 
       			"expresions",
        		lv_expresions_2_0, 
        		"ExpressionList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeArgumentsAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleExpressionList
entryRuleExpressionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionListRule()); }
	 iv_ruleExpressionList=ruleExpressionList 
	 { $current=$iv_ruleExpressionList.current; } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionListAccess().getExpresionsExpressionParserRuleCall_0_0()); 
	    }
		lv_expresions_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionListRule());
	        }
       		add(
       			$current, 
       			"expresions",
        		lv_expresions_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_1());
    }
)+
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionAccess().getExpressionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getUnaryUnaryExpressionParserRuleCall_1_0()); 
	    }
		lv_unary_1_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"unary",
        		lv_unary_1_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getExp2Expression2ParserRuleCall_2_0_0()); 
	    }
		lv_exp2_2_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"exp2",
        		lv_exp2_2_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_BAR_3=RULE_BAR
    { 
    newLeafNode(this_BAR_3, grammarAccess.getExpressionAccess().getBARTerminalRuleCall_2_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getExpExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_exp_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getOtherExp2Expression2ParserRuleCall_2_1_2_0()); 
	    }
		lv_otherExp2_5_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"otherExp2",
        		lv_otherExp2_5_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleExpression2
entryRuleExpression2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpression2Rule()); }
	 iv_ruleExpression2=ruleExpression2 
	 { $current=$iv_ruleExpression2.current; } 
	 EOF 
;

// Rule Expression2
ruleExpression2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpression2Access().getExpression2Action_0(),
            $current);
    }
)((	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpression2Access().getQuestionMarkKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExpExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_internalExp_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp",
        		lv_internalExp_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpression2Access().getColonKeyword_1_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_0_3_0()); 
	    }
		lv_exp_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_0_4_0()); 
	    }
		lv_internalExp2_5_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_5_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_6='||' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpression2Access().getVerticalLineVerticalLineKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_exp_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_1_2_0()); 
	    }
		lv_internalExp2_8_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_8_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_9='&&' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExpression2Access().getAmpersandAmpersandKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_2_1_0()); 
	    }
		lv_exp_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_10_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_2_2_0()); 
	    }
		lv_internalExp2_11_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_11_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_BAR_12=RULE_BAR
    { 
    newLeafNode(this_BAR_12, grammarAccess.getExpression2Access().getBARTerminalRuleCall_1_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_3_1_0()); 
	    }
		lv_exp_13_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_13_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_3_2_0()); 
	    }
		lv_internalExp2_14_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_14_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_15='^' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getExpression2Access().getCircumflexAccentKeyword_1_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_4_1_0()); 
	    }
		lv_exp_16_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_16_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_4_2_0()); 
	    }
		lv_internalExp2_17_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_17_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_AMPERSAND_18=RULE_AMPERSAND
    { 
    newLeafNode(this_AMPERSAND_18, grammarAccess.getExpression2Access().getAMPERSANDTerminalRuleCall_1_5_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_5_1_0()); 
	    }
		lv_exp_19_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_19_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_5_2_0()); 
	    }
		lv_internalExp2_20_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_20_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_EXPRESSION_EQUALITY_OPERATOR_21=RULE_EXPRESSION_EQUALITY_OPERATOR
    { 
    newLeafNode(this_EXPRESSION_EQUALITY_OPERATOR_21, grammarAccess.getExpression2Access().getEXPRESSION_EQUALITY_OPERATORTerminalRuleCall_1_6_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_6_1_0()); 
	    }
		lv_exp_22_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_22_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_6_2_0()); 
	    }
		lv_internalExp2_23_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_23_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpression2Access().getExpressionRelationalOperatorParserRuleCall_1_7_0()); 
    }
ruleExpressionRelationalOperator
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_7_1_0()); 
	    }
		lv_exp_25_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_25_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_7_2_0()); 
	    }
		lv_internalExp2_26_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_26_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_27='is' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getExpression2Access().getIsKeyword_1_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getBuildInTypeBuiltInTypeParserRuleCall_1_8_1_0()); 
	    }
		lv_buildInType_28_0=ruleBuiltInType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"buildInType",
        		lv_buildInType_28_0, 
        		"BuiltInType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_8_2_0()); 
	    }
		lv_internalExp2_29_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_29_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpression2Access().getExpressionShiftOperatorParserRuleCall_1_9_0()); 
    }
ruleExpressionShiftOperator
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_9_1_0()); 
	    }
		lv_exp_31_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_31_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_9_2_0()); 
	    }
		lv_internalExp2_32_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_32_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_OPERATOR_OR_SIGN_33=RULE_OPERATOR_OR_SIGN
    { 
    newLeafNode(this_OPERATOR_OR_SIGN_33, grammarAccess.getExpression2Access().getOPERATOR_OR_SIGNTerminalRuleCall_1_10_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_10_1_0()); 
	    }
		lv_exp_34_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_34_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_10_2_0()); 
	    }
		lv_internalExp2_35_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_35_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_36='*' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getExpression2Access().getAsteriskKeyword_1_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_11_1_0()); 
	    }
		lv_exp_37_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_37_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_11_2_0()); 
	    }
		lv_internalExp2_38_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_38_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_39='/' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getExpression2Access().getSolidusKeyword_1_12_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_12_1_0()); 
	    }
		lv_exp_40_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_40_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_12_2_0()); 
	    }
		lv_internalExp2_41_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_41_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_42='%' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getExpression2Access().getPercentSignKeyword_1_13_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getExpExpressionParserRuleCall_1_13_1_0()); 
	    }
		lv_exp_43_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_43_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression2Access().getInternalExp2Expression2ParserRuleCall_1_13_2_0()); 
	    }
		lv_internalExp2_44_0=ruleExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression2Rule());
	        }
       		add(
       			$current, 
       			"internalExp2",
        		lv_internalExp2_44_0, 
        		"Expression2");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current; } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpUnaryOperatorExpressionUnaryOperatorParserRuleCall_0_1_0_0()); 
	    }
		lv_expUnaryOperator_1_0=ruleExpressionUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expUnaryOperator",
        		lv_expUnaryOperator_1_0, 
        		"ExpressionUnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnaryExpressionAccess().getLeftParenthesisKeyword_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getTypeTypeParserRuleCall_0_1_1_1_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnaryExpressionAccess().getRightParenthesisKeyword_0_1_1_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getUnaryExpUnaryExpressionParserRuleCall_0_2_0()); 
	    }
		lv_unaryExp_5_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"unaryExp",
        		lv_unaryExp_5_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpPrimaryExpressionParserRuleCall_1_0()); 
	    }
		lv_primaryExp_6_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"primaryExp",
        		lv_primaryExp_6_0, 
        		"PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExpressionUnaryOperator
entryRuleExpressionUnaryOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionUnaryOperatorRule()); } 
	 iv_ruleExpressionUnaryOperator=ruleExpressionUnaryOperator 
	 { $current=$iv_ruleExpressionUnaryOperator.current.getText(); }  
	 EOF 
;

// Rule ExpressionUnaryOperator
ruleExpressionUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_OPERATOR_OR_PUNCTUATOR_0=RULE_OPERATOR_OR_PUNCTUATOR    {
		$current.merge(this_OPERATOR_OR_PUNCTUATOR_0);
    }

    { 
    newLeafNode(this_OPERATOR_OR_PUNCTUATOR_0, grammarAccess.getExpressionUnaryOperatorAccess().getOPERATOR_OR_PUNCTUATORTerminalRuleCall_0()); 
    }

    |    this_INCREMENT_DECREMENT_1=RULE_INCREMENT_DECREMENT    {
		$current.merge(this_INCREMENT_DECREMENT_1);
    }

    { 
    newLeafNode(this_INCREMENT_DECREMENT_1, grammarAccess.getExpressionUnaryOperatorAccess().getINCREMENT_DECREMENTTerminalRuleCall_1()); 
    }

    |
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionUnaryOperatorAccess().getExclamationMarkKeyword_2()); 
    }

    |
	kw='~' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionUnaryOperatorAccess().getTildeKeyword_3()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionUnaryOperatorAccess().getAsteriskKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleExpressionShiftOperator
entryRuleExpressionShiftOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionShiftOperatorRule()); } 
	 iv_ruleExpressionShiftOperator=ruleExpressionShiftOperator 
	 { $current=$iv_ruleExpressionShiftOperator.current.getText(); }  
	 EOF 
;

// Rule ExpressionShiftOperator
ruleExpressionShiftOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='<<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionShiftOperatorAccess().getLessThanSignLessThanSignKeyword_0()); 
    }

    |
	kw='>>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionShiftOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleExpressionRelationalOperator
entryRuleExpressionRelationalOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRelationalOperatorRule()); } 
	 iv_ruleExpressionRelationalOperator=ruleExpressionRelationalOperator 
	 { $current=$iv_ruleExpressionRelationalOperator.current.getText(); }  
	 EOF 
;

// Rule ExpressionRelationalOperator
ruleExpressionRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_LESS_THAN_0=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_0);
    }

    { 
    newLeafNode(this_LESS_THAN_0, grammarAccess.getExpressionRelationalOperatorAccess().getLESS_THANTerminalRuleCall_0()); 
    }

    |    this_GREATER_THAN_1=RULE_GREATER_THAN    {
		$current.merge(this_GREATER_THAN_1);
    }

    { 
    newLeafNode(this_GREATER_THAN_1, grammarAccess.getExpressionRelationalOperatorAccess().getGREATER_THANTerminalRuleCall_1()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); 
    }

    |
	kw='is' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionRelationalOperatorAccess().getIsKeyword_4()); 
    }

    |
	kw='as' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionRelationalOperatorAccess().getAsKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleAttributeName
entryRuleAttributeName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeNameRule()); }
	 iv_ruleAttributeName=ruleAttributeName 
	 { $current=$iv_ruleAttributeName.current; } 
	 EOF 
;

// Rule AttributeName
ruleAttributeName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeNameAccess().getAttributeNameAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeNameAccess().getQualifiedIdQualifiedIdentifierParserRuleCall_1_0()); 
	    }
		lv_qualifiedId_1_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeNameRule());
	        }
       		set(
       			$current, 
       			"qualifiedId",
        		lv_qualifiedId_1_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUsingDirective
entryRuleUsingDirective returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUsingDirectiveRule()); }
	 iv_ruleUsingDirective=ruleUsingDirective 
	 { $current=$iv_ruleUsingDirective.current; } 
	 EOF 
;

// Rule UsingDirective
ruleUsingDirective returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUsingDirectiveAccess().getUsingDirectiveAction_0(),
            $current);
    }
)	otherlv_1='using' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUsingDirectiveAccess().getUsingKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getUsingDirectiveAccess().getNameIdentifierParserRuleCall_2_0_0()); 
	    }
		lv_name_2_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUsingDirectiveRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUsingDirectiveAccess().getEqualsSignKeyword_2_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUsingDirectiveAccess().getUsingsQualifiedIdentifierParserRuleCall_3_0()); 
	    }
		lv_usings_4_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUsingDirectiveRule());
	        }
       		set(
       			$current, 
       			"usings",
        		lv_usings_4_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getUsingDirectiveAccess().getSEMICOLONTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeAccess().getTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getNonArrayNonArrayTypeParserRuleCall_1_0()); 
	    }
		lv_nonArray_1_0=ruleNonArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"nonArray",
        		lv_nonArray_1_0, 
        		"NonArrayType");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_RANK_SPECIFIER_2=RULE_RANK_SPECIFIER
    { 
    newLeafNode(this_RANK_SPECIFIER_2, grammarAccess.getTypeAccess().getRANK_SPECIFIERTerminalRuleCall_2()); 
    }
)*)
;





// Entry rule entryRuleIntegralType
entryRuleIntegralType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegralTypeRule()); }
	 iv_ruleIntegralType=ruleIntegralType 
	 { $current=$iv_ruleIntegralType.current; } 
	 EOF 
;

// Rule IntegralType
ruleIntegralType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntegralTypeAccess().getIntegralTypeAction_0_0(),
            $current);
    }
)	otherlv_1='sbyte' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegralTypeAccess().getSbyteKeyword_0_1());
    }
)
    |	otherlv_2='byte' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegralTypeAccess().getByteKeyword_1());
    }

    |	otherlv_3='short' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegralTypeAccess().getShortKeyword_2());
    }

    |	otherlv_4='ushort' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntegralTypeAccess().getUshortKeyword_3());
    }

    |	otherlv_5='int' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntegralTypeAccess().getIntKeyword_4());
    }

    |	otherlv_6='uint' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIntegralTypeAccess().getUintKeyword_5());
    }

    |	otherlv_7='long' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntegralTypeAccess().getLongKeyword_6());
    }

    |	otherlv_8='ulong' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntegralTypeAccess().getUlongKeyword_7());
    }

    |	otherlv_9='char' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntegralTypeAccess().getCharKeyword_8());
    }
)
;





// Entry rule entryRuleArrayType
entryRuleArrayType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	 iv_ruleArrayType=ruleArrayType 
	 { $current=$iv_ruleArrayType.current; } 
	 EOF 
;

// Rule ArrayType
ruleArrayType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArrayTypeAccess().getNonArrayTypeParserRuleCall_0()); 
    }
    this_NonArrayType_0=ruleNonArrayType
    { 
        $current = $this_NonArrayType_0.current; 
        afterParserOrEnumRuleCall();
    }
(this_RANK_SPECIFIER_1=RULE_RANK_SPECIFIER
    { 
    newLeafNode(this_RANK_SPECIFIER_1, grammarAccess.getArrayTypeAccess().getRANK_SPECIFIERTerminalRuleCall_1()); 
    }
)+)
;







// Entry rule entryRuleNonArrayType
entryRuleNonArrayType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonArrayTypeRule()); }
	 iv_ruleNonArrayType=ruleNonArrayType 
	 { $current=$iv_ruleNonArrayType.current; } 
	 EOF 
;

// Rule NonArrayType
ruleNonArrayType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNonArrayTypeAccess().getNonArrayTypeAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getNonArrayTypeAccess().getQualifiedQualifiedIdentifierParserRuleCall_1_0_0()); 
	    }
		lv_qualified_1_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonArrayTypeRule());
	        }
       		set(
       			$current, 
       			"qualified",
        		lv_qualified_1_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getNonArrayTypeAccess().getBuiltTypeBuiltInTypeParserRuleCall_1_1_0()); 
	    }
		lv_builtType_2_0=ruleBuiltInType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonArrayTypeRule());
	        }
       		set(
       			$current, 
       			"builtType",
        		lv_builtType_2_0, 
        		"BuiltInType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleQualifiedIdentifier
entryRuleQualifiedIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedIdentifierRule()); }
	 iv_ruleQualifiedIdentifier=ruleQualifiedIdentifier 
	 { $current=$iv_ruleQualifiedIdentifier.current; } 
	 EOF 
;

// Rule QualifiedIdentifier
ruleQualifiedIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getQualifiedIdentifierAccess().getQualifiedIdentifierAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getQualifiedIdentifierAccess().getIdsIdentifierParserRuleCall_1_0_0()); 
	    }
		lv_ids_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualifiedIdentifierRule());
	        }
       		add(
       			$current, 
       			"ids",
        		lv_ids_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_1_1());
    }
)+)
;





// Entry rule entryRuleBuiltInType
entryRuleBuiltInType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBuiltInTypeRule()); }
	 iv_ruleBuiltInType=ruleBuiltInType 
	 { $current=$iv_ruleBuiltInType.current; } 
	 EOF 
;

// Rule BuiltInType
ruleBuiltInType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBuiltInTypeAccess().getBuiltInTypeAction_0_0(),
            $current);
    }
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBuiltInTypeAccess().getBuiltInClassTypeParserRuleCall_0_1()); 
    }
ruleBuiltInClassType
    { 
        afterParserOrEnumRuleCall();
    }
)
    |	otherlv_2='bool' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBuiltInTypeAccess().getBoolKeyword_1());
    }

    |	otherlv_3='decimal' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBuiltInTypeAccess().getDecimalKeyword_2());
    }

    |	otherlv_4='float' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBuiltInTypeAccess().getFloatKeyword_3());
    }

    |	otherlv_5='double' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBuiltInTypeAccess().getDoubleKeyword_4());
    }
)
;





// Entry rule entryRuleBuiltInClassType
entryRuleBuiltInClassType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBuiltInClassTypeRule()); } 
	 iv_ruleBuiltInClassType=ruleBuiltInClassType 
	 { $current=$iv_ruleBuiltInClassType.current.getText(); }  
	 EOF 
;

// Rule BuiltInClassType
ruleBuiltInClassType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='object' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBuiltInClassTypeAccess().getObjectKeyword_0()); 
    }

    |
	kw='string' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBuiltInClassTypeAccess().getStringKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleEnumBody
entryRuleEnumBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumBodyRule()); }
	 iv_ruleEnumBody=ruleEnumBody 
	 { $current=$iv_ruleEnumBody.current; } 
	 EOF 
;

// Rule EnumBody
ruleEnumBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEnumBodyAccess().getEnumBodyAction_0_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumBodyAccess().getLeftCurlyBracketKeyword_0_1());
    }
	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumBodyAccess().getRightCurlyBracketKeyword_0_2());
    }
)
    |(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumBodyAccess().getLeftCurlyBracketKeyword_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumBodyAccess().getEnumDeclarationsEnumMemberDeclarationParserRuleCall_1_1_0_0()); 
	    }
		lv_enumDeclarations_4_0=ruleEnumMemberDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumBodyRule());
	        }
       		add(
       			$current, 
       			"enumDeclarations",
        		lv_enumDeclarations_4_0, 
        		"EnumMemberDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumBodyAccess().getCommaKeyword_1_1_1());
    }
)+(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumBodyAccess().getCommaKeyword_1_2());
    }
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumBodyAccess().getRightCurlyBracketKeyword_1_3());
    }
))
;





// Entry rule entryRuleEnumMemberDeclaration
entryRuleEnumMemberDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumMemberDeclarationRule()); }
	 iv_ruleEnumMemberDeclaration=ruleEnumMemberDeclaration 
	 { $current=$iv_ruleEnumMemberDeclaration.current; } 
	 EOF 
;

// Rule EnumMemberDeclaration
ruleEnumMemberDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getAttAttributesParserRuleCall_0_0()); 
	    }
		lv_att_0_0=ruleAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"att",
        		lv_att_0_0, 
        		"Attributes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumMemberDeclarationAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getExpExpressionParserRuleCall_2_1_0()); 
	    }
		lv_exp_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleEnumModifier
entryRuleEnumModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumModifierRule()); } 
	 iv_ruleEnumModifier=ruleEnumModifier 
	 { $current=$iv_ruleEnumModifier.current.getText(); }  
	 EOF 
;

// Rule EnumModifier
ruleEnumModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEnumModifierAccess().getNewKeyword_0()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEnumModifierAccess().getPublicKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEnumModifierAccess().getProtectedKeyword_2()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEnumModifierAccess().getInternalKeyword_3()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEnumModifierAccess().getPrivateKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementAccess().getStatementAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getLabelStatLabeledStatementParserRuleCall_0_1_0()); 
	    }
		lv_labelStat_1_0=ruleLabeledStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"labelStat",
        		lv_labelStat_1_0, 
        		"LabeledStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getDeclareStatDeclarationStatementParserRuleCall_1_0()); 
	    }
		lv_declareStat_2_0=ruleDeclarationStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"declareStat",
        		lv_declareStat_2_0, 
        		"DeclarationStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getEmbeddedStatEmbeddedStatementParserRuleCall_2_0()); 
	    }
		lv_embeddedStat_3_0=ruleEmbeddedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"embeddedStat",
        		lv_embeddedStat_3_0, 
        		"EmbeddedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDeclarationStatement
entryRuleDeclarationStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationStatementRule()); }
	 iv_ruleDeclarationStatement=ruleDeclarationStatement 
	 { $current=$iv_ruleDeclarationStatement.current; } 
	 EOF 
;

// Rule DeclarationStatement
ruleDeclarationStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationStatementAccess().getDeclarationStatmentAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationStatementAccess().getLocalVariableDeclarationLocalVariableDeclarationParserRuleCall_1_0_0()); 
	    }
		lv_localVariableDeclaration_1_0=ruleLocalVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"localVariableDeclaration",
        		lv_localVariableDeclaration_1_0, 
        		"LocalVariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationStatementAccess().getLocalCOnstantLocalConstantDeclarationParserRuleCall_1_1_0()); 
	    }
		lv_localCOnstant_2_0=ruleLocalConstantDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"localCOnstant",
        		lv_localCOnstant_2_0, 
        		"LocalConstantDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getDeclarationStatementAccess().getSEMICOLONTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleLocalConstantDeclaration
entryRuleLocalConstantDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalConstantDeclarationRule()); }
	 iv_ruleLocalConstantDeclaration=ruleLocalConstantDeclaration 
	 { $current=$iv_ruleLocalConstantDeclaration.current; } 
	 EOF 
;

// Rule LocalConstantDeclaration
ruleLocalConstantDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalConstantDeclarationAccess().getLocalconstantDeclarationAction_0(),
            $current);
    }
)	otherlv_1='const' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLocalConstantDeclarationAccess().getConstKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalConstantDeclarationAccess().getTipoTypeParserRuleCall_2_0()); 
	    }
		lv_tipo_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalConstantDeclarationRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLocalConstantDeclarationAccess().getConstDeclaratorConstantDeclaratorParserRuleCall_3_0_0()); 
	    }
		lv_constDeclarator_3_0=ruleConstantDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalConstantDeclarationRule());
	        }
       		add(
       			$current, 
       			"constDeclarator",
        		lv_constDeclarator_3_0, 
        		"ConstantDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLocalConstantDeclarationAccess().getCommaKeyword_3_1());
    }
)+)
;





// Entry rule entryRuleLabeledStatement
entryRuleLabeledStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabeledStatementRule()); }
	 iv_ruleLabeledStatement=ruleLabeledStatement 
	 { $current=$iv_ruleLabeledStatement.current; } 
	 EOF 
;

// Rule LabeledStatement
ruleLabeledStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLabeledStatementAccess().getLabeledStatementAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getIdIdentifierParserRuleCall_1_0()); 
	    }
		lv_id_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLabeledStatementAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getStatStatementParserRuleCall_3_0()); 
	    }
		lv_stat_3_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"stat",
        		lv_stat_3_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEmbeddedStatement
entryRuleEmbeddedStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmbeddedStatementRule()); }
	 iv_ruleEmbeddedStatement=ruleEmbeddedStatement 
	 { $current=$iv_ruleEmbeddedStatement.current; } 
	 EOF 
;

// Rule EmbeddedStatement
ruleEmbeddedStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEmbeddedStatementAccess().getEmbeddedStatementAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getEmbeddedStatementAccess().getMaybeEmptyMaybeEmptyBlockParserRuleCall_1_0_0()); 
	    }
		lv_maybeEmpty_1_0=ruleMaybeEmptyBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbeddedStatementRule());
	        }
       		set(
       			$current, 
       			"maybeEmpty",
        		lv_maybeEmpty_1_0, 
        		"MaybeEmptyBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getEmbeddedStatementAccess().getStatExpStatementExpressionParserRuleCall_1_1_0_0()); 
	    }
		lv_statExp_2_0=ruleStatementExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbeddedStatementRule());
	        }
       		set(
       			$current, 
       			"statExp",
        		lv_statExp_2_0, 
        		"StatementExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getEmbeddedStatementAccess().getSEMICOLONTerminalRuleCall_1_1_1()); 
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbeddedStatementAccess().getSelectionStatSelectionStatementParserRuleCall_1_2_0()); 
	    }
		lv_selectionStat_4_0=ruleSelectionStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbeddedStatementRule());
	        }
       		set(
       			$current, 
       			"selectionStat",
        		lv_selectionStat_4_0, 
        		"SelectionStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbeddedStatementAccess().getIterationStatIterationStatementParserRuleCall_1_3_0()); 
	    }
		lv_iterationStat_5_0=ruleIterationStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbeddedStatementRule());
	        }
       		set(
       			$current, 
       			"iterationStat",
        		lv_iterationStat_5_0, 
        		"IterationStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbeddedStatementAccess().getJumpStatJumpStatementParserRuleCall_1_4_0()); 
	    }
		lv_jumpStat_6_0=ruleJumpStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbeddedStatementRule());
	        }
       		set(
       			$current, 
       			"jumpStat",
        		lv_jumpStat_6_0, 
        		"JumpStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbeddedStatementAccess().getTryStatTryStatementParserRuleCall_1_5_0()); 
	    }
		lv_tryStat_7_0=ruleTryStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbeddedStatementRule());
	        }
       		set(
       			$current, 
       			"tryStat",
        		lv_tryStat_7_0, 
        		"TryStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((	otherlv_8='checked' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEmbeddedStatementAccess().getCheckedKeyword_1_6_0_0());
    }

    |	otherlv_9='unchecked' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEmbeddedStatementAccess().getUncheckedKeyword_1_6_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbeddedStatementAccess().getBlockBlockParserRuleCall_1_6_1_0()); 
	    }
		lv_block_10_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbeddedStatementRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_10_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbeddedStatementAccess().getLockStatLockStatementParserRuleCall_1_7_0()); 
	    }
		lv_lockStat_11_0=ruleLockStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbeddedStatementRule());
	        }
       		set(
       			$current, 
       			"lockStat",
        		lv_lockStat_11_0, 
        		"LockStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbeddedStatementAccess().getUsingStatUsingStatementParserRuleCall_1_8_0()); 
	    }
		lv_usingStat_12_0=ruleUsingStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbeddedStatementRule());
	        }
       		set(
       			$current, 
       			"usingStat",
        		lv_usingStat_12_0, 
        		"UsingStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleUsingStatement
entryRuleUsingStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUsingStatementRule()); }
	 iv_ruleUsingStatement=ruleUsingStatement 
	 { $current=$iv_ruleUsingStatement.current; } 
	 EOF 
;

// Rule UsingStatement
ruleUsingStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUsingStatementAccess().getUsingStatementAction_0(),
            $current);
    }
)(	otherlv_1='using' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUsingStatementAccess().getUsingKeyword_1_0());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUsingStatementAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUsingStatementAccess().getResourcAquisitionResourceAquisitionParserRuleCall_1_2_0()); 
	    }
		lv_resourcAquisition_3_0=ruleResourceAquisition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUsingStatementRule());
	        }
       		set(
       			$current, 
       			"resourcAquisition",
        		lv_resourcAquisition_3_0, 
        		"ResourceAquisition");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUsingStatementAccess().getRightParenthesisKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUsingStatementAccess().getEmbeddedStatEmbeddedStatementParserRuleCall_1_4_0()); 
	    }
		lv_embeddedStat_5_0=ruleEmbeddedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUsingStatementRule());
	        }
       		set(
       			$current, 
       			"embeddedStat",
        		lv_embeddedStat_5_0, 
        		"EmbeddedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleResourceAquisition
entryRuleResourceAquisition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceAquisitionRule()); }
	 iv_ruleResourceAquisition=ruleResourceAquisition 
	 { $current=$iv_ruleResourceAquisition.current; } 
	 EOF 
;

// Rule ResourceAquisition
ruleResourceAquisition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResourceAquisitionAccess().getLocalVariableDeclarationParserRuleCall_0()); 
    }
    this_LocalVariableDeclaration_0=ruleLocalVariableDeclaration
    { 
        $current = $this_LocalVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResourceAquisitionAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLocalVariableDeclaration
entryRuleLocalVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalVariableDeclarationRule()); }
	 iv_ruleLocalVariableDeclaration=ruleLocalVariableDeclaration 
	 { $current=$iv_ruleLocalVariableDeclaration.current; } 
	 EOF 
;

// Rule LocalVariableDeclaration
ruleLocalVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalVariableDeclarationAccess().getLocalVariableDeclarationAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalVariableDeclarationAccess().getTipoTypeParserRuleCall_1_0()); 
	    }
		lv_tipo_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLocalVariableDeclarationAccess().getVariableVariableDeclaratorParserRuleCall_2_0_0()); 
	    }
		lv_variable_2_0=ruleVariableDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalVariableDeclarationRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"VariableDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLocalVariableDeclarationAccess().getCommaKeyword_2_1());
    }
)+)
;





// Entry rule entryRuleLockStatement
entryRuleLockStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLockStatementRule()); }
	 iv_ruleLockStatement=ruleLockStatement 
	 { $current=$iv_ruleLockStatement.current; } 
	 EOF 
;

// Rule LockStatement
ruleLockStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLockStatementAccess().getLockStatementAction_0(),
            $current);
    }
)	otherlv_1='lock' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLockStatementAccess().getLockKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLockStatementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLockStatementAccess().getExpExpressionParserRuleCall_3_0()); 
	    }
		lv_exp_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLockStatementRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLockStatementAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLockStatementAccess().getEmbeddedStatEmbeddedStatementParserRuleCall_5_0()); 
	    }
		lv_embeddedStat_5_0=ruleEmbeddedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLockStatementRule());
	        }
       		set(
       			$current, 
       			"embeddedStat",
        		lv_embeddedStat_5_0, 
        		"EmbeddedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTryStatement
entryRuleTryStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTryStatementRule()); }
	 iv_ruleTryStatement=ruleTryStatement 
	 { $current=$iv_ruleTryStatement.current; } 
	 EOF 
;

// Rule TryStatement
ruleTryStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTryStatementAccess().getTryStatementAction_0(),
            $current);
    }
)	otherlv_1='try' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTryStatementAccess().getTryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTryStatementAccess().getBlockBlockParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTryStatementRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getTryStatementAccess().getCatchClausesCatchClausesParserRuleCall_3_0_0_0()); 
	    }
		lv_catchClauses_3_0=ruleCatchClauses		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTryStatementRule());
	        }
       		set(
       			$current, 
       			"catchClauses",
        		lv_catchClauses_3_0, 
        		"CatchClauses");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyClauseParserRuleCall_3_0_1_0()); 
	    }
		lv_finally_4_0=ruleFinallyClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTryStatementRule());
	        }
       		set(
       			$current, 
       			"finally",
        		lv_finally_4_0, 
        		"FinallyClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyClauseFinallyClauseParserRuleCall_3_1_0()); 
	    }
		lv_finallyClause_5_0=ruleFinallyClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTryStatementRule());
	        }
       		set(
       			$current, 
       			"finallyClause",
        		lv_finallyClause_5_0, 
        		"FinallyClause");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleFinallyClause
entryRuleFinallyClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFinallyClauseRule()); }
	 iv_ruleFinallyClause=ruleFinallyClause 
	 { $current=$iv_ruleFinallyClause.current; } 
	 EOF 
;

// Rule FinallyClause
ruleFinallyClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFinallyClauseAccess().getFinallyClauseAction_0(),
            $current);
    }
)	otherlv_1='finally' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFinallyClauseAccess().getFinallyKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFinallyClauseAccess().getBlockBlockParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFinallyClauseRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCatchClauses
entryRuleCatchClauses returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCatchClausesRule()); }
	 iv_ruleCatchClauses=ruleCatchClauses 
	 { $current=$iv_ruleCatchClauses.current; } 
	 EOF 
;

// Rule CatchClauses
ruleCatchClauses returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getCatchClausesAccess().getCatchClausesAction_0(),
            $current);
    }
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getCatchClausesAccess().getSpeciCatchClauseSpecificCatchClauseParserRuleCall_1_0_0_0()); 
	    }
		lv_speciCatchClause_1_0=ruleSpecificCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatchClausesRule());
	        }
       		add(
       			$current, 
       			"speciCatchClause",
        		lv_speciCatchClause_1_0, 
        		"SpecificCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getCatchClausesAccess().getGenCatchClauseGeneralCatchClauseParserRuleCall_1_0_1_0()); 
	    }
		lv_genCatchClause_2_0=ruleGeneralCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatchClausesRule());
	        }
       		set(
       			$current, 
       			"genCatchClause",
        		lv_genCatchClause_2_0, 
        		"GeneralCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getCatchClausesAccess().getSpecCatchClauseSpecificCatchClauseParserRuleCall_1_1_0_0()); 
	    }
		lv_specCatchClause_3_0=ruleSpecificCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatchClausesRule());
	        }
       		set(
       			$current, 
       			"specCatchClause",
        		lv_specCatchClause_3_0, 
        		"SpecificCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
ruleGeneralCatchClause
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getCatchClausesAccess().getGenCatchClauseGeneralCatchClauseParserRuleCall_1_1_1_0()); 
	    }
		lv_genCatchClause_4_0=ruleGeneralCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatchClausesRule());
	        }
       		set(
       			$current, 
       			"genCatchClause",
        		lv_genCatchClause_4_0, 
        		"GeneralCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleGeneralCatchClause
entryRuleGeneralCatchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeneralCatchClauseRule()); }
	 iv_ruleGeneralCatchClause=ruleGeneralCatchClause 
	 { $current=$iv_ruleGeneralCatchClause.current; } 
	 EOF 
;

// Rule GeneralCatchClause
ruleGeneralCatchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getGeneralCatchClauseAccess().getGeneralCatchclauseAction_0(),
            $current);
    }
)	otherlv_1='catch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeneralCatchClauseAccess().getCatchKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneralCatchClauseAccess().getBlockBlockParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneralCatchClauseRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSpecificCatchClause
entryRuleSpecificCatchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificCatchClauseRule()); }
	 iv_ruleSpecificCatchClause=ruleSpecificCatchClause 
	 { $current=$iv_ruleSpecificCatchClause.current; } 
	 EOF 
;

// Rule SpecificCatchClause
ruleSpecificCatchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecificCatchClauseAccess().getSpecificCatchClauseAction_0(),
            $current);
    }
)	otherlv_1='catch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpecificCatchClauseAccess().getCatchKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpecificCatchClauseAccess().getLeftParenthesisKeyword_2());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecificCatchClauseAccess().getBuiltInClassTypeParserRuleCall_3_0()); 
    }
ruleBuiltInClassType
    { 
        afterParserOrEnumRuleCall();
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificCatchClauseAccess().getQualiIdQualifiedIdentifierParserRuleCall_3_1_0()); 
	    }
		lv_qualiId_4_0=ruleQualifiedIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificCatchClauseRule());
	        }
       		set(
       			$current, 
       			"qualiId",
        		lv_qualiId_4_0, 
        		"QualifiedIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificCatchClauseAccess().getIdIdentifierParserRuleCall_4_0()); 
	    }
		lv_id_5_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificCatchClauseRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_5_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSpecificCatchClauseAccess().getRightParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificCatchClauseAccess().getBlockBlockParserRuleCall_6_0()); 
	    }
		lv_block_7_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificCatchClauseRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_7_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJumpStatement
entryRuleJumpStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJumpStatementRule()); }
	 iv_ruleJumpStatement=ruleJumpStatement 
	 { $current=$iv_ruleJumpStatement.current; } 
	 EOF 
;

// Rule JumpStatement
ruleJumpStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getJumpStatementAccess().getJumpStatementAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getBreakStatBreakStatementParserRuleCall_1_0_0()); 
	    }
		lv_breakStat_1_0=ruleBreakStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"breakStat",
        		lv_breakStat_1_0, 
        		"BreakStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getContinueStatContinueStatementParserRuleCall_1_1_0()); 
	    }
		lv_continueStat_2_0=ruleContinueStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"continueStat",
        		lv_continueStat_2_0, 
        		"ContinueStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getGotoStatGotoStatementParserRuleCall_1_2_0()); 
	    }
		lv_gotoStat_3_0=ruleGotoStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"gotoStat",
        		lv_gotoStat_3_0, 
        		"GotoStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getReturnStatReturnStatementParserRuleCall_1_3_0()); 
	    }
		lv_returnStat_4_0=ruleReturnStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"returnStat",
        		lv_returnStat_4_0, 
        		"ReturnStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getThrowStatThrowStatementParserRuleCall_1_4_0()); 
	    }
		lv_throwStat_5_0=ruleThrowStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"throwStat",
        		lv_throwStat_5_0, 
        		"ThrowStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleThrowStatement
entryRuleThrowStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getThrowStatementRule()); }
	 iv_ruleThrowStatement=ruleThrowStatement 
	 { $current=$iv_ruleThrowStatement.current; } 
	 EOF 
;

// Rule ThrowStatement
ruleThrowStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getThrowStatementAccess().getThrowStatementAction_0(),
            $current);
    }
)	otherlv_1='throw' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getThrowStatementAccess().getThrowKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getThrowStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getThrowStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getThrowStatementAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	 iv_ruleReturnStatement=ruleReturnStatement 
	 { $current=$iv_ruleReturnStatement.current; } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
            $current);
    }
)(	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getReturnStatementAccess().getSEMICOLONTerminalRuleCall_1_2()); 
    }
))
;





// Entry rule entryRuleGotoStatement
entryRuleGotoStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGotoStatementRule()); }
	 iv_ruleGotoStatement=ruleGotoStatement 
	 { $current=$iv_ruleGotoStatement.current; } 
	 EOF 
;

// Rule GotoStatement
ruleGotoStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getGotoStatementAccess().getGotoStatementAction_0(),
            $current);
    }
)(	otherlv_1='goto' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGotoStatementAccess().getGotoKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGotoStatementAccess().getIdIdentifierParserRuleCall_1_1_0()); 
	    }
		lv_id_2_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGotoStatementRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getGotoStatementAccess().getSEMICOLONTerminalRuleCall_1_2()); 
    }
	otherlv_4='goto' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGotoStatementAccess().getGotoKeyword_1_3());
    }
	otherlv_5='case' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGotoStatementAccess().getCaseKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGotoStatementAccess().getExpressionExpressionParserRuleCall_1_5_0()); 
	    }
		lv_expression_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGotoStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_7=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_7, grammarAccess.getGotoStatementAccess().getSEMICOLONTerminalRuleCall_1_6()); 
    }
	otherlv_8='goto' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGotoStatementAccess().getGotoKeyword_1_7());
    }
	otherlv_9='default' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGotoStatementAccess().getDefaultKeyword_1_8());
    }
this_SEMICOLON_10=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_10, grammarAccess.getGotoStatementAccess().getSEMICOLONTerminalRuleCall_1_9()); 
    }
))
;





// Entry rule entryRuleContinueStatement
entryRuleContinueStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContinueStatementRule()); }
	 iv_ruleContinueStatement=ruleContinueStatement 
	 { $current=$iv_ruleContinueStatement.current; } 
	 EOF 
;

// Rule ContinueStatement
ruleContinueStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(),
            $current);
    }
)	otherlv_1='continue' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContinueStatementAccess().getContinueKeyword_1());
    }
this_SEMICOLON_2=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_2, grammarAccess.getContinueStatementAccess().getSEMICOLONTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleBreakStatement
entryRuleBreakStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBreakStatementRule()); }
	 iv_ruleBreakStatement=ruleBreakStatement 
	 { $current=$iv_ruleBreakStatement.current; } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(),
            $current);
    }
)	otherlv_1='break' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBreakStatementAccess().getBreakKeyword_1());
    }
this_SEMICOLON_2=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_2, grammarAccess.getBreakStatementAccess().getSEMICOLONTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleIterationStatement
entryRuleIterationStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIterationStatementRule()); }
	 iv_ruleIterationStatement=ruleIterationStatement 
	 { $current=$iv_ruleIterationStatement.current; } 
	 EOF 
;

// Rule IterationStatement
ruleIterationStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIterationStatementAccess().getIterationStatementAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getWhileStatementWhileStatementParserRuleCall_1_0_0()); 
	    }
		lv_whileStatement_1_0=ruleWhileStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"whileStatement",
        		lv_whileStatement_1_0, 
        		"WhileStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getDoStatementDoStatementParserRuleCall_1_1_0()); 
	    }
		lv_doStatement_2_0=ruleDoStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"doStatement",
        		lv_doStatement_2_0, 
        		"DoStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getForStatementForStatementParserRuleCall_1_2_0()); 
	    }
		lv_forStatement_3_0=ruleForStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"forStatement",
        		lv_forStatement_3_0, 
        		"ForStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getForeachStatementForeachStatementParserRuleCall_1_3_0()); 
	    }
		lv_foreachStatement_4_0=ruleForeachStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"foreachStatement",
        		lv_foreachStatement_4_0, 
        		"ForeachStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleForeachStatement
entryRuleForeachStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForeachStatementRule()); }
	 iv_ruleForeachStatement=ruleForeachStatement 
	 { $current=$iv_ruleForeachStatement.current; } 
	 EOF 
;

// Rule ForeachStatement
ruleForeachStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getForeachStatementAccess().getForeachStatementAction_0(),
            $current);
    }
)(	otherlv_1='foreach' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForeachStatementAccess().getForeachKeyword_1_0());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForeachStatementAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeachStatementAccess().getTipoTypeParserRuleCall_1_2_0()); 
	    }
		lv_tipo_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeachStatementRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForeachStatementAccess().getIdIdentifierParserRuleCall_1_3_0()); 
	    }
		lv_id_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeachStatementRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='in' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getForeachStatementAccess().getInKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeachStatementAccess().getExpressionExpressionParserRuleCall_1_5_0()); 
	    }
		lv_expression_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeachStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getForeachStatementAccess().getRightParenthesisKeyword_1_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeachStatementAccess().getEmbeddedStatementEmbeddedStatementParserRuleCall_1_7_0()); 
	    }
		lv_embeddedStatement_8_0=ruleEmbeddedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeachStatementRule());
	        }
       		set(
       			$current, 
       			"embeddedStatement",
        		lv_embeddedStatement_8_0, 
        		"EmbeddedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	 iv_ruleForStatement=ruleForStatement 
	 { $current=$iv_ruleForStatement.current; } 
	 EOF 
;

// Rule ForStatement
ruleForStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getForStatementAccess().getForStatementAction_0(),
            $current);
    }
)(	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getForKeyword_1_0());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getForInitializerForInitializerParserRuleCall_1_2_0()); 
	    }
		lv_forInitializer_3_0=ruleForInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		add(
       			$current, 
       			"forInitializer",
        		lv_forInitializer_3_0, 
        		"ForInitializer");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMICOLON_4=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_4, grammarAccess.getForStatementAccess().getSEMICOLONTerminalRuleCall_1_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_1_4_0()); 
	    }
		lv_expression_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMICOLON_6=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_6, grammarAccess.getForStatementAccess().getSEMICOLONTerminalRuleCall_1_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getStatementExpressionListStatementExpressionListParserRuleCall_1_6_0()); 
	    }
		lv_statementExpressionList_7_0=ruleStatementExpressionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		add(
       			$current, 
       			"statementExpressionList",
        		lv_statementExpressionList_7_0, 
        		"StatementExpressionList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_1_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getEmbeddedStatementEmbeddedStatementParserRuleCall_1_8_0()); 
	    }
		lv_embeddedStatement_9_0=ruleEmbeddedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		set(
       			$current, 
       			"embeddedStatement",
        		lv_embeddedStatement_9_0, 
        		"EmbeddedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleForInitializer
entryRuleForInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForInitializerRule()); }
	 iv_ruleForInitializer=ruleForInitializer 
	 { $current=$iv_ruleForInitializer.current; } 
	 EOF 
;

// Rule ForInitializer
ruleForInitializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getForInitializerAccess().getForInitializerAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getForInitializerAccess().getLocalVariableDeclarationLocalVariableDeclarationParserRuleCall_1_0_0()); 
	    }
		lv_localVariableDeclaration_1_0=ruleLocalVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForInitializerRule());
	        }
       		set(
       			$current, 
       			"localVariableDeclaration",
        		lv_localVariableDeclaration_1_0, 
        		"LocalVariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getForInitializerAccess().getStatementExpressionListStatementExpressionListParserRuleCall_1_1_0()); 
	    }
		lv_statementExpressionList_2_0=ruleStatementExpressionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForInitializerRule());
	        }
       		set(
       			$current, 
       			"statementExpressionList",
        		lv_statementExpressionList_2_0, 
        		"StatementExpressionList");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleStatementExpressionList
entryRuleStatementExpressionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementExpressionListRule()); }
	 iv_ruleStatementExpressionList=ruleStatementExpressionList 
	 { $current=$iv_ruleStatementExpressionList.current; } 
	 EOF 
;

// Rule StatementExpressionList
ruleStatementExpressionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementExpressionListAccess().getStatementExpressionListAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionListAccess().getListStatementExpressionParserRuleCall_1_0_0()); 
	    }
		lv_list_1_0=ruleStatementExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionListRule());
	        }
       		add(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"StatementExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStatementExpressionListAccess().getCommaKeyword_1_1());
    }
)+)
;





// Entry rule entryRuleStatementExpression
entryRuleStatementExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementExpressionRule()); }
	 iv_ruleStatementExpression=ruleStatementExpression 
	 { $current=$iv_ruleStatementExpression.current; } 
	 EOF 
;

// Rule StatementExpression
ruleStatementExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementExpressionAccess().getStatementExpressionAction_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getPrimaryExpressionPrimaryExpressionParserRuleCall_0_1_0_0()); 
	    }
		lv_primaryExpression_1_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"primaryExpression",
        		lv_primaryExpression_1_0, 
        		"PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStatementExpressionAccess().getLeftParenthesisKeyword_0_1_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getArgumentListArgumentListParserRuleCall_0_1_1_0_1_0()); 
	    }
		lv_argumentList_3_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"argumentList",
        		lv_argumentList_3_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStatementExpressionAccess().getRightParenthesisKeyword_0_1_1_0_2());
    }
)
    |(
(
		lv_incrimentDecrement_5_0=RULE_INCREMENT_DECREMENT
		{
			newLeafNode(lv_incrimentDecrement_5_0, grammarAccess.getStatementExpressionAccess().getIncrimentDecrementINCREMENT_DECREMENTTerminalRuleCall_0_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatementExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"incrimentDecrement",
        		lv_incrimentDecrement_5_0, 
        		"INCREMENT_DECREMENT");
	    }

)
))))
    |(	otherlv_6='new' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStatementExpressionAccess().getNewKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getTipoTypeParserRuleCall_1_1_0()); 
	    }
		lv_tipo_7_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_7_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStatementExpressionAccess().getLeftParenthesisKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getArgumentListArgumentListParserRuleCall_1_3_0()); 
	    }
		lv_argumentList_9_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"argumentList",
        		lv_argumentList_9_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStatementExpressionAccess().getRightParenthesisKeyword_1_4());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getUnaryExpressionUnaryExpressionParserRuleCall_2_0_0()); 
	    }
		lv_unaryExpression_11_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"unaryExpression",
        		lv_unaryExpression_11_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_assignementOperator_12_0=RULE_ASSIGNEMENT_OPERATOR
		{
			newLeafNode(lv_assignementOperator_12_0, grammarAccess.getStatementExpressionAccess().getAssignementOperatorASSIGNEMENT_OPERATORTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatementExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"assignementOperator",
        		lv_assignementOperator_12_0, 
        		"ASSIGNEMENT_OPERATOR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getExpressionExpressionParserRuleCall_2_2_0()); 
	    }
		lv_expression_13_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_13_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_incrimentDecrement_14_0=RULE_INCREMENT_DECREMENT
		{
			newLeafNode(lv_incrimentDecrement_14_0, grammarAccess.getStatementExpressionAccess().getIncrimentDecrementINCREMENT_DECREMENTTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatementExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"incrimentDecrement",
        		lv_incrimentDecrement_14_0, 
        		"INCREMENT_DECREMENT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getPrimaryExpressionPrimaryExpressionParserRuleCall_3_1_0()); 
	    }
		lv_primaryExpression_15_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"primaryExpression",
        		lv_primaryExpression_15_0, 
        		"PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0(),
            $current);
    }
)(((	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimaryExpressionAccess().getNewKeyword_1_0_0_0());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNonArrayTypeNonArrayTypeParserRuleCall_1_0_0_1_0_0_0()); 
	    }
		lv_nonArrayType_2_0=ruleNonArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"nonArrayType",
        		lv_nonArrayType_2_0, 
        		"NonArrayType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_1_0_0_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionListExpressionListParserRuleCall_1_0_0_1_0_2_0()); 
	    }
		lv_expressionList_4_0=ruleExpressionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expressionList",
        		lv_expressionList_4_0, 
        		"ExpressionList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_1_0_0_1_0_3());
    }
(
(
		lv_rankSpecifier_6_0=RULE_RANK_SPECIFIER
		{
			newLeafNode(lv_rankSpecifier_6_0, grammarAccess.getPrimaryExpressionAccess().getRankSpecifierRANK_SPECIFIERTerminalRuleCall_1_0_0_1_0_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"rankSpecifier",
        		lv_rankSpecifier_6_0, 
        		"RANK_SPECIFIER");
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayInitializerArrayInitializerParserRuleCall_1_0_0_1_0_5_0()); 
	    }
		lv_arrayInitializer_7_0=ruleArrayInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"arrayInitializer",
        		lv_arrayInitializer_7_0, 
        		"ArrayInitializer");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayTypeArrayTypeParserRuleCall_1_0_0_1_1_0_0()); 
	    }
		lv_arrayType_8_0=ruleArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"arrayType",
        		lv_arrayType_8_0, 
        		"ArrayType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayInitializer2ArrayInitializerParserRuleCall_1_0_0_1_1_1_0()); 
	    }
		lv_arrayInitializer2_9_0=ruleArrayInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"arrayInitializer2",
        		lv_arrayInitializer2_9_0, 
        		"ArrayInitializer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTipoTypeParserRuleCall_1_0_0_1_2_0_0()); 
	    }
		lv_tipo_10_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_10_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0_0_1_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArgumentListArgumentListParserRuleCall_1_0_0_1_2_2_0()); 
	    }
		lv_argumentList_12_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"argumentList",
        		lv_argumentList_12_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_0_0_1_2_3());
    }
)))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdIdentifierParserRuleCall_1_0_1_0()); 
	    }
		lv_id_14_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_14_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralLiteralParserRuleCall_1_0_2_0()); 
	    }
		lv_literal_15_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_15_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_16='(' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionExpressionParserRuleCall_1_0_3_1_0()); 
	    }
		lv_expression_17_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_17_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_0_3_2());
    }
)
    |(	otherlv_19='base' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getPrimaryExpressionAccess().getBaseKeyword_1_0_4_0());
    }
((	otherlv_20='.' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_0_4_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdIdentifierParserRuleCall_1_0_4_1_0_1_0()); 
	    }
		lv_id_21_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_21_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_22='[' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_1_0_4_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionListExpressionListParserRuleCall_1_0_4_1_1_1_0()); 
	    }
		lv_expressionList_23_0=ruleExpressionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expressionList",
        		lv_expressionList_23_0, 
        		"ExpressionList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24=']' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_1_0_4_1_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPredefinedTypePredefinedTypeParserRuleCall_1_0_5_0_0()); 
	    }
		lv_predefinedType_25_0=rulePredefinedType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"predefinedType",
        		lv_predefinedType_25_0, 
        		"PredefinedType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_26='.' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_0_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdIdentifierParserRuleCall_1_0_5_2_0()); 
	    }
		lv_id_27_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_27_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |	otherlv_28='this' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getPrimaryExpressionAccess().getThisKeyword_1_0_6());
    }

    |(	otherlv_29='typeof' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getPrimaryExpressionAccess().getTypeofKeyword_1_0_7_0());
    }
	otherlv_30='(' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeOrVoidTypeOrVoidParserRuleCall_1_0_7_2_0()); 
	    }
		lv_typeOrVoid_31_0=ruleTypeOrVoid		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"typeOrVoid",
        		lv_typeOrVoid_31_0, 
        		"TypeOrVoid");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_32=')' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_0_7_3());
    }
)
    |(	otherlv_33='checked' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getPrimaryExpressionAccess().getCheckedKeyword_1_0_8_0());
    }
	otherlv_34='(' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionExpressionParserRuleCall_1_0_8_2_0()); 
	    }
		lv_expression_35_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_35_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_36=')' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_0_8_3());
    }
)
    |(	otherlv_37='unchecked' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getPrimaryExpressionAccess().getUncheckedKeyword_1_0_9_0());
    }
	otherlv_38='(' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionExpressionParserRuleCall_1_0_9_2_0()); 
	    }
		lv_expression_39_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_39_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_40=')' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_0_9_3());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPrimaryExoression2PrimaryExpression2ParserRuleCall_1_1_0()); 
	    }
		lv_primaryExoression2_41_0=rulePrimaryExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"primaryExoression2",
        		lv_primaryExoression2_41_0, 
        		"PrimaryExpression2");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulePrimaryExpression2
entryRulePrimaryExpression2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpression2Rule()); }
	 iv_rulePrimaryExpression2=rulePrimaryExpression2 
	 { $current=$iv_rulePrimaryExpression2.current; } 
	 EOF 
;

// Rule PrimaryExpression2
rulePrimaryExpression2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpression2Access().getPrimaryExpression2Action_0(),
            $current);
    }
)(((	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimaryExpression2Access().getFullStopKeyword_1_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpression2Access().getIdIdentifierParserRuleCall_1_0_0_1_0()); 
	    }
		lv_id_2_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpression2Rule());
	        }
       		add(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPrimaryExpression2Access().getLeftParenthesisKeyword_1_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpression2Access().getArgumentListArgumentListParserRuleCall_1_0_1_1_0()); 
	    }
		lv_argumentList_4_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpression2Rule());
	        }
       		add(
       			$current, 
       			"argumentList",
        		lv_argumentList_4_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPrimaryExpression2Access().getRightParenthesisKeyword_1_0_1_2());
    }
)
    |(	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPrimaryExpression2Access().getLeftSquareBracketKeyword_1_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpression2Access().getExpressionListExpressionListParserRuleCall_1_0_2_1_0()); 
	    }
		lv_expressionList_7_0=ruleExpressionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpression2Rule());
	        }
       		add(
       			$current, 
       			"expressionList",
        		lv_expressionList_7_0, 
        		"ExpressionList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPrimaryExpression2Access().getRightSquareBracketKeyword_1_0_2_2());
    }
)
    |(
(
		lv_incrementeDecrement_9_0=RULE_INCREMENT_DECREMENT
		{
			newLeafNode(lv_incrementeDecrement_9_0, grammarAccess.getPrimaryExpression2Access().getIncrementeDecrementINCREMENT_DECREMENTTerminalRuleCall_1_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpression2Rule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"incrementeDecrement",
        		lv_incrementeDecrement_9_0, 
        		"INCREMENT_DECREMENT");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpression2Access().getPrimaryExpression2PrimaryExpression2ParserRuleCall_1_1_0()); 
	    }
		lv_primaryExpression2_10_0=rulePrimaryExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpression2Rule());
	        }
       		add(
       			$current, 
       			"primaryExpression2",
        		lv_primaryExpression2_10_0, 
        		"PrimaryExpression2");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleDoStatement
entryRuleDoStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoStatementRule()); }
	 iv_ruleDoStatement=ruleDoStatement 
	 { $current=$iv_ruleDoStatement.current; } 
	 EOF 
;

// Rule DoStatement
ruleDoStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDoStatementAccess().getDoStatementAction_0(),
            $current);
    }
)(	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDoStatementAccess().getDoKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoStatementAccess().getEmbeddedStatementEmbeddedStatementParserRuleCall_1_1_0()); 
	    }
		lv_embeddedStatement_2_0=ruleEmbeddedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoStatementRule());
	        }
       		set(
       			$current, 
       			"embeddedStatement",
        		lv_embeddedStatement_2_0, 
        		"EmbeddedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='while' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getWhileKeyword_1_2());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_1_4_0()); 
	    }
		lv_expression_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_1_5());
    }
this_SEMICOLON_7=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_7, grammarAccess.getDoStatementAccess().getSEMICOLONTerminalRuleCall_1_6()); 
    }
))
;





// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	 iv_ruleWhileStatement=ruleWhileStatement 
	 { $current=$iv_ruleWhileStatement.current; } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getWhileStatementAccess().getWhileStatementAction_0(),
            $current);
    }
)	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileStatementAccess().getEmbeddedStatementEmbeddedStatementParserRuleCall_5_0()); 
	    }
		lv_embeddedStatement_5_0=ruleEmbeddedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileStatementRule());
	        }
       		set(
       			$current, 
       			"embeddedStatement",
        		lv_embeddedStatement_5_0, 
        		"EmbeddedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectionStatementRule()); }
	 iv_ruleSelectionStatement=ruleSelectionStatement 
	 { $current=$iv_ruleSelectionStatement.current; } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSelectionStatementAccess().getSelectionStatementAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getIfStatementIfStatementParserRuleCall_1_0_0()); 
	    }
		lv_ifStatement_1_0=ruleIfStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"ifStatement",
        		lv_ifStatement_1_0, 
        		"IfStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getSwitchStatementSwitchStatementParserRuleCall_1_1_0()); 
	    }
		lv_switchStatement_2_0=ruleSwitchStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"switchStatement",
        		lv_switchStatement_2_0, 
        		"SwitchStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchStatementRule()); }
	 iv_ruleSwitchStatement=ruleSwitchStatement 
	 { $current=$iv_ruleSwitchStatement.current; } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSwitchStatementAccess().getSwitchStatementAction_0(),
            $current);
    }
)(	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getSwitchKeyword_1_0());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_1_2_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_1_3());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getSwitchSectionSwitchSectionParserRuleCall_1_5_0()); 
	    }
		lv_switchSection_6_0=ruleSwitchSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
	        }
       		add(
       			$current, 
       			"switchSection",
        		lv_switchSection_6_0, 
        		"SwitchSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_1_6());
    }
))
;





// Entry rule entryRuleSwitchSection
entryRuleSwitchSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchSectionRule()); }
	 iv_ruleSwitchSection=ruleSwitchSection 
	 { $current=$iv_ruleSwitchSection.current; } 
	 EOF 
;

// Rule SwitchSection
ruleSwitchSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSwitchSectionAccess().getSwitchSectionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchSectionAccess().getSwitchlabelSwitchLabelParserRuleCall_1_0_0()); 
	    }
		lv_switchlabel_1_0=ruleSwitchLabel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchSectionRule());
	        }
       		add(
       			$current, 
       			"switchlabel",
        		lv_switchlabel_1_0, 
        		"SwitchLabel");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchSectionAccess().getStatementStatementParserRuleCall_1_1_0()); 
	    }
		lv_statement_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchSectionRule());
	        }
       		add(
       			$current, 
       			"statement",
        		lv_statement_2_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)+))
;





// Entry rule entryRuleSwitchLabel
entryRuleSwitchLabel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchLabelRule()); }
	 iv_ruleSwitchLabel=ruleSwitchLabel 
	 { $current=$iv_ruleSwitchLabel.current; } 
	 EOF 
;

// Rule SwitchLabel
ruleSwitchLabel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSwitchLabelAccess().getSwitchLabelAction_0(),
            $current);
    }
)((	otherlv_1='case' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchLabelAccess().getCaseKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchLabelAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchLabelRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSwitchLabelAccess().getColonKeyword_1_0_2());
    }
)
    |(	otherlv_4='default' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSwitchLabelAccess().getDefaultKeyword_1_1_0());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSwitchLabelAccess().getColonKeyword_1_1_1());
    }
)))
;





// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	 iv_ruleIfStatement=ruleIfStatement 
	 { $current=$iv_ruleIfStatement.current; } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIfStatementAccess().getIfStatementAction_0(),
            $current);
    }
)(	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getIfKeyword_1_0());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_1_2_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getEmbeddedStatementEmbeddedStatementParserRuleCall_1_4_0()); 
	    }
		lv_embeddedStatement_5_0=ruleEmbeddedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"embeddedStatement",
        		lv_embeddedStatement_5_0, 
        		"EmbeddedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getElsePartElsePartParserRuleCall_1_5_0()); 
	    }
		lv_elsePart_6_0=ruleElsePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"elsePart",
        		lv_elsePart_6_0, 
        		"ElsePart");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
;





// Entry rule entryRuleElsePart
entryRuleElsePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElsePartRule()); }
	 iv_ruleElsePart=ruleElsePart 
	 { $current=$iv_ruleElsePart.current; } 
	 EOF 
;

// Rule ElsePart
ruleElsePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getElsePartAccess().getElsePartAction_0(),
            $current);
    }
)(	otherlv_1='else' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElsePartAccess().getElseKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElsePartAccess().getEmbeddedStatementEmbeddedStatementParserRuleCall_1_1_0()); 
	    }
		lv_embeddedStatement_2_0=ruleEmbeddedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElsePartRule());
	        }
       		set(
       			$current, 
       			"embeddedStatement",
        		lv_embeddedStatement_2_0, 
        		"EmbeddedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBlockAccess().getBlockAction_0(),
            $current);
    }
)(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_1_1_0()); 
	    }
		lv_statement_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		add(
       			$current, 
       			"statement",
        		lv_statement_2_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_1_2());
    }
))
;





// Entry rule entryRuleMaybeEmptyBlock
entryRuleMaybeEmptyBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaybeEmptyBlockRule()); }
	 iv_ruleMaybeEmptyBlock=ruleMaybeEmptyBlock 
	 { $current=$iv_ruleMaybeEmptyBlock.current; } 
	 EOF 
;

// Rule MaybeEmptyBlock
ruleMaybeEmptyBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMaybeEmptyBlockAccess().getMaybeEmptyBlockAction_0(),
            $current);
    }
)((	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMaybeEmptyBlockAccess().getLeftCurlyBracketKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaybeEmptyBlockAccess().getStatementStatementParserRuleCall_1_0_1_0()); 
	    }
		lv_statement_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaybeEmptyBlockRule());
	        }
       		add(
       			$current, 
       			"statement",
        		lv_statement_2_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMaybeEmptyBlockAccess().getRightCurlyBracketKeyword_1_0_2());
    }
)
    |this_SEMICOLON_4=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_4, grammarAccess.getMaybeEmptyBlockAccess().getSEMICOLONTerminalRuleCall_1_1()); 
    }
))
;





RULE_SEMICOLON : ';';

RULE_ASSIGNEMENT_OPERATOR : ('='|'+='|'-='|'*='|'/='|'%='|'&='|'^='|'<<='|'>>=');

RULE_EXPRESSION_EQUALITY_OPERATOR : ('=='|'!=');

RULE_LESS_THAN : '<';

RULE_GREATER_THAN : '>';

RULE_BAR : '|';

RULE_AMPERSAND : '&';

RULE_INCREMENT_DECREMENT : ('++'|'--');

RULE_OPERATOR_OR_SIGN : ('+'|'-');

RULE_REAL_TYPE_SUFFIX : ('F'|'f'|'D'|'d'|'M'|'m');

RULE_LETTER : ('A'..'Z'|'a'..'z');

RULE_IDENTIFIER_START_CHARACTER : (RULE_LETTER|'_');

RULE_QUOTE_ESCAPE_SEQUENCE : '""';

RULE_ESCAPE_SEQUENCE : ('\''|'"'|'\\'|'0'|'a'|'b'|'f'|'n'|'r'|'t'|'v');

RULE_NEW_LINE : ('\r'|'\n')*;

RULE_RANK_SPECIFIER : '[' ','* ']';

RULE_INTEGER_TYPE_SUFFIX : ('U'|'u'|'L'|'l'|'UL'|'Ul'|'uL'|'ul'|'LU'|'Lu'|'lU'|'lu');

RULE_HEX_DIGIT : ('0'..'9'|('A'..'F'|'a'..'f'));

RULE_OPERATOR_OR_PUNCTUATOR : ('{'|'}'|'['|']'|'('|')'|'.'|','|':'|RULE_SEMICOLON|'+'|'-'|'*'|'/'|'%'|'&'|'|'|'^'|'!'|'~'|'='|'<'|'>'|'?'|'++'|'--'|'&&'|'||'|'<<'|'>>'|'=='|'!='|'<='|'>='|'+='|'-='|'*='|'/='|'%='|'&='|'|='|'^='|'<<='|'>>='|'->');

RULE_SINGLE_CHARACTER : .?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_QUOTES : '{' ( options {greedy=false;} : . )*'}';


