/*
* generated by Xtext
*/
grammar InternalCSharp;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.myModel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.myModel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.myModel.services.CSharpGrammarAccess;

}

@parser::members {
 
 	private CSharpGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CSharpGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getInputsAssignment()); }
(rule__Model__InputsAssignment)*
{ after(grammarAccess.getModelAccess().getInputsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInput
entryRuleInput 
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputAccess().getInputSectionPartParserRuleCall()); }
(	ruleInputSectionPart)*
{ after(grammarAccess.getInputAccess().getInputSectionPartParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputSectionPart
entryRuleInputSectionPart 
:
{ before(grammarAccess.getInputSectionPartRule()); }
	 ruleInputSectionPart
{ after(grammarAccess.getInputSectionPartRule()); } 
	 EOF 
;

// Rule InputSectionPart
ruleInputSectionPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputSectionPartAccess().getAlternatives()); }
(rule__InputSectionPart__Alternatives)
{ after(grammarAccess.getInputSectionPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPDirective
entryRulePPDirective 
:
{ before(grammarAccess.getPPDirectiveRule()); }
	 rulePPDirective
{ after(grammarAccess.getPPDirectiveRule()); } 
	 EOF 
;

// Rule PPDirective
rulePPDirective
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPDirectiveAccess().getAlternatives()); }
(rule__PPDirective__Alternatives)
{ after(grammarAccess.getPPDirectiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPRegion
entryRulePPRegion 
:
{ before(grammarAccess.getPPRegionRule()); }
	 rulePPRegion
{ after(grammarAccess.getPPRegionRule()); } 
	 EOF 
;

// Rule PPRegion
rulePPRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPRegionAccess().getGroup()); }
(rule__PPRegion__Group__0)
{ after(grammarAccess.getPPRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPEndRegion
entryRulePPEndRegion 
:
{ before(grammarAccess.getPPEndRegionRule()); }
	 rulePPEndRegion
{ after(grammarAccess.getPPEndRegionRule()); } 
	 EOF 
;

// Rule PPEndRegion
rulePPEndRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPEndRegionAccess().getGroup()); }
(rule__PPEndRegion__Group__0)
{ after(grammarAccess.getPPEndRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPStartRegion
entryRulePPStartRegion 
:
{ before(grammarAccess.getPPStartRegionRule()); }
	 rulePPStartRegion
{ after(grammarAccess.getPPStartRegionRule()); } 
	 EOF 
;

// Rule PPStartRegion
rulePPStartRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPStartRegionAccess().getGroup()); }
(rule__PPStartRegion__Group__0)
{ after(grammarAccess.getPPStartRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPDiagnostic
entryRulePPDiagnostic 
:
{ before(grammarAccess.getPPDiagnosticRule()); }
	 rulePPDiagnostic
{ after(grammarAccess.getPPDiagnosticRule()); } 
	 EOF 
;

// Rule PPDiagnostic
rulePPDiagnostic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPDiagnosticAccess().getGroup()); }
(rule__PPDiagnostic__Group__0)
{ after(grammarAccess.getPPDiagnosticAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPMessage
entryRulePPMessage 
:
{ before(grammarAccess.getPPMessageRule()); }
	 rulePPMessage
{ after(grammarAccess.getPPMessageRule()); } 
	 EOF 
;

// Rule PPMessage
rulePPMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPMessageAccess().getGroup()); }
(rule__PPMessage__Group__0)
{ after(grammarAccess.getPPMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPLine
entryRulePPLine 
:
{ before(grammarAccess.getPPLineRule()); }
	 rulePPLine
{ after(grammarAccess.getPPLineRule()); } 
	 EOF 
;

// Rule PPLine
rulePPLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPLineAccess().getGroup()); }
(rule__PPLine__Group__0)
{ after(grammarAccess.getPPLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLineIndicator
entryRuleLineIndicator 
:
{ before(grammarAccess.getLineIndicatorRule()); }
	 ruleLineIndicator
{ after(grammarAccess.getLineIndicatorRule()); } 
	 EOF 
;

// Rule LineIndicator
ruleLineIndicator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLineIndicatorAccess().getAlternatives()); }
(rule__LineIndicator__Alternatives)
{ after(grammarAccess.getLineIndicatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileName
entryRuleFileName 
:
{ before(grammarAccess.getFileNameRule()); }
	 ruleFileName
{ after(grammarAccess.getFileNameRule()); } 
	 EOF 
;

// Rule FileName
ruleFileName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileNameAccess().getGroup()); }
(rule__FileName__Group__0)
{ after(grammarAccess.getFileNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileNameCharacters
entryRuleFileNameCharacters 
:
{ before(grammarAccess.getFileNameCharactersRule()); }
	 ruleFileNameCharacters
{ after(grammarAccess.getFileNameCharactersRule()); } 
	 EOF 
;

// Rule FileNameCharacters
ruleFileNameCharacters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileNameCharactersAccess().getGroup()); }
(rule__FileNameCharacters__Group__0)
{ after(grammarAccess.getFileNameCharactersAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileNameCharacters2
entryRuleFileNameCharacters2 
:
{ before(grammarAccess.getFileNameCharacters2Rule()); }
	 ruleFileNameCharacters2
{ after(grammarAccess.getFileNameCharacters2Rule()); } 
	 EOF 
;

// Rule FileNameCharacters2
ruleFileNameCharacters2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileNameCharacters2Access().getGroup()); }
(rule__FileNameCharacters2__Group__0)*
{ after(grammarAccess.getFileNameCharacters2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPInitialSection
entryRulePPInitialSection 
:
{ before(grammarAccess.getPPInitialSectionRule()); }
	 rulePPInitialSection
{ after(grammarAccess.getPPInitialSectionRule()); } 
	 EOF 
;

// Rule PPInitialSection
rulePPInitialSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPInitialSectionAccess().getGroup()); }
(rule__PPInitialSection__Group__0)
{ after(grammarAccess.getPPInitialSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPConditional
entryRulePPConditional 
:
{ before(grammarAccess.getPPConditionalRule()); }
	 rulePPConditional
{ after(grammarAccess.getPPConditionalRule()); } 
	 EOF 
;

// Rule PPConditional
rulePPConditional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPConditionalAccess().getGroup()); }
(rule__PPConditional__Group__0)
{ after(grammarAccess.getPPConditionalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPEndif
entryRulePPEndif 
:
{ before(grammarAccess.getPPEndifRule()); }
	 rulePPEndif
{ after(grammarAccess.getPPEndifRule()); } 
	 EOF 
;

// Rule PPEndif
rulePPEndif
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPEndifAccess().getGroup()); }
(rule__PPEndif__Group__0)
{ after(grammarAccess.getPPEndifAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPElseSection
entryRulePPElseSection 
:
{ before(grammarAccess.getPPElseSectionRule()); }
	 rulePPElseSection
{ after(grammarAccess.getPPElseSectionRule()); } 
	 EOF 
;

// Rule PPElseSection
rulePPElseSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPElseSectionAccess().getGroup()); }
(rule__PPElseSection__Group__0)
{ after(grammarAccess.getPPElseSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPElifSections
entryRulePPElifSections 
:
{ before(grammarAccess.getPPElifSectionsRule()); }
	 rulePPElifSections
{ after(grammarAccess.getPPElifSectionsRule()); } 
	 EOF 
;

// Rule PPElifSections
rulePPElifSections
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPElifSectionsAccess().getGroup()); }
(rule__PPElifSections__Group__0)
{ after(grammarAccess.getPPElifSectionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPElifSections2
entryRulePPElifSections2 
:
{ before(grammarAccess.getPPElifSections2Rule()); }
	 rulePPElifSections2
{ after(grammarAccess.getPPElifSections2Rule()); } 
	 EOF 
;

// Rule PPElifSections2
rulePPElifSections2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPElifSections2Access().getGroup()); }
(rule__PPElifSections2__Group__0)*
{ after(grammarAccess.getPPElifSections2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPElifSection
entryRulePPElifSection 
:
{ before(grammarAccess.getPPElifSectionRule()); }
	 rulePPElifSection
{ after(grammarAccess.getPPElifSectionRule()); } 
	 EOF 
;

// Rule PPElifSection
rulePPElifSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPElifSectionAccess().getGroup()); }
(rule__PPElifSection__Group__0)
{ after(grammarAccess.getPPElifSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPIfSection
entryRulePPIfSection 
:
{ before(grammarAccess.getPPIfSectionRule()); }
	 rulePPIfSection
{ after(grammarAccess.getPPIfSectionRule()); } 
	 EOF 
;

// Rule PPIfSection
rulePPIfSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPIfSectionAccess().getGroup()); }
(rule__PPIfSection__Group__0)
{ after(grammarAccess.getPPIfSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPExpression
entryRulePPExpression 
:
{ before(grammarAccess.getPPExpressionRule()); }
	 rulePPExpression
{ after(grammarAccess.getPPExpressionRule()); } 
	 EOF 
;

// Rule PPExpression
rulePPExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPExpressionAccess().getPPOrExpressionParserRuleCall()); }
	rulePPOrExpression
{ after(grammarAccess.getPPExpressionAccess().getPPOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPOrExpression
entryRulePPOrExpression 
:
{ before(grammarAccess.getPPOrExpressionRule()); }
	 rulePPOrExpression
{ after(grammarAccess.getPPOrExpressionRule()); } 
	 EOF 
;

// Rule PPOrExpression
rulePPOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPOrExpressionAccess().getGroup()); }
(rule__PPOrExpression__Group__0)
{ after(grammarAccess.getPPOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPOrExpression2
entryRulePPOrExpression2 
:
{ before(grammarAccess.getPPOrExpression2Rule()); }
	 rulePPOrExpression2
{ after(grammarAccess.getPPOrExpression2Rule()); } 
	 EOF 
;

// Rule PPOrExpression2
rulePPOrExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPOrExpression2Access().getGroup()); }
(rule__PPOrExpression2__Group__0)*
{ after(grammarAccess.getPPOrExpression2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPAndExpression
entryRulePPAndExpression 
:
{ before(grammarAccess.getPPAndExpressionRule()); }
	 rulePPAndExpression
{ after(grammarAccess.getPPAndExpressionRule()); } 
	 EOF 
;

// Rule PPAndExpression
rulePPAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPAndExpressionAccess().getGroup()); }
(rule__PPAndExpression__Group__0)
{ after(grammarAccess.getPPAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPAndExpression2
entryRulePPAndExpression2 
:
{ before(grammarAccess.getPPAndExpression2Rule()); }
	 rulePPAndExpression2
{ after(grammarAccess.getPPAndExpression2Rule()); } 
	 EOF 
;

// Rule PPAndExpression2
rulePPAndExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPAndExpression2Access().getGroup()); }
(rule__PPAndExpression2__Group__0)*
{ after(grammarAccess.getPPAndExpression2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPEqualityExpression
entryRulePPEqualityExpression 
:
{ before(grammarAccess.getPPEqualityExpressionRule()); }
	 rulePPEqualityExpression
{ after(grammarAccess.getPPEqualityExpressionRule()); } 
	 EOF 
;

// Rule PPEqualityExpression
rulePPEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPEqualityExpressionAccess().getGroup()); }
(rule__PPEqualityExpression__Group__0)
{ after(grammarAccess.getPPEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPEqualityExpression2
entryRulePPEqualityExpression2 
:
{ before(grammarAccess.getPPEqualityExpression2Rule()); }
	 rulePPEqualityExpression2
{ after(grammarAccess.getPPEqualityExpression2Rule()); } 
	 EOF 
;

// Rule PPEqualityExpression2
rulePPEqualityExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getGroup()); }
(rule__PPEqualityExpression2__Group__0)
{ after(grammarAccess.getPPEqualityExpression2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPUnaryExpression
entryRulePPUnaryExpression 
:
{ before(grammarAccess.getPPUnaryExpressionRule()); }
	 rulePPUnaryExpression
{ after(grammarAccess.getPPUnaryExpressionRule()); } 
	 EOF 
;

// Rule PPUnaryExpression
rulePPUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPUnaryExpressionAccess().getAlternatives()); }
(rule__PPUnaryExpression__Alternatives)
{ after(grammarAccess.getPPUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPPrimaryExpression
entryRulePPPrimaryExpression 
:
{ before(grammarAccess.getPPPrimaryExpressionRule()); }
	 rulePPPrimaryExpression
{ after(grammarAccess.getPPPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PPPrimaryExpression
rulePPPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getAlternatives()); }
(rule__PPPrimaryExpression__Alternatives)
{ after(grammarAccess.getPPPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPDeclaration
entryRulePPDeclaration 
:
{ before(grammarAccess.getPPDeclarationRule()); }
	 rulePPDeclaration
{ after(grammarAccess.getPPDeclarationRule()); } 
	 EOF 
;

// Rule PPDeclaration
rulePPDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPDeclarationAccess().getGroup()); }
(rule__PPDeclaration__Group__0)
{ after(grammarAccess.getPPDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePPNewLine
entryRulePPNewLine 
:
{ before(grammarAccess.getPPNewLineRule()); }
	 rulePPNewLine
{ after(grammarAccess.getPPNewLineRule()); } 
	 EOF 
;

// Rule PPNewLine
rulePPNewLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPPNewLineAccess().getGroup()); }
(rule__PPNewLine__Group__0)
{ after(grammarAccess.getPPNewLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalSymbol
entryRuleConditionalSymbol 
:
{ before(grammarAccess.getConditionalSymbolRule()); }
	 ruleConditionalSymbol
{ after(grammarAccess.getConditionalSymbolRule()); } 
	 EOF 
;

// Rule ConditionalSymbol
ruleConditionalSymbol
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalSymbolAccess().getIdentifierOrKeywordParserRuleCall()); }
	ruleIdentifierOrKeyword
{ after(grammarAccess.getConditionalSymbolAccess().getIdentifierOrKeywordParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputElement
entryRuleInputElement 
:
{ before(grammarAccess.getInputElementRule()); }
	 ruleInputElement
{ after(grammarAccess.getInputElementRule()); } 
	 EOF 
;

// Rule InputElement
ruleInputElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputElementAccess().getAlternatives()); }
(rule__InputElement__Alternatives)
{ after(grammarAccess.getInputElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleToken
entryRuleToken 
:
{ before(grammarAccess.getTokenRule()); }
	 ruleToken
{ after(grammarAccess.getTokenRule()); } 
	 EOF 
;

// Rule Token
ruleToken
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTokenAccess().getAlternatives()); }
(rule__Token__Alternatives)
{ after(grammarAccess.getTokenAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywords
entryRuleKeywords 
:
{ before(grammarAccess.getKeywordsRule()); }
	 ruleKeywords
{ after(grammarAccess.getKeywordsRule()); } 
	 EOF 
;

// Rule Keywords
ruleKeywords
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordsAccess().getAlternatives()); }
(rule__Keywords__Alternatives)
{ after(grammarAccess.getKeywordsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePredefinedType
entryRulePredefinedType 
:
{ before(grammarAccess.getPredefinedTypeRule()); }
	 rulePredefinedType
{ after(grammarAccess.getPredefinedTypeRule()); } 
	 EOF 
;

// Rule PredefinedType
rulePredefinedType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPredefinedTypeAccess().getAlternatives()); }
(rule__PredefinedType__Alternatives)
{ after(grammarAccess.getPredefinedTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral 
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
(rule__IntegerLiteral__Alternatives)
{ after(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLiteral
entryRuleRealLiteral 
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealLiteralAccess().getAlternatives()); }
(rule__RealLiteral__Alternatives)
{ after(grammarAccess.getRealLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExponentPart
entryRuleExponentPart 
:
{ before(grammarAccess.getExponentPartRule()); }
	 ruleExponentPart
{ after(grammarAccess.getExponentPartRule()); } 
	 EOF 
;

// Rule ExponentPart
ruleExponentPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExponentPartAccess().getAlternatives()); }
(rule__ExponentPart__Alternatives)
{ after(grammarAccess.getExponentPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharacterLiteral
entryRuleCharacterLiteral 
:
{ before(grammarAccess.getCharacterLiteralRule()); }
	 ruleCharacterLiteral
{ after(grammarAccess.getCharacterLiteralRule()); } 
	 EOF 
;

// Rule CharacterLiteral
ruleCharacterLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharacterLiteralAccess().getGroup()); }
(rule__CharacterLiteral__Group__0)
{ after(grammarAccess.getCharacterLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharacter
entryRuleCharacter 
:
{ before(grammarAccess.getCharacterRule()); }
	 ruleCharacter
{ after(grammarAccess.getCharacterRule()); } 
	 EOF 
;

// Rule Character
ruleCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharacterAccess().getAlternatives()); }
(rule__Character__Alternatives)
{ after(grammarAccess.getCharacterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEscapeSequence
entryRuleEscapeSequence 
:
{ before(grammarAccess.getEscapeSequenceRule()); }
	 ruleEscapeSequence
{ after(grammarAccess.getEscapeSequenceRule()); } 
	 EOF 
;

// Rule EscapeSequence
ruleEscapeSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEscapeSequenceAccess().getAlternatives()); }
(rule__EscapeSequence__Alternatives)
{ after(grammarAccess.getEscapeSequenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnicodeCharacterEscapeSequence
entryRuleUnicodeCharacterEscapeSequence 
:
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceRule()); }
	 ruleUnicodeCharacterEscapeSequence
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceRule()); } 
	 EOF 
;

// Rule UnicodeCharacterEscapeSequence
ruleUnicodeCharacterEscapeSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getAlternatives()); }
(rule__UnicodeCharacterEscapeSequence__Alternatives)
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHexadecimalEscapeSequence
entryRuleHexadecimalEscapeSequence 
:
{ before(grammarAccess.getHexadecimalEscapeSequenceRule()); }
	 ruleHexadecimalEscapeSequence
{ after(grammarAccess.getHexadecimalEscapeSequenceRule()); } 
	 EOF 
;

// Rule HexadecimalEscapeSequence
ruleHexadecimalEscapeSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup()); }
(rule__HexadecimalEscapeSequence__Group__0)
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getAlternatives()); }
(rule__StringLiteral__Alternatives)
{ after(grammarAccess.getStringLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerbatimStringCharacter
entryRuleVerbatimStringCharacter 
:
{ before(grammarAccess.getVerbatimStringCharacterRule()); }
	 ruleVerbatimStringCharacter
{ after(grammarAccess.getVerbatimStringCharacterRule()); } 
	 EOF 
;

// Rule VerbatimStringCharacter
ruleVerbatimStringCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerbatimStringCharacterAccess().getAlternatives()); }
(rule__VerbatimStringCharacter__Alternatives)
{ after(grammarAccess.getVerbatimStringCharacterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegularStringCharacter
entryRuleRegularStringCharacter 
:
{ before(grammarAccess.getRegularStringCharacterRule()); }
	 ruleRegularStringCharacter
{ after(grammarAccess.getRegularStringCharacterRule()); } 
	 EOF 
;

// Rule RegularStringCharacter
ruleRegularStringCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegularStringCharacterAccess().getAlternatives()); }
(rule__RegularStringCharacter__Alternatives)
{ after(grammarAccess.getRegularStringCharacterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment
entryRuleComment 
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getAlternatives()); }
(rule__Comment__Alternatives)
{ after(grammarAccess.getCommentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifier
entryRuleIdentifier 
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierAccess().getAlternatives()); }
(rule__Identifier__Alternatives)
{ after(grammarAccess.getIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAvailableIdentifier
entryRuleAvailableIdentifier 
:
{ before(grammarAccess.getAvailableIdentifierRule()); }
	 ruleAvailableIdentifier
{ after(grammarAccess.getAvailableIdentifierRule()); } 
	 EOF 
;

// Rule AvailableIdentifier
ruleAvailableIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAvailableIdentifierAccess().getIdentifierOrKeywordParserRuleCall()); }
	ruleIdentifierOrKeyword
{ after(grammarAccess.getAvailableIdentifierAccess().getIdentifierOrKeywordParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifierOrKeyword
entryRuleIdentifierOrKeyword 
:
{ before(grammarAccess.getIdentifierOrKeywordRule()); }
	 ruleIdentifierOrKeyword
{ after(grammarAccess.getIdentifierOrKeywordRule()); } 
	 EOF 
;

// Rule IdentifierOrKeyword
ruleIdentifierOrKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierOrKeywordAccess().getGroup()); }
(rule__IdentifierOrKeyword__Group__0)
{ after(grammarAccess.getIdentifierOrKeywordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifierPartCharacter
entryRuleIdentifierPartCharacter 
:
{ before(grammarAccess.getIdentifierPartCharacterRule()); }
	 ruleIdentifierPartCharacter
{ after(grammarAccess.getIdentifierPartCharacterRule()); } 
	 EOF 
;

// Rule IdentifierPartCharacter
ruleIdentifierPartCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierPartCharacterAccess().getAlternatives()); }
(rule__IdentifierPartCharacter__Alternatives)
{ after(grammarAccess.getIdentifierPartCharacterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleNamespaceMemberDeclaration
entryRuleNamespaceMemberDeclaration 
:
{ before(grammarAccess.getNamespaceMemberDeclarationRule()); }
	 ruleNamespaceMemberDeclaration
{ after(grammarAccess.getNamespaceMemberDeclarationRule()); } 
	 EOF 
;

// Rule NamespaceMemberDeclaration
ruleNamespaceMemberDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceMemberDeclarationAccess().getAlternatives()); }
(rule__NamespaceMemberDeclaration__Alternatives)
{ after(grammarAccess.getNamespaceMemberDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceDeclaration
entryRuleNamespaceDeclaration 
:
{ before(grammarAccess.getNamespaceDeclarationRule()); }
	 ruleNamespaceDeclaration
{ after(grammarAccess.getNamespaceDeclarationRule()); } 
	 EOF 
;

// Rule NamespaceDeclaration
ruleNamespaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
(rule__NamespaceDeclaration__Group__0)
{ after(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceBody
entryRuleNamespaceBody 
:
{ before(grammarAccess.getNamespaceBodyRule()); }
	 ruleNamespaceBody
{ after(grammarAccess.getNamespaceBodyRule()); } 
	 EOF 
;

// Rule NamespaceBody
ruleNamespaceBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceBodyAccess().getGroup()); }
(rule__NamespaceBody__Group__0)
{ after(grammarAccess.getNamespaceBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration 
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDeclarationAccess().getAlternatives()); }
(rule__TypeDeclaration__Alternatives)
{ after(grammarAccess.getTypeDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelegateDeclaration
entryRuleDelegateDeclaration 
:
{ before(grammarAccess.getDelegateDeclarationRule()); }
	 ruleDelegateDeclaration
{ after(grammarAccess.getDelegateDeclarationRule()); } 
	 EOF 
;

// Rule DelegateDeclaration
ruleDelegateDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelegateDeclarationAccess().getGroup()); }
(rule__DelegateDeclaration__Group__0)
{ after(grammarAccess.getDelegateDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration 
:
{ before(grammarAccess.getEnumDeclarationRule()); }
	 ruleEnumDeclaration
{ after(grammarAccess.getEnumDeclarationRule()); } 
	 EOF 
;

// Rule EnumDeclaration
ruleEnumDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumDeclarationAccess().getGroup()); }
(rule__EnumDeclaration__Group__0)
{ after(grammarAccess.getEnumDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration 
:
{ before(grammarAccess.getInterfaceDeclarationRule()); }
	 ruleInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
(rule__InterfaceDeclaration__Group__0)
{ after(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifier
entryRuleModifier 
:
{ before(grammarAccess.getModifierRule()); }
	 ruleModifier
{ after(grammarAccess.getModifierRule()); } 
	 EOF 
;

// Rule Modifier
ruleModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifierAccess().getAlternatives()); }
(rule__Modifier__Alternatives)
{ after(grammarAccess.getModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceBody
entryRuleInterfaceBody 
:
{ before(grammarAccess.getInterfaceBodyRule()); }
	 ruleInterfaceBody
{ after(grammarAccess.getInterfaceBodyRule()); } 
	 EOF 
;

// Rule InterfaceBody
ruleInterfaceBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceBodyAccess().getGroup()); }
(rule__InterfaceBody__Group__0)
{ after(grammarAccess.getInterfaceBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceMemberDeclaration
entryRuleInterfaceMemberDeclaration 
:
{ before(grammarAccess.getInterfaceMemberDeclarationRule()); }
	 ruleInterfaceMemberDeclaration
{ after(grammarAccess.getInterfaceMemberDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceMemberDeclaration
ruleInterfaceMemberDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getGroup()); }
(rule__InterfaceMemberDeclaration__Group__0)
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceIndexerDeclaration
entryRuleInterfaceIndexerDeclaration 
:
{ before(grammarAccess.getInterfaceIndexerDeclarationRule()); }
	 ruleInterfaceIndexerDeclaration
{ after(grammarAccess.getInterfaceIndexerDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceIndexerDeclaration
ruleInterfaceIndexerDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceIndexerDeclarationAccess().getGroup()); }
(rule__InterfaceIndexerDeclaration__Group__0)
{ after(grammarAccess.getInterfaceIndexerDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceEventDeclaration
entryRuleInterfaceEventDeclaration 
:
{ before(grammarAccess.getInterfaceEventDeclarationRule()); }
	 ruleInterfaceEventDeclaration
{ after(grammarAccess.getInterfaceEventDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceEventDeclaration
ruleInterfaceEventDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceEventDeclarationAccess().getGroup()); }
(rule__InterfaceEventDeclaration__Group__0)
{ after(grammarAccess.getInterfaceEventDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfacePropertyDeclaration
entryRuleInterfacePropertyDeclaration 
:
{ before(grammarAccess.getInterfacePropertyDeclarationRule()); }
	 ruleInterfacePropertyDeclaration
{ after(grammarAccess.getInterfacePropertyDeclarationRule()); } 
	 EOF 
;

// Rule InterfacePropertyDeclaration
ruleInterfacePropertyDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfacePropertyDeclarationAccess().getGroup()); }
(rule__InterfacePropertyDeclaration__Group__0)
{ after(grammarAccess.getInterfacePropertyDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceAccessors
entryRuleInterfaceAccessors 
:
{ before(grammarAccess.getInterfaceAccessorsRule()); }
	 ruleInterfaceAccessors
{ after(grammarAccess.getInterfaceAccessorsRule()); } 
	 EOF 
;

// Rule InterfaceAccessors
ruleInterfaceAccessors
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getGroup()); }
(rule__InterfaceAccessors__Group__0)
{ after(grammarAccess.getInterfaceAccessorsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceMethodDeclaration
entryRuleInterfaceMethodDeclaration 
:
{ before(grammarAccess.getInterfaceMethodDeclarationRule()); }
	 ruleInterfaceMethodDeclaration
{ after(grammarAccess.getInterfaceMethodDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceMethodDeclaration
ruleInterfaceMethodDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceMethodDeclarationAccess().getGroup()); }
(rule__InterfaceMethodDeclaration__Group__0)
{ after(grammarAccess.getInterfaceMethodDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration 
:
{ before(grammarAccess.getStructDeclarationRule()); }
	 ruleStructDeclaration
{ after(grammarAccess.getStructDeclarationRule()); } 
	 EOF 
;

// Rule StructDeclaration
ruleStructDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructDeclarationAccess().getGroup()); }
(rule__StructDeclaration__Group__0)
{ after(grammarAccess.getStructDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructBody
entryRuleStructBody 
:
{ before(grammarAccess.getStructBodyRule()); }
	 ruleStructBody
{ after(grammarAccess.getStructBodyRule()); } 
	 EOF 
;

// Rule StructBody
ruleStructBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructBodyAccess().getGroup()); }
(rule__StructBody__Group__0)
{ after(grammarAccess.getStructBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleStructMemberDeclarations2
entryRuleStructMemberDeclarations2 
:
{ before(grammarAccess.getStructMemberDeclarations2Rule()); }
	 ruleStructMemberDeclarations2
{ after(grammarAccess.getStructMemberDeclarations2Rule()); } 
	 EOF 
;

// Rule StructMemberDeclarations2
ruleStructMemberDeclarations2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructMemberDeclarations2Access().getGroup()); }
(rule__StructMemberDeclarations2__Group__0)
{ after(grammarAccess.getStructMemberDeclarations2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructMemberDeclaration
entryRuleStructMemberDeclaration 
:
{ before(grammarAccess.getStructMemberDeclarationRule()); }
	 ruleStructMemberDeclaration
{ after(grammarAccess.getStructMemberDeclarationRule()); } 
	 EOF 
;

// Rule StructMemberDeclaration
ruleStructMemberDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructMemberDeclarationAccess().getAlternatives()); }
(rule__StructMemberDeclaration__Alternatives)
{ after(grammarAccess.getStructMemberDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration 
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
(rule__ClassDeclaration__Group__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassBody
entryRuleClassBody 
:
{ before(grammarAccess.getClassBodyRule()); }
	 ruleClassBody
{ after(grammarAccess.getClassBodyRule()); } 
	 EOF 
;

// Rule ClassBody
ruleClassBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassBodyAccess().getGroup()); }
(rule__ClassBody__Group__0)
{ after(grammarAccess.getClassBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassMemberDeclaration
entryRuleClassMemberDeclaration 
:
{ before(grammarAccess.getClassMemberDeclarationRule()); }
	 ruleClassMemberDeclaration
{ after(grammarAccess.getClassMemberDeclarationRule()); } 
	 EOF 
;

// Rule ClassMemberDeclaration
ruleClassMemberDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassMemberDeclarationAccess().getAlternatives()); }
(rule__ClassMemberDeclaration__Alternatives)
{ after(grammarAccess.getClassMemberDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticConstructorDeclaration
entryRuleStaticConstructorDeclaration 
:
{ before(grammarAccess.getStaticConstructorDeclarationRule()); }
	 ruleStaticConstructorDeclaration
{ after(grammarAccess.getStaticConstructorDeclarationRule()); } 
	 EOF 
;

// Rule StaticConstructorDeclaration
ruleStaticConstructorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticConstructorDeclarationAccess().getGroup()); }
(rule__StaticConstructorDeclaration__Group__0)
{ after(grammarAccess.getStaticConstructorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticConstructorModifiers
entryRuleStaticConstructorModifiers 
:
{ before(grammarAccess.getStaticConstructorModifiersRule()); }
	 ruleStaticConstructorModifiers
{ after(grammarAccess.getStaticConstructorModifiersRule()); } 
	 EOF 
;

// Rule StaticConstructorModifiers
ruleStaticConstructorModifiers
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticConstructorModifiersAccess().getAlternatives()); }
(rule__StaticConstructorModifiers__Alternatives)
{ after(grammarAccess.getStaticConstructorModifiersAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDestructorDeclaration
entryRuleDestructorDeclaration 
:
{ before(grammarAccess.getDestructorDeclarationRule()); }
	 ruleDestructorDeclaration
{ after(grammarAccess.getDestructorDeclarationRule()); } 
	 EOF 
;

// Rule DestructorDeclaration
ruleDestructorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDestructorDeclarationAccess().getGroup()); }
(rule__DestructorDeclaration__Group__0)
{ after(grammarAccess.getDestructorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorDeclaration
entryRuleConstructorDeclaration 
:
{ before(grammarAccess.getConstructorDeclarationRule()); }
	 ruleConstructorDeclaration
{ after(grammarAccess.getConstructorDeclarationRule()); } 
	 EOF 
;

// Rule ConstructorDeclaration
ruleConstructorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getGroup()); }
(rule__ConstructorDeclaration__Group__0)
{ after(grammarAccess.getConstructorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorDeclarator
entryRuleConstructorDeclarator 
:
{ before(grammarAccess.getConstructorDeclaratorRule()); }
	 ruleConstructorDeclarator
{ after(grammarAccess.getConstructorDeclaratorRule()); } 
	 EOF 
;

// Rule ConstructorDeclarator
ruleConstructorDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorDeclaratorAccess().getGroup()); }
(rule__ConstructorDeclarator__Group__0)
{ after(grammarAccess.getConstructorDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorInitializer
entryRuleConstructorInitializer 
:
{ before(grammarAccess.getConstructorInitializerRule()); }
	 ruleConstructorInitializer
{ after(grammarAccess.getConstructorInitializerRule()); } 
	 EOF 
;

// Rule ConstructorInitializer
ruleConstructorInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorInitializerAccess().getAlternatives()); }
(rule__ConstructorInitializer__Alternatives)
{ after(grammarAccess.getConstructorInitializerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentList
entryRuleArgumentList 
:
{ before(grammarAccess.getArgumentListRule()); }
	 ruleArgumentList
{ after(grammarAccess.getArgumentListRule()); } 
	 EOF 
;

// Rule ArgumentList
ruleArgumentList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentListAccess().getGroup()); }
(rule__ArgumentList__Group__0)*
{ after(grammarAccess.getArgumentListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgument
entryRuleArgument 
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentAccess().getGroup()); }
(rule__Argument__Group__0)
{ after(grammarAccess.getArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefOrOut
entryRuleRefOrOut 
:
{ before(grammarAccess.getRefOrOutRule()); }
	 ruleRefOrOut
{ after(grammarAccess.getRefOrOutRule()); } 
	 EOF 
;

// Rule RefOrOut
ruleRefOrOut
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefOrOutAccess().getAlternatives()); }
(rule__RefOrOut__Alternatives)
{ after(grammarAccess.getRefOrOutAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorModifier
entryRuleConstructorModifier 
:
{ before(grammarAccess.getConstructorModifierRule()); }
	 ruleConstructorModifier
{ after(grammarAccess.getConstructorModifierRule()); } 
	 EOF 
;

// Rule ConstructorModifier
ruleConstructorModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorModifierAccess().getAlternatives()); }
(rule__ConstructorModifier__Alternatives)
{ after(grammarAccess.getConstructorModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorDeclaration
entryRuleOperatorDeclaration 
:
{ before(grammarAccess.getOperatorDeclarationRule()); }
	 ruleOperatorDeclaration
{ after(grammarAccess.getOperatorDeclarationRule()); } 
	 EOF 
;

// Rule OperatorDeclaration
ruleOperatorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorDeclarationAccess().getGroup()); }
(rule__OperatorDeclaration__Group__0)
{ after(grammarAccess.getOperatorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorDeclarator
entryRuleOperatorDeclarator 
:
{ before(grammarAccess.getOperatorDeclaratorRule()); }
	 ruleOperatorDeclarator
{ after(grammarAccess.getOperatorDeclaratorRule()); } 
	 EOF 
;

// Rule OperatorDeclarator
ruleOperatorDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorDeclaratorAccess().getAlternatives()); }
(rule__OperatorDeclarator__Alternatives)
{ after(grammarAccess.getOperatorDeclaratorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConversionOperatorDeclarator
entryRuleConversionOperatorDeclarator 
:
{ before(grammarAccess.getConversionOperatorDeclaratorRule()); }
	 ruleConversionOperatorDeclarator
{ after(grammarAccess.getConversionOperatorDeclaratorRule()); } 
	 EOF 
;

// Rule ConversionOperatorDeclarator
ruleConversionOperatorDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConversionOperatorDeclaratorAccess().getGroup()); }
(rule__ConversionOperatorDeclarator__Group__0)
{ after(grammarAccess.getConversionOperatorDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConversionKind
entryRuleConversionKind 
:
{ before(grammarAccess.getConversionKindRule()); }
	 ruleConversionKind
{ after(grammarAccess.getConversionKindRule()); } 
	 EOF 
;

// Rule ConversionKind
ruleConversionKind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConversionKindAccess().getAlternatives()); }
(rule__ConversionKind__Alternatives)
{ after(grammarAccess.getConversionKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryOperatorDeclarator
entryRuleBinaryOperatorDeclarator 
:
{ before(grammarAccess.getBinaryOperatorDeclaratorRule()); }
	 ruleBinaryOperatorDeclarator
{ after(grammarAccess.getBinaryOperatorDeclaratorRule()); } 
	 EOF 
;

// Rule BinaryOperatorDeclarator
ruleBinaryOperatorDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getGroup()); }
(rule__BinaryOperatorDeclarator__Group__0)
{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOverloadableBinaryOperator
entryRuleOverloadableBinaryOperator 
:
{ before(grammarAccess.getOverloadableBinaryOperatorRule()); }
	 ruleOverloadableBinaryOperator
{ after(grammarAccess.getOverloadableBinaryOperatorRule()); } 
	 EOF 
;

// Rule OverloadableBinaryOperator
ruleOverloadableBinaryOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getAlternatives()); }
(rule__OverloadableBinaryOperator__Alternatives)
{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOperatorDeclarator
entryRuleUnaryOperatorDeclarator 
:
{ before(grammarAccess.getUnaryOperatorDeclaratorRule()); }
	 ruleUnaryOperatorDeclarator
{ after(grammarAccess.getUnaryOperatorDeclaratorRule()); } 
	 EOF 
;

// Rule UnaryOperatorDeclarator
ruleUnaryOperatorDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOperatorDeclaratorAccess().getGroup()); }
(rule__UnaryOperatorDeclarator__Group__0)
{ after(grammarAccess.getUnaryOperatorDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOverloadableUnaryOperator
entryRuleOverloadableUnaryOperator 
:
{ before(grammarAccess.getOverloadableUnaryOperatorRule()); }
	 ruleOverloadableUnaryOperator
{ after(grammarAccess.getOverloadableUnaryOperatorRule()); } 
	 EOF 
;

// Rule OverloadableUnaryOperator
ruleOverloadableUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOverloadableUnaryOperatorAccess().getAlternatives()); }
(rule__OverloadableUnaryOperator__Alternatives)
{ after(grammarAccess.getOverloadableUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorModifier
entryRuleOperatorModifier 
:
{ before(grammarAccess.getOperatorModifierRule()); }
	 ruleOperatorModifier
{ after(grammarAccess.getOperatorModifierRule()); } 
	 EOF 
;

// Rule OperatorModifier
ruleOperatorModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorModifierAccess().getAlternatives()); }
(rule__OperatorModifier__Alternatives)
{ after(grammarAccess.getOperatorModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexerDeclaration
entryRuleIndexerDeclaration 
:
{ before(grammarAccess.getIndexerDeclarationRule()); }
	 ruleIndexerDeclaration
{ after(grammarAccess.getIndexerDeclarationRule()); } 
	 EOF 
;

// Rule IndexerDeclaration
ruleIndexerDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexerDeclarationAccess().getGroup()); }
(rule__IndexerDeclaration__Group__0)
{ after(grammarAccess.getIndexerDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexerDeclarator
entryRuleIndexerDeclarator 
:
{ before(grammarAccess.getIndexerDeclaratorRule()); }
	 ruleIndexerDeclarator
{ after(grammarAccess.getIndexerDeclaratorRule()); } 
	 EOF 
;

// Rule IndexerDeclarator
ruleIndexerDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getGroup()); }
(rule__IndexerDeclarator__Group__0)
{ after(grammarAccess.getIndexerDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexerModifier
entryRuleIndexerModifier 
:
{ before(grammarAccess.getIndexerModifierRule()); }
	 ruleIndexerModifier
{ after(grammarAccess.getIndexerModifierRule()); } 
	 EOF 
;

// Rule IndexerModifier
ruleIndexerModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexerModifierAccess().getAlternatives()); }
(rule__IndexerModifier__Alternatives)
{ after(grammarAccess.getIndexerModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventDeclaration
entryRuleEventDeclaration 
:
{ before(grammarAccess.getEventDeclarationRule()); }
	 ruleEventDeclaration
{ after(grammarAccess.getEventDeclarationRule()); } 
	 EOF 
;

// Rule EventDeclaration
ruleEventDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventDeclarationAccess().getGroup()); }
(rule__EventDeclaration__Group__0)
{ after(grammarAccess.getEventDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventAccessorDeclarations
entryRuleEventAccessorDeclarations 
:
{ before(grammarAccess.getEventAccessorDeclarationsRule()); }
	 ruleEventAccessorDeclarations
{ after(grammarAccess.getEventAccessorDeclarationsRule()); } 
	 EOF 
;

// Rule EventAccessorDeclarations
ruleEventAccessorDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getGroup()); }
(rule__EventAccessorDeclarations__Group__0)
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRemoveAccessorDeclaration
entryRuleRemoveAccessorDeclaration 
:
{ before(grammarAccess.getRemoveAccessorDeclarationRule()); }
	 ruleRemoveAccessorDeclaration
{ after(grammarAccess.getRemoveAccessorDeclarationRule()); } 
	 EOF 
;

// Rule RemoveAccessorDeclaration
ruleRemoveAccessorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRemoveAccessorDeclarationAccess().getGroup()); }
(rule__RemoveAccessorDeclaration__Group__0)
{ after(grammarAccess.getRemoveAccessorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddAccessorDeclaration
entryRuleAddAccessorDeclaration 
:
{ before(grammarAccess.getAddAccessorDeclarationRule()); }
	 ruleAddAccessorDeclaration
{ after(grammarAccess.getAddAccessorDeclarationRule()); } 
	 EOF 
;

// Rule AddAccessorDeclaration
ruleAddAccessorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddAccessorDeclarationAccess().getGroup()); }
(rule__AddAccessorDeclaration__Group__0)
{ after(grammarAccess.getAddAccessorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventModifier
entryRuleEventModifier 
:
{ before(grammarAccess.getEventModifierRule()); }
	 ruleEventModifier
{ after(grammarAccess.getEventModifierRule()); } 
	 EOF 
;

// Rule EventModifier
ruleEventModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventModifierAccess().getAlternatives()); }
(rule__EventModifier__Alternatives)
{ after(grammarAccess.getEventModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration 
:
{ before(grammarAccess.getPropertyDeclarationRule()); }
	 rulePropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationRule()); } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
(rule__PropertyDeclaration__Group__0)
{ after(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccessorDeclarations
entryRuleAccessorDeclarations 
:
{ before(grammarAccess.getAccessorDeclarationsRule()); }
	 ruleAccessorDeclarations
{ after(grammarAccess.getAccessorDeclarationsRule()); } 
	 EOF 
;

// Rule AccessorDeclarations
ruleAccessorDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getGroup()); }
(rule__AccessorDeclarations__Group__0)
{ after(grammarAccess.getAccessorDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetAccessorDeclaration
entryRuleSetAccessorDeclaration 
:
{ before(grammarAccess.getSetAccessorDeclarationRule()); }
	 ruleSetAccessorDeclaration
{ after(grammarAccess.getSetAccessorDeclarationRule()); } 
	 EOF 
;

// Rule SetAccessorDeclaration
ruleSetAccessorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetAccessorDeclarationAccess().getGroup()); }
(rule__SetAccessorDeclaration__Group__0)
{ after(grammarAccess.getSetAccessorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGetAccessorDeclaration
entryRuleGetAccessorDeclaration 
:
{ before(grammarAccess.getGetAccessorDeclarationRule()); }
	 ruleGetAccessorDeclaration
{ after(grammarAccess.getGetAccessorDeclarationRule()); } 
	 EOF 
;

// Rule GetAccessorDeclaration
ruleGetAccessorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGetAccessorDeclarationAccess().getGroup()); }
(rule__GetAccessorDeclaration__Group__0)
{ after(grammarAccess.getGetAccessorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyModifier
entryRulePropertyModifier 
:
{ before(grammarAccess.getPropertyModifierRule()); }
	 rulePropertyModifier
{ after(grammarAccess.getPropertyModifierRule()); } 
	 EOF 
;

// Rule PropertyModifier
rulePropertyModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyModifierAccess().getAlternatives()); }
(rule__PropertyModifier__Alternatives)
{ after(grammarAccess.getPropertyModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodDeclaration
entryRuleMethodDeclaration 
:
{ before(grammarAccess.getMethodDeclarationRule()); }
	 ruleMethodDeclaration
{ after(grammarAccess.getMethodDeclarationRule()); } 
	 EOF 
;

// Rule MethodDeclaration
ruleMethodDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodDeclarationAccess().getGroup()); }
(rule__MethodDeclaration__Group__0)
{ after(grammarAccess.getMethodDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodHeader
entryRuleMethodHeader 
:
{ before(grammarAccess.getMethodHeaderRule()); }
	 ruleMethodHeader
{ after(grammarAccess.getMethodHeaderRule()); } 
	 EOF 
;

// Rule MethodHeader
ruleMethodHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodHeaderAccess().getGroup()); }
(rule__MethodHeader__Group__0)
{ after(grammarAccess.getMethodHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormalParameterList
entryRuleFormalParameterList 
:
{ before(grammarAccess.getFormalParameterListRule()); }
	 ruleFormalParameterList
{ after(grammarAccess.getFormalParameterListRule()); } 
	 EOF 
;

// Rule FormalParameterList
ruleFormalParameterList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParameterListAccess().getGroup()); }
(rule__FormalParameterList__Group__0)
{ after(grammarAccess.getFormalParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterArray
entryRuleParameterArray 
:
{ before(grammarAccess.getParameterArrayRule()); }
	 ruleParameterArray
{ after(grammarAccess.getParameterArrayRule()); } 
	 EOF 
;

// Rule ParameterArray
ruleParameterArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterArrayAccess().getGroup()); }
(rule__ParameterArray__Group__0)
{ after(grammarAccess.getParameterArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFixedParameters
entryRuleFixedParameters 
:
{ before(grammarAccess.getFixedParametersRule()); }
	 ruleFixedParameters
{ after(grammarAccess.getFixedParametersRule()); } 
	 EOF 
;

// Rule FixedParameters
ruleFixedParameters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getFixedParametersAccess().getGroup()); }
(rule__FixedParameters__Group__0)
{ after(grammarAccess.getFixedParametersAccess().getGroup()); }
)
(
{ before(grammarAccess.getFixedParametersAccess().getGroup()); }
(rule__FixedParameters__Group__0)*
{ after(grammarAccess.getFixedParametersAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFixedParameter
entryRuleFixedParameter 
:
{ before(grammarAccess.getFixedParameterRule()); }
	 ruleFixedParameter
{ after(grammarAccess.getFixedParameterRule()); } 
	 EOF 
;

// Rule FixedParameter
ruleFixedParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFixedParameterAccess().getGroup()); }
(rule__FixedParameter__Group__0)
{ after(grammarAccess.getFixedParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeOrVoid
entryRuleTypeOrVoid 
:
{ before(grammarAccess.getTypeOrVoidRule()); }
	 ruleTypeOrVoid
{ after(grammarAccess.getTypeOrVoidRule()); } 
	 EOF 
;

// Rule TypeOrVoid
ruleTypeOrVoid
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeOrVoidAccess().getAlternatives()); }
(rule__TypeOrVoid__Alternatives)
{ after(grammarAccess.getTypeOrVoidAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodModifier
entryRuleMethodModifier 
:
{ before(grammarAccess.getMethodModifierRule()); }
	 ruleMethodModifier
{ after(grammarAccess.getMethodModifierRule()); } 
	 EOF 
;

// Rule MethodModifier
ruleMethodModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodModifierAccess().getAlternatives()); }
(rule__MethodModifier__Alternatives)
{ after(grammarAccess.getMethodModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration 
:
{ before(grammarAccess.getFieldDeclarationRule()); }
	 ruleFieldDeclaration
{ after(grammarAccess.getFieldDeclarationRule()); } 
	 EOF 
;

// Rule FieldDeclaration
ruleFieldDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldDeclarationAccess().getGroup()); }
(rule__FieldDeclaration__Group__0)
{ after(grammarAccess.getFieldDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclarator
entryRuleVariableDeclarator 
:
{ before(grammarAccess.getVariableDeclaratorRule()); }
	 ruleVariableDeclarator
{ after(grammarAccess.getVariableDeclaratorRule()); } 
	 EOF 
;

// Rule VariableDeclarator
ruleVariableDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
(rule__VariableDeclarator__Group__0)
{ after(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableInitializer
entryRuleVariableInitializer 
:
{ before(grammarAccess.getVariableInitializerRule()); }
	 ruleVariableInitializer
{ after(grammarAccess.getVariableInitializerRule()); } 
	 EOF 
;

// Rule VariableInitializer
ruleVariableInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableInitializerAccess().getAlternatives()); }
(rule__VariableInitializer__Alternatives)
{ after(grammarAccess.getVariableInitializerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayInitializer
entryRuleArrayInitializer 
:
{ before(grammarAccess.getArrayInitializerRule()); }
	 ruleArrayInitializer
{ after(grammarAccess.getArrayInitializerRule()); } 
	 EOF 
;

// Rule ArrayInitializer
ruleArrayInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayInitializerAccess().getAlternatives()); }
(rule__ArrayInitializer__Alternatives)
{ after(grammarAccess.getArrayInitializerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldModifier
entryRuleFieldModifier 
:
{ before(grammarAccess.getFieldModifierRule()); }
	 ruleFieldModifier
{ after(grammarAccess.getFieldModifierRule()); } 
	 EOF 
;

// Rule FieldModifier
ruleFieldModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldModifierAccess().getAlternatives()); }
(rule__FieldModifier__Alternatives)
{ after(grammarAccess.getFieldModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDeclaration
entryRuleConstantDeclaration 
:
{ before(grammarAccess.getConstantDeclarationRule()); }
	 ruleConstantDeclaration
{ after(grammarAccess.getConstantDeclarationRule()); } 
	 EOF 
;

// Rule ConstantDeclaration
ruleConstantDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDeclarationAccess().getGroup()); }
(rule__ConstantDeclaration__Group__0)
{ after(grammarAccess.getConstantDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantModifier
entryRuleConstantModifier 
:
{ before(grammarAccess.getConstantModifierRule()); }
	 ruleConstantModifier
{ after(grammarAccess.getConstantModifierRule()); } 
	 EOF 
;

// Rule ConstantModifier
ruleConstantModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantModifierAccess().getAlternatives()); }
(rule__ConstantModifier__Alternatives)
{ after(grammarAccess.getConstantModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDeclarator
entryRuleConstantDeclarator 
:
{ before(grammarAccess.getConstantDeclaratorRule()); }
	 ruleConstantDeclarator
{ after(grammarAccess.getConstantDeclaratorRule()); } 
	 EOF 
;

// Rule ConstantDeclarator
ruleConstantDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDeclaratorAccess().getGroup()); }
(rule__ConstantDeclarator__Group__0)
{ after(grammarAccess.getConstantDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassBase
entryRuleClassBase 
:
{ before(grammarAccess.getClassBaseRule()); }
	 ruleClassBase
{ after(grammarAccess.getClassBaseRule()); } 
	 EOF 
;

// Rule ClassBase
ruleClassBase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassBaseAccess().getGroup()); }
(rule__ClassBase__Group__0)
{ after(grammarAccess.getClassBaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedIdentifierList
entryRuleQualifiedIdentifierList 
:
{ before(grammarAccess.getQualifiedIdentifierListRule()); }
	 ruleQualifiedIdentifierList
{ after(grammarAccess.getQualifiedIdentifierListRule()); } 
	 EOF 
;

// Rule QualifiedIdentifierList
ruleQualifiedIdentifierList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getQualifiedIdentifierListAccess().getGroup()); }
(rule__QualifiedIdentifierList__Group__0)
{ after(grammarAccess.getQualifiedIdentifierListAccess().getGroup()); }
)
(
{ before(grammarAccess.getQualifiedIdentifierListAccess().getGroup()); }
(rule__QualifiedIdentifierList__Group__0)*
{ after(grammarAccess.getQualifiedIdentifierListAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassModifier
entryRuleClassModifier 
:
{ before(grammarAccess.getClassModifierRule()); }
	 ruleClassModifier
{ after(grammarAccess.getClassModifierRule()); } 
	 EOF 
;

// Rule ClassModifier
ruleClassModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassModifierAccess().getAlternatives()); }
(rule__ClassModifier__Alternatives)
{ after(grammarAccess.getClassModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalAttributes
entryRuleGlobalAttributes 
:
{ before(grammarAccess.getGlobalAttributesRule()); }
	 ruleGlobalAttributes
{ after(grammarAccess.getGlobalAttributesRule()); } 
	 EOF 
;

// Rule GlobalAttributes
ruleGlobalAttributes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalAttributesAccess().getGlobalAttributeSectionParserRuleCall()); }
(	ruleGlobalAttributeSection)*
{ after(grammarAccess.getGlobalAttributesAccess().getGlobalAttributeSectionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalAttributeSection
entryRuleGlobalAttributeSection 
:
{ before(grammarAccess.getGlobalAttributeSectionRule()); }
	 ruleGlobalAttributeSection
{ after(grammarAccess.getGlobalAttributeSectionRule()); } 
	 EOF 
;

// Rule GlobalAttributeSection
ruleGlobalAttributeSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalAttributeSectionAccess().getGroup()); }
(rule__GlobalAttributeSection__Group__0)
{ after(grammarAccess.getGlobalAttributeSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributes
entryRuleAttributes 
:
{ before(grammarAccess.getAttributesRule()); }
	 ruleAttributes
{ after(grammarAccess.getAttributesRule()); } 
	 EOF 
;

// Rule Attributes
ruleAttributes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributesAccess().getAttributeSectionParserRuleCall()); }
(	ruleAttributeSection)*
{ after(grammarAccess.getAttributesAccess().getAttributeSectionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeSection
entryRuleAttributeSection 
:
{ before(grammarAccess.getAttributeSectionRule()); }
	 ruleAttributeSection
{ after(grammarAccess.getAttributeSectionRule()); } 
	 EOF 
;

// Rule AttributeSection
ruleAttributeSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeSectionAccess().getGroup()); }
(rule__AttributeSection__Group__0)
{ after(grammarAccess.getAttributeSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeTarget
entryRuleAttributeTarget 
:
{ before(grammarAccess.getAttributeTargetRule()); }
	 ruleAttributeTarget
{ after(grammarAccess.getAttributeTargetRule()); } 
	 EOF 
;

// Rule AttributeTarget
ruleAttributeTarget
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeTargetAccess().getAlternatives()); }
(rule__AttributeTarget__Alternatives)
{ after(grammarAccess.getAttributeTargetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeList
entryRuleAttributeList 
:
{ before(grammarAccess.getAttributeListRule()); }
	 ruleAttributeList
{ after(grammarAccess.getAttributeListRule()); } 
	 EOF 
;

// Rule AttributeList
ruleAttributeList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getAttributeListAccess().getGroup()); }
(rule__AttributeList__Group__0)
{ after(grammarAccess.getAttributeListAccess().getGroup()); }
)
(
{ before(grammarAccess.getAttributeListAccess().getGroup()); }
(rule__AttributeList__Group__0)*
{ after(grammarAccess.getAttributeListAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeArguments
entryRuleAttributeArguments 
:
{ before(grammarAccess.getAttributeArgumentsRule()); }
	 ruleAttributeArguments
{ after(grammarAccess.getAttributeArgumentsRule()); } 
	 EOF 
;

// Rule AttributeArguments
ruleAttributeArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeArgumentsAccess().getGroup()); }
(rule__AttributeArguments__Group__0)
{ after(grammarAccess.getAttributeArgumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionList
entryRuleExpressionList 
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getExpressionListAccess().getGroup()); }
(rule__ExpressionList__Group__0)
{ after(grammarAccess.getExpressionListAccess().getGroup()); }
)
(
{ before(grammarAccess.getExpressionListAccess().getGroup()); }
(rule__ExpressionList__Group__0)*
{ after(grammarAccess.getExpressionListAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression2
entryRuleExpression2 
:
{ before(grammarAccess.getExpression2Rule()); }
	 ruleExpression2
{ after(grammarAccess.getExpression2Rule()); } 
	 EOF 
;

// Rule Expression2
ruleExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression2Access().getAlternatives()); }
(rule__Expression2__Alternatives)*
{ after(grammarAccess.getExpression2Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionUnaryOperator
entryRuleExpressionUnaryOperator 
:
{ before(grammarAccess.getExpressionUnaryOperatorRule()); }
	 ruleExpressionUnaryOperator
{ after(grammarAccess.getExpressionUnaryOperatorRule()); } 
	 EOF 
;

// Rule ExpressionUnaryOperator
ruleExpressionUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionUnaryOperatorAccess().getAlternatives()); }
(rule__ExpressionUnaryOperator__Alternatives)
{ after(grammarAccess.getExpressionUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionShiftOperator
entryRuleExpressionShiftOperator 
:
{ before(grammarAccess.getExpressionShiftOperatorRule()); }
	 ruleExpressionShiftOperator
{ after(grammarAccess.getExpressionShiftOperatorRule()); } 
	 EOF 
;

// Rule ExpressionShiftOperator
ruleExpressionShiftOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionShiftOperatorAccess().getAlternatives()); }
(rule__ExpressionShiftOperator__Alternatives)
{ after(grammarAccess.getExpressionShiftOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionRelationalOperator
entryRuleExpressionRelationalOperator 
:
{ before(grammarAccess.getExpressionRelationalOperatorRule()); }
	 ruleExpressionRelationalOperator
{ after(grammarAccess.getExpressionRelationalOperatorRule()); } 
	 EOF 
;

// Rule ExpressionRelationalOperator
ruleExpressionRelationalOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionRelationalOperatorAccess().getAlternatives()); }
(rule__ExpressionRelationalOperator__Alternatives)
{ after(grammarAccess.getExpressionRelationalOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeName
entryRuleAttributeName 
:
{ before(grammarAccess.getAttributeNameRule()); }
	 ruleAttributeName
{ after(grammarAccess.getAttributeNameRule()); } 
	 EOF 
;

// Rule AttributeName
ruleAttributeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeNameAccess().getQualifiedIdentifierParserRuleCall()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getAttributeNameAccess().getQualifiedIdentifierParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsingDirective
entryRuleUsingDirective 
:
{ before(grammarAccess.getUsingDirectiveRule()); }
	 ruleUsingDirective
{ after(grammarAccess.getUsingDirectiveRule()); } 
	 EOF 
;

// Rule UsingDirective
ruleUsingDirective
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsingDirectiveAccess().getGroup()); }
(rule__UsingDirective__Group__0)
{ after(grammarAccess.getUsingDirectiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegralType
entryRuleIntegralType 
:
{ before(grammarAccess.getIntegralTypeRule()); }
	 ruleIntegralType
{ after(grammarAccess.getIntegralTypeRule()); } 
	 EOF 
;

// Rule IntegralType
ruleIntegralType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegralTypeAccess().getAlternatives()); }
(rule__IntegralType__Alternatives)
{ after(grammarAccess.getIntegralTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayType
entryRuleArrayType 
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayTypeAccess().getGroup()); }
(rule__ArrayType__Group__0)
{ after(grammarAccess.getArrayTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleNonArrayType
entryRuleNonArrayType 
:
{ before(grammarAccess.getNonArrayTypeRule()); }
	 ruleNonArrayType
{ after(grammarAccess.getNonArrayTypeRule()); } 
	 EOF 
;

// Rule NonArrayType
ruleNonArrayType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonArrayTypeAccess().getAlternatives()); }
(rule__NonArrayType__Alternatives)
{ after(grammarAccess.getNonArrayTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedIdentifier
entryRuleQualifiedIdentifier 
:
{ before(grammarAccess.getQualifiedIdentifierRule()); }
	 ruleQualifiedIdentifier
{ after(grammarAccess.getQualifiedIdentifierRule()); } 
	 EOF 
;

// Rule QualifiedIdentifier
ruleQualifiedIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup()); }
(rule__QualifiedIdentifier__Group__0)
{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup()); }
)
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup()); }
(rule__QualifiedIdentifier__Group__0)*
{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInType
entryRuleBuiltInType 
:
{ before(grammarAccess.getBuiltInTypeRule()); }
	 ruleBuiltInType
{ after(grammarAccess.getBuiltInTypeRule()); } 
	 EOF 
;

// Rule BuiltInType
ruleBuiltInType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInTypeAccess().getAlternatives()); }
(rule__BuiltInType__Alternatives)
{ after(grammarAccess.getBuiltInTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInClassType
entryRuleBuiltInClassType 
:
{ before(grammarAccess.getBuiltInClassTypeRule()); }
	 ruleBuiltInClassType
{ after(grammarAccess.getBuiltInClassTypeRule()); } 
	 EOF 
;

// Rule BuiltInClassType
ruleBuiltInClassType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInClassTypeAccess().getAlternatives()); }
(rule__BuiltInClassType__Alternatives)
{ after(grammarAccess.getBuiltInClassTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumBody
entryRuleEnumBody 
:
{ before(grammarAccess.getEnumBodyRule()); }
	 ruleEnumBody
{ after(grammarAccess.getEnumBodyRule()); } 
	 EOF 
;

// Rule EnumBody
ruleEnumBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumBodyAccess().getAlternatives()); }
(rule__EnumBody__Alternatives)
{ after(grammarAccess.getEnumBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumMemberDeclaration
entryRuleEnumMemberDeclaration 
:
{ before(grammarAccess.getEnumMemberDeclarationRule()); }
	 ruleEnumMemberDeclaration
{ after(grammarAccess.getEnumMemberDeclarationRule()); } 
	 EOF 
;

// Rule EnumMemberDeclaration
ruleEnumMemberDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumMemberDeclarationAccess().getGroup()); }
(rule__EnumMemberDeclaration__Group__0)
{ after(grammarAccess.getEnumMemberDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumModifier
entryRuleEnumModifier 
:
{ before(grammarAccess.getEnumModifierRule()); }
	 ruleEnumModifier
{ after(grammarAccess.getEnumModifierRule()); } 
	 EOF 
;

// Rule EnumModifier
ruleEnumModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumModifierAccess().getAlternatives()); }
(rule__EnumModifier__Alternatives)
{ after(grammarAccess.getEnumModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getEmbeddedStatementParserRuleCall()); }
	ruleEmbeddedStatement
{ after(grammarAccess.getStatementAccess().getEmbeddedStatementParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmbeddedStatement
entryRuleEmbeddedStatement 
:
{ before(grammarAccess.getEmbeddedStatementRule()); }
	 ruleEmbeddedStatement
{ after(grammarAccess.getEmbeddedStatementRule()); } 
	 EOF 
;

// Rule EmbeddedStatement
ruleEmbeddedStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmbeddedStatementAccess().getAlternatives()); }
(rule__EmbeddedStatement__Alternatives)
{ after(grammarAccess.getEmbeddedStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsingStatement
entryRuleUsingStatement 
:
{ before(grammarAccess.getUsingStatementRule()); }
	 ruleUsingStatement
{ after(grammarAccess.getUsingStatementRule()); } 
	 EOF 
;

// Rule UsingStatement
ruleUsingStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsingStatementAccess().getGroup()); }
(rule__UsingStatement__Group__0)
{ after(grammarAccess.getUsingStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceAquisition
entryRuleResourceAquisition 
:
{ before(grammarAccess.getResourceAquisitionRule()); }
	 ruleResourceAquisition
{ after(grammarAccess.getResourceAquisitionRule()); } 
	 EOF 
;

// Rule ResourceAquisition
ruleResourceAquisition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceAquisitionAccess().getAlternatives()); }
(rule__ResourceAquisition__Alternatives)
{ after(grammarAccess.getResourceAquisitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVariableDeclaration
entryRuleLocalVariableDeclaration 
:
{ before(grammarAccess.getLocalVariableDeclarationRule()); }
	 ruleLocalVariableDeclaration
{ after(grammarAccess.getLocalVariableDeclarationRule()); } 
	 EOF 
;

// Rule LocalVariableDeclaration
ruleLocalVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
(rule__LocalVariableDeclaration__Group__0)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLockStatement
entryRuleLockStatement 
:
{ before(grammarAccess.getLockStatementRule()); }
	 ruleLockStatement
{ after(grammarAccess.getLockStatementRule()); } 
	 EOF 
;

// Rule LockStatement
ruleLockStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLockStatementAccess().getGroup()); }
(rule__LockStatement__Group__0)
{ after(grammarAccess.getLockStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTryStatement
entryRuleTryStatement 
:
{ before(grammarAccess.getTryStatementRule()); }
	 ruleTryStatement
{ after(grammarAccess.getTryStatementRule()); } 
	 EOF 
;

// Rule TryStatement
ruleTryStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTryStatementAccess().getAlternatives()); }
(rule__TryStatement__Alternatives)
{ after(grammarAccess.getTryStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFinallyClause
entryRuleFinallyClause 
:
{ before(grammarAccess.getFinallyClauseRule()); }
	 ruleFinallyClause
{ after(grammarAccess.getFinallyClauseRule()); } 
	 EOF 
;

// Rule FinallyClause
ruleFinallyClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFinallyClauseAccess().getGroup()); }
(rule__FinallyClause__Group__0)
{ after(grammarAccess.getFinallyClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCatchClauses
entryRuleCatchClauses 
:
{ before(grammarAccess.getCatchClausesRule()); }
	 ruleCatchClauses
{ after(grammarAccess.getCatchClausesRule()); } 
	 EOF 
;

// Rule CatchClauses
ruleCatchClauses
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCatchClausesAccess().getAlternatives()); }
(rule__CatchClauses__Alternatives)
{ after(grammarAccess.getCatchClausesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGeneralCatchClause
entryRuleGeneralCatchClause 
:
{ before(grammarAccess.getGeneralCatchClauseRule()); }
	 ruleGeneralCatchClause
{ after(grammarAccess.getGeneralCatchClauseRule()); } 
	 EOF 
;

// Rule GeneralCatchClause
ruleGeneralCatchClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeneralCatchClauseAccess().getGroup()); }
(rule__GeneralCatchClause__Group__0)
{ after(grammarAccess.getGeneralCatchClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecificCatchClause
entryRuleSpecificCatchClause 
:
{ before(grammarAccess.getSpecificCatchClauseRule()); }
	 ruleSpecificCatchClause
{ after(grammarAccess.getSpecificCatchClauseRule()); } 
	 EOF 
;

// Rule SpecificCatchClause
ruleSpecificCatchClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getAlternatives()); }
(rule__SpecificCatchClause__Alternatives)
{ after(grammarAccess.getSpecificCatchClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJumpStatement
entryRuleJumpStatement 
:
{ before(grammarAccess.getJumpStatementRule()); }
	 ruleJumpStatement
{ after(grammarAccess.getJumpStatementRule()); } 
	 EOF 
;

// Rule JumpStatement
ruleJumpStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJumpStatementAccess().getAlternatives()); }
(rule__JumpStatement__Alternatives)
{ after(grammarAccess.getJumpStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThrowStatement
entryRuleThrowStatement 
:
{ before(grammarAccess.getThrowStatementRule()); }
	 ruleThrowStatement
{ after(grammarAccess.getThrowStatementRule()); } 
	 EOF 
;

// Rule ThrowStatement
ruleThrowStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThrowStatementAccess().getGroup()); }
(rule__ThrowStatement__Group__0)
{ after(grammarAccess.getThrowStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGotoStatement
entryRuleGotoStatement 
:
{ before(grammarAccess.getGotoStatementRule()); }
	 ruleGotoStatement
{ after(grammarAccess.getGotoStatementRule()); } 
	 EOF 
;

// Rule GotoStatement
ruleGotoStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGotoStatementAccess().getGroup()); }
(rule__GotoStatement__Group__0)
{ after(grammarAccess.getGotoStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContinueStatement
entryRuleContinueStatement 
:
{ before(grammarAccess.getContinueStatementRule()); }
	 ruleContinueStatement
{ after(grammarAccess.getContinueStatementRule()); } 
	 EOF 
;

// Rule ContinueStatement
ruleContinueStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContinueStatementAccess().getGroup()); }
(rule__ContinueStatement__Group__0)
{ after(grammarAccess.getContinueStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakStatement
entryRuleBreakStatement 
:
{ before(grammarAccess.getBreakStatementRule()); }
	 ruleBreakStatement
{ after(grammarAccess.getBreakStatementRule()); } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBreakStatementAccess().getGroup()); }
(rule__BreakStatement__Group__0)
{ after(grammarAccess.getBreakStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIterationStatement
entryRuleIterationStatement 
:
{ before(grammarAccess.getIterationStatementRule()); }
	 ruleIterationStatement
{ after(grammarAccess.getIterationStatementRule()); } 
	 EOF 
;

// Rule IterationStatement
ruleIterationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterationStatementAccess().getAlternatives()); }
(rule__IterationStatement__Alternatives)
{ after(grammarAccess.getIterationStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForeachStatement
entryRuleForeachStatement 
:
{ before(grammarAccess.getForeachStatementRule()); }
	 ruleForeachStatement
{ after(grammarAccess.getForeachStatementRule()); } 
	 EOF 
;

// Rule ForeachStatement
ruleForeachStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForeachStatementAccess().getGroup()); }
(rule__ForeachStatement__Group__0)
{ after(grammarAccess.getForeachStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForStatement
entryRuleForStatement 
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForStatementAccess().getGroup()); }
(rule__ForStatement__Group__0)
{ after(grammarAccess.getForStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForInitializer
entryRuleForInitializer 
:
{ before(grammarAccess.getForInitializerRule()); }
	 ruleForInitializer
{ after(grammarAccess.getForInitializerRule()); } 
	 EOF 
;

// Rule ForInitializer
ruleForInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForInitializerAccess().getAlternatives()); }
(rule__ForInitializer__Alternatives)
{ after(grammarAccess.getForInitializerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementExpressionList
entryRuleStatementExpressionList 
:
{ before(grammarAccess.getStatementExpressionListRule()); }
	 ruleStatementExpressionList
{ after(grammarAccess.getStatementExpressionListRule()); } 
	 EOF 
;

// Rule StatementExpressionList
ruleStatementExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getStatementExpressionListAccess().getGroup()); }
(rule__StatementExpressionList__Group__0)
{ after(grammarAccess.getStatementExpressionListAccess().getGroup()); }
)
(
{ before(grammarAccess.getStatementExpressionListAccess().getGroup()); }
(rule__StatementExpressionList__Group__0)*
{ after(grammarAccess.getStatementExpressionListAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementExpression
entryRuleStatementExpression 
:
{ before(grammarAccess.getStatementExpressionRule()); }
	 ruleStatementExpression
{ after(grammarAccess.getStatementExpressionRule()); } 
	 EOF 
;

// Rule StatementExpression
ruleStatementExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementExpressionAccess().getAlternatives()); }
(rule__StatementExpression__Alternatives)
{ after(grammarAccess.getStatementExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression2
entryRulePrimaryExpression2 
:
{ before(grammarAccess.getPrimaryExpression2Rule()); }
	 rulePrimaryExpression2
{ after(grammarAccess.getPrimaryExpression2Rule()); } 
	 EOF 
;

// Rule PrimaryExpression2
rulePrimaryExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpression2Access().getGroup()); }
(rule__PrimaryExpression2__Group__0)*
{ after(grammarAccess.getPrimaryExpression2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoStatement
entryRuleDoStatement 
:
{ before(grammarAccess.getDoStatementRule()); }
	 ruleDoStatement
{ after(grammarAccess.getDoStatementRule()); } 
	 EOF 
;

// Rule DoStatement
ruleDoStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoStatementAccess().getGroup()); }
(rule__DoStatement__Group__0)
{ after(grammarAccess.getDoStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement 
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement 
:
{ before(grammarAccess.getSelectionStatementRule()); }
	 ruleSelectionStatement
{ after(grammarAccess.getSelectionStatementRule()); } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectionStatementAccess().getAlternatives()); }
(rule__SelectionStatement__Alternatives)
{ after(grammarAccess.getSelectionStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement 
:
{ before(grammarAccess.getSwitchStatementRule()); }
	 ruleSwitchStatement
{ after(grammarAccess.getSwitchStatementRule()); } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchStatementAccess().getGroup()); }
(rule__SwitchStatement__Group__0)
{ after(grammarAccess.getSwitchStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchSection
entryRuleSwitchSection 
:
{ before(grammarAccess.getSwitchSectionRule()); }
	 ruleSwitchSection
{ after(grammarAccess.getSwitchSectionRule()); } 
	 EOF 
;

// Rule SwitchSection
ruleSwitchSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchSectionAccess().getGroup()); }
(rule__SwitchSection__Group__0)
{ after(grammarAccess.getSwitchSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchLabel
entryRuleSwitchLabel 
:
{ before(grammarAccess.getSwitchLabelRule()); }
	 ruleSwitchLabel
{ after(grammarAccess.getSwitchLabelRule()); } 
	 EOF 
;

// Rule SwitchLabel
ruleSwitchLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchLabelAccess().getAlternatives()); }
(rule__SwitchLabel__Alternatives)
{ after(grammarAccess.getSwitchLabelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElsePart
entryRuleElsePart 
:
{ before(grammarAccess.getElsePartRule()); }
	 ruleElsePart
{ after(grammarAccess.getElsePartRule()); } 
	 EOF 
;

// Rule ElsePart
ruleElsePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElsePartAccess().getGroup()); }
(rule__ElsePart__Group__0)
{ after(grammarAccess.getElsePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMaybeEmptyBlock
entryRuleMaybeEmptyBlock 
:
{ before(grammarAccess.getMaybeEmptyBlockRule()); }
	 ruleMaybeEmptyBlock
{ after(grammarAccess.getMaybeEmptyBlockRule()); } 
	 EOF 
;

// Rule MaybeEmptyBlock
ruleMaybeEmptyBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMaybeEmptyBlockAccess().getAlternatives()); }
(rule__MaybeEmptyBlock__Alternatives)
{ after(grammarAccess.getMaybeEmptyBlockAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__InputSectionPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSectionPartAccess().getGroup_0()); }
(rule__InputSectionPart__Group_0__0)
{ after(grammarAccess.getInputSectionPartAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInputSectionPartAccess().getPPDirectiveParserRuleCall_1()); }
	rulePPDirective
{ after(grammarAccess.getInputSectionPartAccess().getPPDirectiveParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPDirective__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDirectiveAccess().getPPDeclarationParserRuleCall_0()); }
	rulePPDeclaration
{ after(grammarAccess.getPPDirectiveAccess().getPPDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPPDirectiveAccess().getPPConditionalParserRuleCall_1()); }
	rulePPConditional
{ after(grammarAccess.getPPDirectiveAccess().getPPConditionalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPPDirectiveAccess().getPPLineParserRuleCall_2()); }
	rulePPLine
{ after(grammarAccess.getPPDirectiveAccess().getPPLineParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPPDirectiveAccess().getPPDiagnosticParserRuleCall_3()); }
	rulePPDiagnostic
{ after(grammarAccess.getPPDirectiveAccess().getPPDiagnosticParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPPDirectiveAccess().getPPRegionParserRuleCall_4()); }
	rulePPRegion
{ after(grammarAccess.getPPDirectiveAccess().getPPRegionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPDiagnostic__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDiagnosticAccess().getGroup_1_0()); }
(rule__PPDiagnostic__Group_1_0__0)
{ after(grammarAccess.getPPDiagnosticAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPPDiagnosticAccess().getGroup_1_1()); }
(rule__PPDiagnostic__Group_1_1__0)
{ after(grammarAccess.getPPDiagnosticAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LineIndicator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineIndicatorAccess().getGroup_0()); }
(rule__LineIndicator__Group_0__0)
{ after(grammarAccess.getLineIndicatorAccess().getGroup_0()); }
)

    |(
(
{ before(grammarAccess.getLineIndicatorAccess().getINTTerminalRuleCall_1()); }
(	RULE_INT)
{ after(grammarAccess.getLineIndicatorAccess().getINTTerminalRuleCall_1()); }
)
(
{ before(grammarAccess.getLineIndicatorAccess().getINTTerminalRuleCall_1()); }
(	RULE_INT)*
{ after(grammarAccess.getLineIndicatorAccess().getINTTerminalRuleCall_1()); }
)
)

    |(
{ before(grammarAccess.getLineIndicatorAccess().getDefaultKeyword_2()); }

	'default' 

{ after(grammarAccess.getLineIndicatorAccess().getDefaultKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getEqualsSignEqualsSignKeyword_0_0()); }

	'==' 

{ after(grammarAccess.getPPEqualityExpression2Access().getEqualsSignEqualsSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getPPEqualityExpression2Access().getExclamationMarkEqualsSignKeyword_0_1()); }

	'!=' 

{ after(grammarAccess.getPPEqualityExpression2Access().getExclamationMarkEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPUnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPUnaryExpressionAccess().getPPPrimaryExpressionParserRuleCall_0()); }
	rulePPPrimaryExpression
{ after(grammarAccess.getPPUnaryExpressionAccess().getPPPrimaryExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPPUnaryExpressionAccess().getGroup_1()); }
(rule__PPUnaryExpression__Group_1__0)
{ after(grammarAccess.getPPUnaryExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getPPPrimaryExpressionAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getPPPrimaryExpressionAccess().getFalseKeyword_1()); }
)

    |(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getConditionalSymbolParserRuleCall_2()); }
	ruleConditionalSymbol
{ after(grammarAccess.getPPPrimaryExpressionAccess().getConditionalSymbolParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getGroup_3()); }
(rule__PPPrimaryExpression__Group_3__0)
{ after(grammarAccess.getPPPrimaryExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getDefineKeyword_1_0()); }

	'define' 

{ after(grammarAccess.getPPDeclarationAccess().getDefineKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getPPDeclarationAccess().getUndefKeyword_1_1()); }

	'undef' 

{ after(grammarAccess.getPPDeclarationAccess().getUndefKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputElementAccess().getWSTerminalRuleCall_0()); }
	RULE_WS
{ after(grammarAccess.getInputElementAccess().getWSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInputElementAccess().getCommentParserRuleCall_1()); }
	ruleComment
{ after(grammarAccess.getInputElementAccess().getCommentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInputElementAccess().getTokenParserRuleCall_2()); }
	ruleToken
{ after(grammarAccess.getInputElementAccess().getTokenParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getTokenAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getKeywordsParserRuleCall_1()); }
	ruleKeywords
{ after(grammarAccess.getTokenAccess().getKeywordsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getIntegerLiteralParserRuleCall_2()); }
	ruleIntegerLiteral
{ after(grammarAccess.getTokenAccess().getIntegerLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getRealLiteralParserRuleCall_3()); }
	ruleRealLiteral
{ after(grammarAccess.getTokenAccess().getRealLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getCharacterLiteralParserRuleCall_4()); }
	ruleCharacterLiteral
{ after(grammarAccess.getTokenAccess().getCharacterLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getStringLiteralParserRuleCall_5()); }
	ruleStringLiteral
{ after(grammarAccess.getTokenAccess().getStringLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getTokenAccess().getOPERATOR_OR_PUNCTUATORTerminalRuleCall_6()); }
	RULE_OPERATOR_OR_PUNCTUATOR
{ after(grammarAccess.getTokenAccess().getOPERATOR_OR_PUNCTUATORTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keywords__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordsAccess().getAbstractKeyword_0()); }

	'abstract' 

{ after(grammarAccess.getKeywordsAccess().getAbstractKeyword_0()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getAsKeyword_1()); }

	'as' 

{ after(grammarAccess.getKeywordsAccess().getAsKeyword_1()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getBaseKeyword_2()); }

	'base' 

{ after(grammarAccess.getKeywordsAccess().getBaseKeyword_2()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getBreakKeyword_3()); }

	'break' 

{ after(grammarAccess.getKeywordsAccess().getBreakKeyword_3()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getCaseKeyword_4()); }

	'case' 

{ after(grammarAccess.getKeywordsAccess().getCaseKeyword_4()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getCatchKeyword_5()); }

	'catch' 

{ after(grammarAccess.getKeywordsAccess().getCatchKeyword_5()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getCheckedKeyword_6()); }

	'checked' 

{ after(grammarAccess.getKeywordsAccess().getCheckedKeyword_6()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getClassKeyword_7()); }

	'class' 

{ after(grammarAccess.getKeywordsAccess().getClassKeyword_7()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getConstKeyword_8()); }

	'const' 

{ after(grammarAccess.getKeywordsAccess().getConstKeyword_8()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getContinueKeyword_9()); }

	'continue' 

{ after(grammarAccess.getKeywordsAccess().getContinueKeyword_9()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getDefaultKeyword_10()); }

	'default' 

{ after(grammarAccess.getKeywordsAccess().getDefaultKeyword_10()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getDelegateKeyword_11()); }

	'delegate' 

{ after(grammarAccess.getKeywordsAccess().getDelegateKeyword_11()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getDoKeyword_12()); }

	'do' 

{ after(grammarAccess.getKeywordsAccess().getDoKeyword_12()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getElseKeyword_13()); }

	'else' 

{ after(grammarAccess.getKeywordsAccess().getElseKeyword_13()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getEnumKeyword_14()); }

	'enum' 

{ after(grammarAccess.getKeywordsAccess().getEnumKeyword_14()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getEventKeyword_15()); }

	'event' 

{ after(grammarAccess.getKeywordsAccess().getEventKeyword_15()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getExplicitKeyword_16()); }

	'explicit' 

{ after(grammarAccess.getKeywordsAccess().getExplicitKeyword_16()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getExternKeyword_17()); }

	'extern' 

{ after(grammarAccess.getKeywordsAccess().getExternKeyword_17()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getFalseKeyword_18()); }

	'false' 

{ after(grammarAccess.getKeywordsAccess().getFalseKeyword_18()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getFinallyKeyword_19()); }

	'finally' 

{ after(grammarAccess.getKeywordsAccess().getFinallyKeyword_19()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getFixedKeyword_20()); }

	'fixed' 

{ after(grammarAccess.getKeywordsAccess().getFixedKeyword_20()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getForKeyword_21()); }

	'for' 

{ after(grammarAccess.getKeywordsAccess().getForKeyword_21()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getForeachKeyword_22()); }

	'foreach' 

{ after(grammarAccess.getKeywordsAccess().getForeachKeyword_22()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getGotoKeyword_23()); }

	'goto' 

{ after(grammarAccess.getKeywordsAccess().getGotoKeyword_23()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getIfKeyword_24()); }

	'if' 

{ after(grammarAccess.getKeywordsAccess().getIfKeyword_24()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getImplicitKeyword_25()); }

	'implicit' 

{ after(grammarAccess.getKeywordsAccess().getImplicitKeyword_25()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getInKeyword_26()); }

	'in' 

{ after(grammarAccess.getKeywordsAccess().getInKeyword_26()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getInterfaceKeyword_27()); }

	'interface' 

{ after(grammarAccess.getKeywordsAccess().getInterfaceKeyword_27()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getInternalKeyword_28()); }

	'internal' 

{ after(grammarAccess.getKeywordsAccess().getInternalKeyword_28()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getIsKeyword_29()); }

	'is' 

{ after(grammarAccess.getKeywordsAccess().getIsKeyword_29()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getLockKeyword_30()); }

	'lock' 

{ after(grammarAccess.getKeywordsAccess().getLockKeyword_30()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getNamespaceKeyword_31()); }

	'namespace' 

{ after(grammarAccess.getKeywordsAccess().getNamespaceKeyword_31()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getNewKeyword_32()); }

	'new' 

{ after(grammarAccess.getKeywordsAccess().getNewKeyword_32()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getNullKeyword_33()); }

	'null' 

{ after(grammarAccess.getKeywordsAccess().getNullKeyword_33()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getOperatorKeyword_34()); }

	'operator' 

{ after(grammarAccess.getKeywordsAccess().getOperatorKeyword_34()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getOutKeyword_35()); }

	'out' 

{ after(grammarAccess.getKeywordsAccess().getOutKeyword_35()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getOverrideKeyword_36()); }

	'override' 

{ after(grammarAccess.getKeywordsAccess().getOverrideKeyword_36()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getParamsKeyword_37()); }

	'params' 

{ after(grammarAccess.getKeywordsAccess().getParamsKeyword_37()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getPrivateKeyword_38()); }

	'private' 

{ after(grammarAccess.getKeywordsAccess().getPrivateKeyword_38()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getProtectedKeyword_39()); }

	'protected' 

{ after(grammarAccess.getKeywordsAccess().getProtectedKeyword_39()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getPublicKeyword_40()); }

	'public' 

{ after(grammarAccess.getKeywordsAccess().getPublicKeyword_40()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getReadonlyKeyword_41()); }

	'readonly' 

{ after(grammarAccess.getKeywordsAccess().getReadonlyKeyword_41()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getRefKeyword_42()); }

	'ref' 

{ after(grammarAccess.getKeywordsAccess().getRefKeyword_42()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getReturnKeyword_43()); }

	'return' 

{ after(grammarAccess.getKeywordsAccess().getReturnKeyword_43()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getSealedKeyword_44()); }

	'sealed' 

{ after(grammarAccess.getKeywordsAccess().getSealedKeyword_44()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getSizeofKeyword_45()); }

	'sizeof' 

{ after(grammarAccess.getKeywordsAccess().getSizeofKeyword_45()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getStackallocKeyword_46()); }

	'stackalloc' 

{ after(grammarAccess.getKeywordsAccess().getStackallocKeyword_46()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getStaticKeyword_47()); }

	'static' 

{ after(grammarAccess.getKeywordsAccess().getStaticKeyword_47()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getStructKeyword_48()); }

	'struct' 

{ after(grammarAccess.getKeywordsAccess().getStructKeyword_48()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getSwitchKeyword_49()); }

	'switch' 

{ after(grammarAccess.getKeywordsAccess().getSwitchKeyword_49()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getThisKeyword_50()); }

	'this' 

{ after(grammarAccess.getKeywordsAccess().getThisKeyword_50()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getThrowKeyword_51()); }

	'throw' 

{ after(grammarAccess.getKeywordsAccess().getThrowKeyword_51()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getTrueKeyword_52()); }

	'true' 

{ after(grammarAccess.getKeywordsAccess().getTrueKeyword_52()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getTryKeyword_53()); }

	'try' 

{ after(grammarAccess.getKeywordsAccess().getTryKeyword_53()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getTypeofKeyword_54()); }

	'typeof' 

{ after(grammarAccess.getKeywordsAccess().getTypeofKeyword_54()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getUncheckedKeyword_55()); }

	'unchecked' 

{ after(grammarAccess.getKeywordsAccess().getUncheckedKeyword_55()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getUnsafeKeyword_56()); }

	'unsafe' 

{ after(grammarAccess.getKeywordsAccess().getUnsafeKeyword_56()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getUsingKeyword_57()); }

	'using' 

{ after(grammarAccess.getKeywordsAccess().getUsingKeyword_57()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getVirtualKeyword_58()); }

	'virtual' 

{ after(grammarAccess.getKeywordsAccess().getVirtualKeyword_58()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getVoidKeyword_59()); }

	'void' 

{ after(grammarAccess.getKeywordsAccess().getVoidKeyword_59()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getVolatileKeyword_60()); }

	'volatile' 

{ after(grammarAccess.getKeywordsAccess().getVolatileKeyword_60()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getWhileKeyword_61()); }

	'while' 

{ after(grammarAccess.getKeywordsAccess().getWhileKeyword_61()); }
)

    |(
{ before(grammarAccess.getKeywordsAccess().getPredefinedTypeParserRuleCall_62()); }
	rulePredefinedType
{ after(grammarAccess.getKeywordsAccess().getPredefinedTypeParserRuleCall_62()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredefinedType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredefinedTypeAccess().getBoolKeyword_0()); }

	'bool' 

{ after(grammarAccess.getPredefinedTypeAccess().getBoolKeyword_0()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getByteKeyword_1()); }

	'byte' 

{ after(grammarAccess.getPredefinedTypeAccess().getByteKeyword_1()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getCharKeyword_2()); }

	'char' 

{ after(grammarAccess.getPredefinedTypeAccess().getCharKeyword_2()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getDecimalKeyword_3()); }

	'decimal' 

{ after(grammarAccess.getPredefinedTypeAccess().getDecimalKeyword_3()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getDoubleKeyword_4()); }

	'double' 

{ after(grammarAccess.getPredefinedTypeAccess().getDoubleKeyword_4()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getFloatKeyword_5()); }

	'float' 

{ after(grammarAccess.getPredefinedTypeAccess().getFloatKeyword_5()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getIntKeyword_6()); }

	'int' 

{ after(grammarAccess.getPredefinedTypeAccess().getIntKeyword_6()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getLongKeyword_7()); }

	'long' 

{ after(grammarAccess.getPredefinedTypeAccess().getLongKeyword_7()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getObjectKeyword_8()); }

	'object' 

{ after(grammarAccess.getPredefinedTypeAccess().getObjectKeyword_8()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getShortKeyword_9()); }

	'short' 

{ after(grammarAccess.getPredefinedTypeAccess().getShortKeyword_9()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getSbyteKeyword_10()); }

	'sbyte' 

{ after(grammarAccess.getPredefinedTypeAccess().getSbyteKeyword_10()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getStringKeyword_11()); }

	'string' 

{ after(grammarAccess.getPredefinedTypeAccess().getStringKeyword_11()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getUintKeyword_12()); }

	'uint' 

{ after(grammarAccess.getPredefinedTypeAccess().getUintKeyword_12()); }
)

    |(
{ before(grammarAccess.getPredefinedTypeAccess().getGroup_13()); }
(rule__PredefinedType__Group_13__0)
{ after(grammarAccess.getPredefinedTypeAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getGroup_0()); }
(rule__IntegerLiteral__Group_0__0)
{ after(grammarAccess.getIntegerLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getIntegerLiteralAccess().getGroup_1()); }
(rule__IntegerLiteral__Group_1__0)
{ after(grammarAccess.getIntegerLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_0()); }

	'0x' 

{ after(grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_1()); }

	'0X' 

{ after(grammarAccess.getIntegerLiteralAccess().getXKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getGroup_0()); }
(rule__RealLiteral__Group_0__0)
{ after(grammarAccess.getRealLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRealLiteralAccess().getGroup_1()); }
(rule__RealLiteral__Group_1__0)
{ after(grammarAccess.getRealLiteralAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getRealLiteralAccess().getGroup_2()); }
(rule__RealLiteral__Group_2__0)
{ after(grammarAccess.getRealLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getGroup_0()); }
(rule__ExponentPart__Group_0__0)
{ after(grammarAccess.getExponentPartAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExponentPartAccess().getGroup_1()); }
(rule__ExponentPart__Group_1__0)
{ after(grammarAccess.getExponentPartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Character__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
	RULE_SINGLE_CHARACTER
{ after(grammarAccess.getCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCharacterAccess().getGroup_1()); }
(rule__Character__Group_1__0)
{ after(grammarAccess.getCharacterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EscapeSequence__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapeSequenceAccess().getESCAPE_SEQUENCETerminalRuleCall_0()); }
	RULE_ESCAPE_SEQUENCE
{ after(grammarAccess.getEscapeSequenceAccess().getESCAPE_SEQUENCETerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEscapeSequenceAccess().getHexadecimalEscapeSequenceParserRuleCall_1()); }
	ruleHexadecimalEscapeSequence
{ after(grammarAccess.getEscapeSequenceAccess().getHexadecimalEscapeSequenceParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEscapeSequenceAccess().getUnicodeCharacterEscapeSequenceParserRuleCall_2()); }
	ruleUnicodeCharacterEscapeSequence
{ after(grammarAccess.getEscapeSequenceAccess().getUnicodeCharacterEscapeSequenceParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getGroup_0()); }
(rule__UnicodeCharacterEscapeSequence__Group_0__0)
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getGroup_1()); }
(rule__UnicodeCharacterEscapeSequence__Group_1__0)
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup_0()); }
(rule__StringLiteral__Group_0__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStringLiteralAccess().getGroup_1()); }
(rule__StringLiteral__Group_1__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerbatimStringCharacter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerbatimStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
	RULE_SINGLE_CHARACTER
{ after(grammarAccess.getVerbatimStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVerbatimStringCharacterAccess().getQUOTE_ESCAPE_SEQUENCETerminalRuleCall_1()); }
	RULE_QUOTE_ESCAPE_SEQUENCE
{ after(grammarAccess.getVerbatimStringCharacterAccess().getQUOTE_ESCAPE_SEQUENCETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularStringCharacter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
	RULE_SINGLE_CHARACTER
{ after(grammarAccess.getRegularStringCharacterAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRegularStringCharacterAccess().getGroup_1()); }
(rule__RegularStringCharacter__Group_1__0)
{ after(grammarAccess.getRegularStringCharacterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getSL_COMMENTTerminalRuleCall_0()); }
	RULE_SL_COMMENT
{ after(grammarAccess.getCommentAccess().getSL_COMMENTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCommentAccess().getML_COMMENTTerminalRuleCall_1()); }
	RULE_ML_COMMENT
{ after(grammarAccess.getCommentAccess().getML_COMMENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getAvailableIdentifierParserRuleCall_0()); }
	ruleAvailableIdentifier
{ after(grammarAccess.getIdentifierAccess().getAvailableIdentifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getGroup_1()); }
(rule__Identifier__Group_1__0)
{ after(grammarAccess.getIdentifierAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierPartCharacter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierPartCharacterAccess().getLETTERTerminalRuleCall_0()); }
	RULE_LETTER
{ after(grammarAccess.getIdentifierPartCharacterAccess().getLETTERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdentifierPartCharacterAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getIdentifierPartCharacterAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceMemberDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceMemberDeclarationAccess().getNamespaceDeclarationParserRuleCall_0()); }
	ruleNamespaceDeclaration
{ after(grammarAccess.getNamespaceMemberDeclarationAccess().getNamespaceDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNamespaceMemberDeclarationAccess().getTypeDeclarationParserRuleCall_1()); }
	ruleTypeDeclaration
{ after(grammarAccess.getNamespaceMemberDeclarationAccess().getTypeDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getClassDeclarationParserRuleCall_0()); }
	ruleClassDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getClassDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getGroup_1()); }
(rule__TypeDeclaration__Group_1__0)
{ after(grammarAccess.getTypeDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getStructDeclarationParserRuleCall_1_1_0()); }
	ruleStructDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getStructDeclarationParserRuleCall_1_1_0()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getInterfaceDeclarationParserRuleCall_1_1_1()); }
	ruleInterfaceDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getInterfaceDeclarationParserRuleCall_1_1_1()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getEnumDeclarationParserRuleCall_1_1_2()); }
	ruleEnumDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getEnumDeclarationParserRuleCall_1_1_2()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getDelegateDeclarationParserRuleCall_1_1_3()); }
	ruleDelegateDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getDelegateDeclarationParserRuleCall_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getModifierAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getPublicKeyword_1()); }

	'public' 

{ after(grammarAccess.getModifierAccess().getPublicKeyword_1()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getInternalKeyword_3()); }

	'internal' 

{ after(grammarAccess.getModifierAccess().getInternalKeyword_3()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getPrivateKeyword_4()); }

	'private' 

{ after(grammarAccess.getModifierAccess().getPrivateKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMemberDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getInterfaceMethodDeclarationParserRuleCall_1_0()); }
	ruleInterfaceMethodDeclaration
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getInterfaceMethodDeclarationParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getInterfaceEventDeclarationParserRuleCall_1_1()); }
	ruleInterfaceEventDeclaration
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getInterfaceEventDeclarationParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getGroup_1_2()); }
(rule__InterfaceMemberDeclaration__Group_1_2__0)
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMemberDeclaration__Alternatives_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getInterfaceIndexerDeclarationParserRuleCall_1_2_1_0()); }
	ruleInterfaceIndexerDeclaration
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getInterfaceIndexerDeclarationParserRuleCall_1_2_1_0()); }
)

    |(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getInterfacePropertyDeclarationParserRuleCall_1_2_1_1()); }
	ruleInterfacePropertyDeclaration
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getInterfacePropertyDeclarationParserRuleCall_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getGroup_1_0()); }
(rule__InterfaceAccessors__Group_1_0__0)
{ after(grammarAccess.getInterfaceAccessorsAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getInterfaceAccessorsAccess().getGroup_1_1()); }
(rule__InterfaceAccessors__Group_1_1__0)
{ after(grammarAccess.getInterfaceAccessorsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructMemberDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberDeclarationAccess().getConstantDeclarationParserRuleCall_0()); }
	ruleConstantDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getConstantDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStructMemberDeclarationAccess().getFieldDeclarationParserRuleCall_1()); }
	ruleFieldDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getFieldDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStructMemberDeclarationAccess().getMethodDeclarationParserRuleCall_2()); }
	ruleMethodDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getMethodDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStructMemberDeclarationAccess().getPropertyDeclarationParserRuleCall_3()); }
	rulePropertyDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getPropertyDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStructMemberDeclarationAccess().getEventDeclarationParserRuleCall_4()); }
	ruleEventDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getEventDeclarationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStructMemberDeclarationAccess().getIndexerDeclarationParserRuleCall_5()); }
	ruleIndexerDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getIndexerDeclarationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStructMemberDeclarationAccess().getOperatorDeclarationParserRuleCall_6()); }
	ruleOperatorDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getOperatorDeclarationParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStructMemberDeclarationAccess().getConstructorDeclarationParserRuleCall_7()); }
	ruleConstructorDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getConstructorDeclarationParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStructMemberDeclarationAccess().getStaticConstructorDeclarationParserRuleCall_8()); }
	ruleStaticConstructorDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getStaticConstructorDeclarationParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStructMemberDeclarationAccess().getTypeDeclarationParserRuleCall_9()); }
	ruleTypeDeclaration
{ after(grammarAccess.getStructMemberDeclarationAccess().getTypeDeclarationParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMemberDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberDeclarationAccess().getMethodDeclarationParserRuleCall_0()); }
	ruleMethodDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getMethodDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getGroup_1()); }
(rule__ClassMemberDeclaration__Group_1__0)
{ after(grammarAccess.getClassMemberDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMemberDeclaration__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberDeclarationAccess().getConstantDeclarationParserRuleCall_1_1_0()); }
	ruleConstantDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getConstantDeclarationParserRuleCall_1_1_0()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getFieldDeclarationParserRuleCall_1_1_1()); }
	ruleFieldDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getFieldDeclarationParserRuleCall_1_1_1()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getPropertyDeclarationParserRuleCall_1_1_2()); }
	rulePropertyDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getPropertyDeclarationParserRuleCall_1_1_2()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getEventDeclarationParserRuleCall_1_1_3()); }
	ruleEventDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getEventDeclarationParserRuleCall_1_1_3()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getIndexerDeclarationParserRuleCall_1_1_4()); }
	ruleIndexerDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getIndexerDeclarationParserRuleCall_1_1_4()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getOperatorDeclarationParserRuleCall_1_1_5()); }
	ruleOperatorDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getOperatorDeclarationParserRuleCall_1_1_5()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getConstructorDeclarationParserRuleCall_1_1_6()); }
	ruleConstructorDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getConstructorDeclarationParserRuleCall_1_1_6()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getDestructorDeclarationParserRuleCall_1_1_7()); }
	ruleDestructorDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getDestructorDeclarationParserRuleCall_1_1_7()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getStaticConstructorDeclarationParserRuleCall_1_1_8()); }
	ruleStaticConstructorDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getStaticConstructorDeclarationParserRuleCall_1_1_8()); }
)

    |(
{ before(grammarAccess.getClassMemberDeclarationAccess().getTypeDeclarationParserRuleCall_1_1_9()); }
	ruleTypeDeclaration
{ after(grammarAccess.getClassMemberDeclarationAccess().getTypeDeclarationParserRuleCall_1_1_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorModifiers__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorModifiersAccess().getGroup_0()); }
(rule__StaticConstructorModifiers__Group_0__0)
{ after(grammarAccess.getStaticConstructorModifiersAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStaticConstructorModifiersAccess().getGroup_1()); }
(rule__StaticConstructorModifiers__Group_1__0)
{ after(grammarAccess.getStaticConstructorModifiersAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getGroup_0()); }
(rule__ConstructorInitializer__Group_0__0)
{ after(grammarAccess.getConstructorInitializerAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getConstructorInitializerAccess().getGroup_1()); }
(rule__ConstructorInitializer__Group_1__0)
{ after(grammarAccess.getConstructorInitializerAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefOrOut__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefOrOutAccess().getRefKeyword_0()); }

	'ref' 

{ after(grammarAccess.getRefOrOutAccess().getRefKeyword_0()); }
)

    |(
{ before(grammarAccess.getRefOrOutAccess().getOutKeyword_1()); }

	'out' 

{ after(grammarAccess.getRefOrOutAccess().getOutKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorModifierAccess().getPublicKeyword_0()); }

	'public' 

{ after(grammarAccess.getConstructorModifierAccess().getPublicKeyword_0()); }
)

    |(
{ before(grammarAccess.getConstructorModifierAccess().getProtectedKeyword_1()); }

	'protected' 

{ after(grammarAccess.getConstructorModifierAccess().getProtectedKeyword_1()); }
)

    |(
{ before(grammarAccess.getConstructorModifierAccess().getInternalKeyword_2()); }

	'internal' 

{ after(grammarAccess.getConstructorModifierAccess().getInternalKeyword_2()); }
)

    |(
{ before(grammarAccess.getConstructorModifierAccess().getPrivateKeyword_3()); }

	'private' 

{ after(grammarAccess.getConstructorModifierAccess().getPrivateKeyword_3()); }
)

    |(
{ before(grammarAccess.getConstructorModifierAccess().getExternKeyword_4()); }

	'extern' 

{ after(grammarAccess.getConstructorModifierAccess().getExternKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDeclarator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDeclaratorAccess().getUnaryOperatorDeclaratorParserRuleCall_0()); }
	ruleUnaryOperatorDeclarator
{ after(grammarAccess.getOperatorDeclaratorAccess().getUnaryOperatorDeclaratorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperatorDeclaratorAccess().getBinaryOperatorDeclaratorParserRuleCall_1()); }
	ruleBinaryOperatorDeclarator
{ after(grammarAccess.getOperatorDeclaratorAccess().getBinaryOperatorDeclaratorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOperatorDeclaratorAccess().getConversionOperatorDeclaratorParserRuleCall_2()); }
	ruleConversionOperatorDeclarator
{ after(grammarAccess.getOperatorDeclaratorAccess().getConversionOperatorDeclaratorParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConversionKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversionKindAccess().getImplicitKeyword_0()); }

	'implicit' 

{ after(grammarAccess.getConversionKindAccess().getImplicitKeyword_0()); }
)

    |(
{ before(grammarAccess.getConversionKindAccess().getExplicitKeyword_1()); }

	'explicit' 

{ after(grammarAccess.getConversionKindAccess().getExplicitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OverloadableBinaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getOPERATOR_OR_SIGNTerminalRuleCall_0()); }
	RULE_OPERATOR_OR_SIGN
{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getOPERATOR_OR_SIGNTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getAsteriskKeyword_1()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getSolidusKeyword_2()); }

	'/' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getSolidusKeyword_2()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getPercentSignKeyword_3()); }

	'%' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getPercentSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getAMPERSANDTerminalRuleCall_4()); }
	RULE_AMPERSAND
{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getAMPERSANDTerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getBARTerminalRuleCall_5()); }
	RULE_BAR
{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getBARTerminalRuleCall_5()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getCircumflexAccentKeyword_6()); }

	'^' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getCircumflexAccentKeyword_6()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getLessThanSignLessThanSignKeyword_7()); }

	'<<' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getLessThanSignLessThanSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_8()); }

	'>>' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getEqualsSignEqualsSignKeyword_9()); }

	'==' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getEqualsSignEqualsSignKeyword_9()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getExclamationMarkEqualsSignKeyword_10()); }

	'!=' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getExclamationMarkEqualsSignKeyword_10()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getGREATER_THANTerminalRuleCall_11()); }
	RULE_GREATER_THAN
{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getGREATER_THANTerminalRuleCall_11()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getLESS_THANTerminalRuleCall_12()); }
	RULE_LESS_THAN
{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getLESS_THANTerminalRuleCall_12()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getGreaterThanSignEqualsSignKeyword_13()); }

	'>=' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getGreaterThanSignEqualsSignKeyword_13()); }
)

    |(
{ before(grammarAccess.getOverloadableBinaryOperatorAccess().getLessThanSignEqualsSignKeyword_14()); }

	'<=' 

{ after(grammarAccess.getOverloadableBinaryOperatorAccess().getLessThanSignEqualsSignKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OverloadableUnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverloadableUnaryOperatorAccess().getOPERATOR_OR_SIGNTerminalRuleCall_0()); }
	RULE_OPERATOR_OR_SIGN
{ after(grammarAccess.getOverloadableUnaryOperatorAccess().getOPERATOR_OR_SIGNTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOverloadableUnaryOperatorAccess().getINCREMENT_DECREMENTTerminalRuleCall_1()); }
	RULE_INCREMENT_DECREMENT
{ after(grammarAccess.getOverloadableUnaryOperatorAccess().getINCREMENT_DECREMENTTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOverloadableUnaryOperatorAccess().getExclamationMarkKeyword_2()); }

	'!' 

{ after(grammarAccess.getOverloadableUnaryOperatorAccess().getExclamationMarkKeyword_2()); }
)

    |(
{ before(grammarAccess.getOverloadableUnaryOperatorAccess().getTildeKeyword_3()); }

	'~' 

{ after(grammarAccess.getOverloadableUnaryOperatorAccess().getTildeKeyword_3()); }
)

    |(
{ before(grammarAccess.getOverloadableUnaryOperatorAccess().getTrueKeyword_4()); }

	'true' 

{ after(grammarAccess.getOverloadableUnaryOperatorAccess().getTrueKeyword_4()); }
)

    |(
{ before(grammarAccess.getOverloadableUnaryOperatorAccess().getFalseKeyword_5()); }

	'false' 

{ after(grammarAccess.getOverloadableUnaryOperatorAccess().getFalseKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorModifierAccess().getPublicKeyword_0()); }

	'public' 

{ after(grammarAccess.getOperatorModifierAccess().getPublicKeyword_0()); }
)

    |(
{ before(grammarAccess.getOperatorModifierAccess().getStaticKeyword_1()); }

	'static' 

{ after(grammarAccess.getOperatorModifierAccess().getStaticKeyword_1()); }
)

    |(
{ before(grammarAccess.getOperatorModifierAccess().getExternKeyword_2()); }

	'extern' 

{ after(grammarAccess.getOperatorModifierAccess().getExternKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getGroup_1_0()); }
(rule__IndexerDeclarator__Group_1_0__0)
{ after(grammarAccess.getIndexerDeclaratorAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getIndexerDeclaratorAccess().getGroup_1_1()); }
(rule__IndexerDeclarator__Group_1_1__0)
{ after(grammarAccess.getIndexerDeclaratorAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerModifierAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getIndexerModifierAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getIndexerModifierAccess().getPublicKeyword_1()); }

	'public' 

{ after(grammarAccess.getIndexerModifierAccess().getPublicKeyword_1()); }
)

    |(
{ before(grammarAccess.getIndexerModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getIndexerModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getIndexerModifierAccess().getInternalKeyword_3()); }

	'internal' 

{ after(grammarAccess.getIndexerModifierAccess().getInternalKeyword_3()); }
)

    |(
{ before(grammarAccess.getIndexerModifierAccess().getPrivateKeyword_4()); }

	'private' 

{ after(grammarAccess.getIndexerModifierAccess().getPrivateKeyword_4()); }
)

    |(
{ before(grammarAccess.getIndexerModifierAccess().getVirtualKeyword_5()); }

	'virtual' 

{ after(grammarAccess.getIndexerModifierAccess().getVirtualKeyword_5()); }
)

    |(
{ before(grammarAccess.getIndexerModifierAccess().getSealedKeyword_6()); }

	'sealed' 

{ after(grammarAccess.getIndexerModifierAccess().getSealedKeyword_6()); }
)

    |(
{ before(grammarAccess.getIndexerModifierAccess().getOverrideKeyword_7()); }

	'override' 

{ after(grammarAccess.getIndexerModifierAccess().getOverrideKeyword_7()); }
)

    |(
{ before(grammarAccess.getIndexerModifierAccess().getAbstractKeyword_8()); }

	'abstract' 

{ after(grammarAccess.getIndexerModifierAccess().getAbstractKeyword_8()); }
)

    |(
{ before(grammarAccess.getIndexerModifierAccess().getExternKeyword_9()); }

	'extern' 

{ after(grammarAccess.getIndexerModifierAccess().getExternKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getGroup_3_0()); }
(rule__EventDeclaration__Group_3_0__0)
{ after(grammarAccess.getEventDeclarationAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getEventDeclarationAccess().getGroup_3_1()); }
(rule__EventDeclaration__Group_3_1__0)
{ after(grammarAccess.getEventDeclarationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventAccessorDeclarations__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getGroup_1_0()); }
(rule__EventAccessorDeclarations__Group_1_0__0)
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getGroup_1_1()); }
(rule__EventAccessorDeclarations__Group_1_1__0)
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventModifierAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getEventModifierAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getPublicKeyword_1()); }

	'public' 

{ after(grammarAccess.getEventModifierAccess().getPublicKeyword_1()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getEventModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getInternalKeyword_3()); }

	'internal' 

{ after(grammarAccess.getEventModifierAccess().getInternalKeyword_3()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getPrivateKeyword_4()); }

	'private' 

{ after(grammarAccess.getEventModifierAccess().getPrivateKeyword_4()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getStaticKeyword_5()); }

	'static' 

{ after(grammarAccess.getEventModifierAccess().getStaticKeyword_5()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getVirtualKeyword_6()); }

	'virtual' 

{ after(grammarAccess.getEventModifierAccess().getVirtualKeyword_6()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getSealedKeyword_7()); }

	'sealed' 

{ after(grammarAccess.getEventModifierAccess().getSealedKeyword_7()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getOverrideKeyword_8()); }

	'override' 

{ after(grammarAccess.getEventModifierAccess().getOverrideKeyword_8()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getAbstractKeyword_9()); }

	'abstract' 

{ after(grammarAccess.getEventModifierAccess().getAbstractKeyword_9()); }
)

    |(
{ before(grammarAccess.getEventModifierAccess().getExternKeyword_10()); }

	'extern' 

{ after(grammarAccess.getEventModifierAccess().getExternKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessorDeclarations__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getGroup_1_0()); }
(rule__AccessorDeclarations__Group_1_0__0)
{ after(grammarAccess.getAccessorDeclarationsAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getAccessorDeclarationsAccess().getGroup_1_1()); }
(rule__AccessorDeclarations__Group_1_1__0)
{ after(grammarAccess.getAccessorDeclarationsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyModifierAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getPropertyModifierAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getPublicKeyword_1()); }

	'public' 

{ after(grammarAccess.getPropertyModifierAccess().getPublicKeyword_1()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getPropertyModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getInternalKeyword_3()); }

	'internal' 

{ after(grammarAccess.getPropertyModifierAccess().getInternalKeyword_3()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getPrivateKeyword_4()); }

	'private' 

{ after(grammarAccess.getPropertyModifierAccess().getPrivateKeyword_4()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getStaticKeyword_5()); }

	'static' 

{ after(grammarAccess.getPropertyModifierAccess().getStaticKeyword_5()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getVirtualKeyword_6()); }

	'virtual' 

{ after(grammarAccess.getPropertyModifierAccess().getVirtualKeyword_6()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getSealedKeyword_7()); }

	'sealed' 

{ after(grammarAccess.getPropertyModifierAccess().getSealedKeyword_7()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getOverrideKeyword_8()); }

	'override' 

{ after(grammarAccess.getPropertyModifierAccess().getOverrideKeyword_8()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getAbstractKeyword_9()); }

	'abstract' 

{ after(grammarAccess.getPropertyModifierAccess().getAbstractKeyword_9()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getExternKeyword_10()); }

	'extern' 

{ after(grammarAccess.getPropertyModifierAccess().getExternKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getGroup_1_0()); }
(rule__FormalParameterList__Group_1_0__0)
{ after(grammarAccess.getFormalParameterListAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getFormalParameterListAccess().getParameterArrayParserRuleCall_1_1()); }
	ruleParameterArray
{ after(grammarAccess.getFormalParameterListAccess().getParameterArrayParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeOrVoid__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeOrVoidAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getTypeOrVoidAccess().getTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeOrVoidAccess().getVoidKeyword_1()); }

	'void' 

{ after(grammarAccess.getTypeOrVoidAccess().getVoidKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodModifierAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getMethodModifierAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getPublicKeyword_1()); }

	'public' 

{ after(grammarAccess.getMethodModifierAccess().getPublicKeyword_1()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getMethodModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getInternalKeyword_3()); }

	'internal' 

{ after(grammarAccess.getMethodModifierAccess().getInternalKeyword_3()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getPrivateKeyword_4()); }

	'private' 

{ after(grammarAccess.getMethodModifierAccess().getPrivateKeyword_4()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getStaticKeyword_5()); }

	'static' 

{ after(grammarAccess.getMethodModifierAccess().getStaticKeyword_5()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getVirtualKeyword_6()); }

	'virtual' 

{ after(grammarAccess.getMethodModifierAccess().getVirtualKeyword_6()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getSealedKeyword_7()); }

	'sealed' 

{ after(grammarAccess.getMethodModifierAccess().getSealedKeyword_7()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getOverrideKeyword_8()); }

	'override' 

{ after(grammarAccess.getMethodModifierAccess().getOverrideKeyword_8()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getAbstractKeyword_9()); }

	'abstract' 

{ after(grammarAccess.getMethodModifierAccess().getAbstractKeyword_9()); }
)

    |(
{ before(grammarAccess.getMethodModifierAccess().getExternKeyword_10()); }

	'extern' 

{ after(grammarAccess.getMethodModifierAccess().getExternKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getVariableInitializerAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableInitializerAccess().getArrayInitializerParserRuleCall_1()); }
	ruleArrayInitializer
{ after(grammarAccess.getVariableInitializerAccess().getArrayInitializerParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getGroup_0()); }
(rule__ArrayInitializer__Group_0__0)
{ after(grammarAccess.getArrayInitializerAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getArrayInitializerAccess().getGroup_1()); }
(rule__ArrayInitializer__Group_1__0)
{ after(grammarAccess.getArrayInitializerAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldModifierAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getFieldModifierAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getFieldModifierAccess().getPublicKeyword_1()); }

	'public' 

{ after(grammarAccess.getFieldModifierAccess().getPublicKeyword_1()); }
)

    |(
{ before(grammarAccess.getFieldModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getFieldModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getFieldModifierAccess().getInternalKeyword_3()); }

	'internal' 

{ after(grammarAccess.getFieldModifierAccess().getInternalKeyword_3()); }
)

    |(
{ before(grammarAccess.getFieldModifierAccess().getPrivateKeyword_4()); }

	'private' 

{ after(grammarAccess.getFieldModifierAccess().getPrivateKeyword_4()); }
)

    |(
{ before(grammarAccess.getFieldModifierAccess().getStaticKeyword_5()); }

	'static' 

{ after(grammarAccess.getFieldModifierAccess().getStaticKeyword_5()); }
)

    |(
{ before(grammarAccess.getFieldModifierAccess().getReadonlyKeyword_6()); }

	'readonly' 

{ after(grammarAccess.getFieldModifierAccess().getReadonlyKeyword_6()); }
)

    |(
{ before(grammarAccess.getFieldModifierAccess().getVolatileKeyword_7()); }

	'volatile' 

{ after(grammarAccess.getFieldModifierAccess().getVolatileKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantModifierAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getConstantModifierAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getConstantModifierAccess().getPublicKeyword_1()); }

	'public' 

{ after(grammarAccess.getConstantModifierAccess().getPublicKeyword_1()); }
)

    |(
{ before(grammarAccess.getConstantModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getConstantModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getConstantModifierAccess().getInternalKeyword_3()); }

	'internal' 

{ after(grammarAccess.getConstantModifierAccess().getInternalKeyword_3()); }
)

    |(
{ before(grammarAccess.getConstantModifierAccess().getPrivateKeyword_4()); }

	'private' 

{ after(grammarAccess.getConstantModifierAccess().getPrivateKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBase__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBaseAccess().getQualifiedIdentifierListParserRuleCall_1_0()); }
	ruleQualifiedIdentifierList
{ after(grammarAccess.getClassBaseAccess().getQualifiedIdentifierListParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getClassBaseAccess().getGroup_1_1()); }
(rule__ClassBase__Group_1_1__0)
{ after(grammarAccess.getClassBaseAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModifierAccess().getModifierParserRuleCall_0()); }
	ruleModifier
{ after(grammarAccess.getClassModifierAccess().getModifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassModifierAccess().getAbstractKeyword_1()); }

	'abstract' 

{ after(grammarAccess.getClassModifierAccess().getAbstractKeyword_1()); }
)

    |(
{ before(grammarAccess.getClassModifierAccess().getSealedKeyword_2()); }

	'sealed' 

{ after(grammarAccess.getClassModifierAccess().getSealedKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeTarget__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTargetAccess().getFieldKeyword_0()); }

	'field' 

{ after(grammarAccess.getAttributeTargetAccess().getFieldKeyword_0()); }
)

    |(
{ before(grammarAccess.getAttributeTargetAccess().getEventKeyword_1()); }

	'event' 

{ after(grammarAccess.getAttributeTargetAccess().getEventKeyword_1()); }
)

    |(
{ before(grammarAccess.getAttributeTargetAccess().getMethodKeyword_2()); }

	'method' 

{ after(grammarAccess.getAttributeTargetAccess().getMethodKeyword_2()); }
)

    |(
{ before(grammarAccess.getAttributeTargetAccess().getModuleKeyword_3()); }

	'module' 

{ after(grammarAccess.getAttributeTargetAccess().getModuleKeyword_3()); }
)

    |(
{ before(grammarAccess.getAttributeTargetAccess().getParamKeyword_4()); }

	'param' 

{ after(grammarAccess.getAttributeTargetAccess().getParamKeyword_4()); }
)

    |(
{ before(grammarAccess.getAttributeTargetAccess().getPropertyKeyword_5()); }

	'property' 

{ after(grammarAccess.getAttributeTargetAccess().getPropertyKeyword_5()); }
)

    |(
{ before(grammarAccess.getAttributeTargetAccess().getReturnKeyword_6()); }

	'return' 

{ after(grammarAccess.getAttributeTargetAccess().getReturnKeyword_6()); }
)

    |(
{ before(grammarAccess.getAttributeTargetAccess().getTypeKeyword_7()); }

	'type' 

{ after(grammarAccess.getAttributeTargetAccess().getTypeKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression2ParserRuleCall_1_0()); }
	ruleExpression2
{ after(grammarAccess.getExpressionAccess().getExpression2ParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1_1()); }
(rule__Expression__Group_1_1__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getGroup_0()); }
(rule__Expression2__Group_0__0)
{ after(grammarAccess.getExpression2Access().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_1()); }
(rule__Expression2__Group_1__0)
{ after(grammarAccess.getExpression2Access().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_2()); }
(rule__Expression2__Group_2__0)
{ after(grammarAccess.getExpression2Access().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_3()); }
(rule__Expression2__Group_3__0)
{ after(grammarAccess.getExpression2Access().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_4()); }
(rule__Expression2__Group_4__0)
{ after(grammarAccess.getExpression2Access().getGroup_4()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_5()); }
(rule__Expression2__Group_5__0)
{ after(grammarAccess.getExpression2Access().getGroup_5()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_6()); }
(rule__Expression2__Group_6__0)
{ after(grammarAccess.getExpression2Access().getGroup_6()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_7()); }
(rule__Expression2__Group_7__0)
{ after(grammarAccess.getExpression2Access().getGroup_7()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_8()); }
(rule__Expression2__Group_8__0)
{ after(grammarAccess.getExpression2Access().getGroup_8()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_9()); }
(rule__Expression2__Group_9__0)
{ after(grammarAccess.getExpression2Access().getGroup_9()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_10()); }
(rule__Expression2__Group_10__0)
{ after(grammarAccess.getExpression2Access().getGroup_10()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_11()); }
(rule__Expression2__Group_11__0)
{ after(grammarAccess.getExpression2Access().getGroup_11()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_12()); }
(rule__Expression2__Group_12__0)
{ after(grammarAccess.getExpression2Access().getGroup_12()); }
)

    |(
{ before(grammarAccess.getExpression2Access().getGroup_13()); }
(rule__Expression2__Group_13__0)
{ after(grammarAccess.getExpression2Access().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
(rule__UnaryExpression__Group_0__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
(rule__UnaryExpression__Group_1__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_2()); }
	rulePrimaryExpression
{ after(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionUnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionUnaryOperatorAccess().getOPERATOR_OR_PUNCTUATORTerminalRuleCall_0()); }
	RULE_OPERATOR_OR_PUNCTUATOR
{ after(grammarAccess.getExpressionUnaryOperatorAccess().getOPERATOR_OR_PUNCTUATORTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionUnaryOperatorAccess().getINCREMENT_DECREMENTTerminalRuleCall_1()); }
	RULE_INCREMENT_DECREMENT
{ after(grammarAccess.getExpressionUnaryOperatorAccess().getINCREMENT_DECREMENTTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionUnaryOperatorAccess().getExclamationMarkKeyword_2()); }

	'!' 

{ after(grammarAccess.getExpressionUnaryOperatorAccess().getExclamationMarkKeyword_2()); }
)

    |(
{ before(grammarAccess.getExpressionUnaryOperatorAccess().getTildeKeyword_3()); }

	'~' 

{ after(grammarAccess.getExpressionUnaryOperatorAccess().getTildeKeyword_3()); }
)

    |(
{ before(grammarAccess.getExpressionUnaryOperatorAccess().getAsteriskKeyword_4()); }

	'*' 

{ after(grammarAccess.getExpressionUnaryOperatorAccess().getAsteriskKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionShiftOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionShiftOperatorAccess().getLessThanSignLessThanSignKeyword_0()); }

	'<<' 

{ after(grammarAccess.getExpressionShiftOperatorAccess().getLessThanSignLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getExpressionShiftOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }

	'>>' 

{ after(grammarAccess.getExpressionShiftOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionRelationalOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionRelationalOperatorAccess().getLESS_THANTerminalRuleCall_0()); }
	RULE_LESS_THAN
{ after(grammarAccess.getExpressionRelationalOperatorAccess().getLESS_THANTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionRelationalOperatorAccess().getGREATER_THANTerminalRuleCall_1()); }
	RULE_GREATER_THAN
{ after(grammarAccess.getExpressionRelationalOperatorAccess().getGREATER_THANTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); }

	'<=' 

{ after(grammarAccess.getExpressionRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getExpressionRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }

	'>=' 

{ after(grammarAccess.getExpressionRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getExpressionRelationalOperatorAccess().getIsKeyword_4()); }

	'is' 

{ after(grammarAccess.getExpressionRelationalOperatorAccess().getIsKeyword_4()); }
)

    |(
{ before(grammarAccess.getExpressionRelationalOperatorAccess().getAsKeyword_5()); }

	'as' 

{ after(grammarAccess.getExpressionRelationalOperatorAccess().getAsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegralType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegralTypeAccess().getSbyteKeyword_0()); }

	'sbyte' 

{ after(grammarAccess.getIntegralTypeAccess().getSbyteKeyword_0()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getByteKeyword_1()); }

	'byte' 

{ after(grammarAccess.getIntegralTypeAccess().getByteKeyword_1()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getShortKeyword_2()); }

	'short' 

{ after(grammarAccess.getIntegralTypeAccess().getShortKeyword_2()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getUshortKeyword_3()); }

	'ushort' 

{ after(grammarAccess.getIntegralTypeAccess().getUshortKeyword_3()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getIntKeyword_4()); }

	'int' 

{ after(grammarAccess.getIntegralTypeAccess().getIntKeyword_4()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getUintKeyword_5()); }

	'uint' 

{ after(grammarAccess.getIntegralTypeAccess().getUintKeyword_5()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getLongKeyword_6()); }

	'long' 

{ after(grammarAccess.getIntegralTypeAccess().getLongKeyword_6()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getUlongKeyword_7()); }

	'ulong' 

{ after(grammarAccess.getIntegralTypeAccess().getUlongKeyword_7()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getCharKeyword_8()); }

	'char' 

{ after(grammarAccess.getIntegralTypeAccess().getCharKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonArrayType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonArrayTypeAccess().getQualifiedIdentifierParserRuleCall_0()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getNonArrayTypeAccess().getQualifiedIdentifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNonArrayTypeAccess().getBuiltInTypeParserRuleCall_1()); }
	ruleBuiltInType
{ after(grammarAccess.getNonArrayTypeAccess().getBuiltInTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInTypeAccess().getIntegralTypeParserRuleCall_0()); }
	ruleIntegralType
{ after(grammarAccess.getBuiltInTypeAccess().getIntegralTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBuiltInClassTypeParserRuleCall_1()); }
	ruleBuiltInClassType
{ after(grammarAccess.getBuiltInTypeAccess().getBuiltInClassTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBoolKeyword_2()); }

	'bool' 

{ after(grammarAccess.getBuiltInTypeAccess().getBoolKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getDecimalKeyword_3()); }

	'decimal' 

{ after(grammarAccess.getBuiltInTypeAccess().getDecimalKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getFloatKeyword_4()); }

	'float' 

{ after(grammarAccess.getBuiltInTypeAccess().getFloatKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getDoubleKeyword_5()); }

	'double' 

{ after(grammarAccess.getBuiltInTypeAccess().getDoubleKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInClassType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInClassTypeAccess().getObjectKeyword_0()); }

	'object' 

{ after(grammarAccess.getBuiltInClassTypeAccess().getObjectKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInClassTypeAccess().getStringKeyword_1()); }

	'string' 

{ after(grammarAccess.getBuiltInClassTypeAccess().getStringKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getGroup_0()); }
(rule__EnumBody__Group_0__0)
{ after(grammarAccess.getEnumBodyAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getEnumBodyAccess().getGroup_1()); }
(rule__EnumBody__Group_1__0)
{ after(grammarAccess.getEnumBodyAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumModifierAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getEnumModifierAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getEnumModifierAccess().getPublicKeyword_1()); }

	'public' 

{ after(grammarAccess.getEnumModifierAccess().getPublicKeyword_1()); }
)

    |(
{ before(grammarAccess.getEnumModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getEnumModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getEnumModifierAccess().getInternalKeyword_3()); }

	'internal' 

{ after(grammarAccess.getEnumModifierAccess().getInternalKeyword_3()); }
)

    |(
{ before(grammarAccess.getEnumModifierAccess().getPrivateKeyword_4()); }

	'private' 

{ after(grammarAccess.getEnumModifierAccess().getPrivateKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedStatementAccess().getMaybeEmptyBlockParserRuleCall_0()); }
	ruleMaybeEmptyBlock
{ after(grammarAccess.getEmbeddedStatementAccess().getMaybeEmptyBlockParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEmbeddedStatementAccess().getGroup_1()); }
(rule__EmbeddedStatement__Group_1__0)
{ after(grammarAccess.getEmbeddedStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getEmbeddedStatementAccess().getSelectionStatementParserRuleCall_2()); }
	ruleSelectionStatement
{ after(grammarAccess.getEmbeddedStatementAccess().getSelectionStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEmbeddedStatementAccess().getIterationStatementParserRuleCall_3()); }
	ruleIterationStatement
{ after(grammarAccess.getEmbeddedStatementAccess().getIterationStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getEmbeddedStatementAccess().getJumpStatementParserRuleCall_4()); }
	ruleJumpStatement
{ after(grammarAccess.getEmbeddedStatementAccess().getJumpStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getEmbeddedStatementAccess().getTryStatementParserRuleCall_5()); }
	ruleTryStatement
{ after(grammarAccess.getEmbeddedStatementAccess().getTryStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getEmbeddedStatementAccess().getGroup_6()); }
(rule__EmbeddedStatement__Group_6__0)
{ after(grammarAccess.getEmbeddedStatementAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getEmbeddedStatementAccess().getGroup_7()); }
(rule__EmbeddedStatement__Group_7__0)
{ after(grammarAccess.getEmbeddedStatementAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getEmbeddedStatementAccess().getLockStatementParserRuleCall_8()); }
	ruleLockStatement
{ after(grammarAccess.getEmbeddedStatementAccess().getLockStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getEmbeddedStatementAccess().getUsingStatementParserRuleCall_9()); }
	ruleUsingStatement
{ after(grammarAccess.getEmbeddedStatementAccess().getUsingStatementParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceAquisition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAquisitionAccess().getLocalVariableDeclarationParserRuleCall_0()); }
	ruleLocalVariableDeclaration
{ after(grammarAccess.getResourceAquisitionAccess().getLocalVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getResourceAquisitionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getResourceAquisitionAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getGroup_0()); }
(rule__TryStatement__Group_0__0)
{ after(grammarAccess.getTryStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTryStatementAccess().getGroup_1()); }
(rule__TryStatement__Group_1__0)
{ after(grammarAccess.getTryStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauses__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClausesAccess().getGroup_0()); }
(rule__CatchClauses__Group_0__0)
{ after(grammarAccess.getCatchClausesAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCatchClausesAccess().getGroup_1()); }
(rule__CatchClauses__Group_1__0)
{ after(grammarAccess.getCatchClausesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getGroup_0()); }
(rule__SpecificCatchClause__Group_0__0)
{ after(grammarAccess.getSpecificCatchClauseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSpecificCatchClauseAccess().getGroup_1()); }
(rule__SpecificCatchClause__Group_1__0)
{ after(grammarAccess.getSpecificCatchClauseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getBreakStatementParserRuleCall_0()); }
	ruleBreakStatement
{ after(grammarAccess.getJumpStatementAccess().getBreakStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJumpStatementAccess().getContinueStatementParserRuleCall_1()); }
	ruleContinueStatement
{ after(grammarAccess.getJumpStatementAccess().getContinueStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getJumpStatementAccess().getGotoStatementParserRuleCall_2()); }
	ruleGotoStatement
{ after(grammarAccess.getJumpStatementAccess().getGotoStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getJumpStatementAccess().getReturnStatementParserRuleCall_3()); }
	ruleReturnStatement
{ after(grammarAccess.getJumpStatementAccess().getReturnStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getJumpStatementAccess().getThrowStatementParserRuleCall_4()); }
	ruleThrowStatement
{ after(grammarAccess.getJumpStatementAccess().getThrowStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_0()); }
	ruleWhileStatement
{ after(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIterationStatementAccess().getDoStatementParserRuleCall_1()); }
	ruleDoStatement
{ after(grammarAccess.getIterationStatementAccess().getDoStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_2()); }
	ruleForStatement
{ after(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getIterationStatementAccess().getForeachStatementParserRuleCall_3()); }
	ruleForeachStatement
{ after(grammarAccess.getIterationStatementAccess().getForeachStatementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInitializer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitializerAccess().getLocalVariableDeclarationParserRuleCall_0()); }
	ruleLocalVariableDeclaration
{ after(grammarAccess.getForInitializerAccess().getLocalVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getForInitializerAccess().getStatementExpressionListParserRuleCall_1()); }
	ruleStatementExpressionList
{ after(grammarAccess.getForInitializerAccess().getStatementExpressionListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_0()); }
(rule__StatementExpression__Group_0__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_1()); }
(rule__StatementExpression__Group_1__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_2()); }
(rule__StatementExpression__Group_2__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_3()); }
(rule__StatementExpression__Group_3__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_0_1_0()); }
(rule__StatementExpression__Group_0_1_0__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup_0_1_0()); }
)

    |(
{ before(grammarAccess.getStatementExpressionAccess().getINCREMENT_DECREMENTTerminalRuleCall_0_1_1()); }
	RULE_INCREMENT_DECREMENT
{ after(grammarAccess.getStatementExpressionAccess().getINCREMENT_DECREMENTTerminalRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getPrimaryExpressionAccess().getIdentifierParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
(rule__PrimaryExpression__Group_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
(rule__PrimaryExpression__Group_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
(rule__PrimaryExpression__Group_4__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getThisKeyword_5()); }

	'this' 

{ after(grammarAccess.getPrimaryExpressionAccess().getThisKeyword_5()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_6()); }
(rule__PrimaryExpression__Group_6__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_7()); }
(rule__PrimaryExpression__Group_7__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_8()); }
(rule__PrimaryExpression__Group_8__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1_0()); }
(rule__PrimaryExpression__Group_0_1_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1_1()); }
(rule__PrimaryExpression__Group_0_1_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1_2()); }
(rule__PrimaryExpression__Group_0_1_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3_1_0()); }
(rule__PrimaryExpression__Group_3_1_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3_1_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3_1_1()); }
(rule__PrimaryExpression__Group_3_1_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getGroup_0_0()); }
(rule__PrimaryExpression2__Group_0_0__0)
{ after(grammarAccess.getPrimaryExpression2Access().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpression2Access().getGroup_0_1()); }
(rule__PrimaryExpression2__Group_0_1__0)
{ after(grammarAccess.getPrimaryExpression2Access().getGroup_0_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpression2Access().getGroup_0_2()); }
(rule__PrimaryExpression2__Group_0_2__0)
{ after(grammarAccess.getPrimaryExpression2Access().getGroup_0_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpression2Access().getINCREMENT_DECREMENTTerminalRuleCall_0_3()); }
	RULE_INCREMENT_DECREMENT
{ after(grammarAccess.getPrimaryExpression2Access().getINCREMENT_DECREMENTTerminalRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getIfStatementParserRuleCall_0()); }
	ruleIfStatement
{ after(grammarAccess.getSelectionStatementAccess().getIfStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSelectionStatementAccess().getSwitchStatementParserRuleCall_1()); }
	ruleSwitchStatement
{ after(grammarAccess.getSelectionStatementAccess().getSwitchStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchLabelAccess().getGroup_0()); }
(rule__SwitchLabel__Group_0__0)
{ after(grammarAccess.getSwitchLabelAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSwitchLabelAccess().getGroup_1()); }
(rule__SwitchLabel__Group_1__0)
{ after(grammarAccess.getSwitchLabelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaybeEmptyBlock__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaybeEmptyBlockAccess().getGroup_0()); }
(rule__MaybeEmptyBlock__Group_0__0)
{ after(grammarAccess.getMaybeEmptyBlockAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMaybeEmptyBlockAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getMaybeEmptyBlockAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__InputSectionPart__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSectionPart__Group_0__0__Impl
	rule__InputSectionPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSectionPart__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSectionPartAccess().getInputElementParserRuleCall_0_0()); }
(	ruleInputElement)*
{ after(grammarAccess.getInputSectionPartAccess().getInputElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputSectionPart__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSectionPart__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSectionPart__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSectionPartAccess().getNEW_LINETerminalRuleCall_0_1()); }
	RULE_NEW_LINE
{ after(grammarAccess.getInputSectionPartAccess().getNEW_LINETerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPRegion__Group__0__Impl
	rule__PPRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPRegionAccess().getPPStartRegionParserRuleCall_0()); }
	rulePPStartRegion
{ after(grammarAccess.getPPRegionAccess().getPPStartRegionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPRegion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPRegionAccess().getPPEndRegionParserRuleCall_1()); }
	rulePPEndRegion
{ after(grammarAccess.getPPRegionAccess().getPPEndRegionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPEndRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEndRegion__Group__0__Impl
	rule__PPEndRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEndRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEndRegionAccess().getPPInitialSectionParserRuleCall_0()); }
	rulePPInitialSection
{ after(grammarAccess.getPPEndRegionAccess().getPPInitialSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEndRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEndRegion__Group__1__Impl
	rule__PPEndRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEndRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEndRegionAccess().getEndregionKeyword_1()); }

	'endregion' 

{ after(grammarAccess.getPPEndRegionAccess().getEndregionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEndRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEndRegion__Group__2__Impl
	rule__PPEndRegion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEndRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEndRegionAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)?
{ after(grammarAccess.getPPEndRegionAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEndRegion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEndRegion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEndRegion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEndRegionAccess().getPPMessageParserRuleCall_3()); }
	rulePPMessage
{ after(grammarAccess.getPPEndRegionAccess().getPPMessageParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPStartRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPStartRegion__Group__0__Impl
	rule__PPStartRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPStartRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPStartRegionAccess().getPPInitialSectionParserRuleCall_0()); }
	rulePPInitialSection
{ after(grammarAccess.getPPStartRegionAccess().getPPInitialSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPStartRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPStartRegion__Group__1__Impl
	rule__PPStartRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPStartRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPStartRegionAccess().getRegionKeyword_1()); }

	'region' 

{ after(grammarAccess.getPPStartRegionAccess().getRegionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPStartRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPStartRegion__Group__2__Impl
	rule__PPStartRegion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPStartRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPStartRegionAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)?
{ after(grammarAccess.getPPStartRegionAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPStartRegion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPStartRegion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPStartRegion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPStartRegionAccess().getPPMessageParserRuleCall_3()); }
	rulePPMessage
{ after(grammarAccess.getPPStartRegionAccess().getPPMessageParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPDiagnostic__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDiagnostic__Group__0__Impl
	rule__PPDiagnostic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDiagnostic__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDiagnosticAccess().getPPInitialSectionParserRuleCall_0()); }
	rulePPInitialSection
{ after(grammarAccess.getPPDiagnosticAccess().getPPInitialSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDiagnostic__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDiagnostic__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDiagnostic__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDiagnosticAccess().getAlternatives_1()); }
(rule__PPDiagnostic__Alternatives_1)
{ after(grammarAccess.getPPDiagnosticAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPDiagnostic__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDiagnostic__Group_1_0__0__Impl
	rule__PPDiagnostic__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDiagnostic__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDiagnosticAccess().getErrorKeyword_1_0_0()); }

	'error' 

{ after(grammarAccess.getPPDiagnosticAccess().getErrorKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDiagnostic__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDiagnostic__Group_1_0__1__Impl
	rule__PPDiagnostic__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDiagnostic__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDiagnosticAccess().getWSTerminalRuleCall_1_0_1()); }
(	RULE_WS)?
{ after(grammarAccess.getPPDiagnosticAccess().getWSTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDiagnostic__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDiagnostic__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDiagnostic__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDiagnosticAccess().getPPMessageParserRuleCall_1_0_2()); }
	rulePPMessage
{ after(grammarAccess.getPPDiagnosticAccess().getPPMessageParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PPDiagnostic__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDiagnostic__Group_1_1__0__Impl
	rule__PPDiagnostic__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDiagnostic__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDiagnosticAccess().getWarningKeyword_1_1_0()); }

	'warning' 

{ after(grammarAccess.getPPDiagnosticAccess().getWarningKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDiagnostic__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDiagnostic__Group_1_1__1__Impl
	rule__PPDiagnostic__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDiagnostic__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDiagnosticAccess().getWSTerminalRuleCall_1_1_1()); }
(	RULE_WS)?
{ after(grammarAccess.getPPDiagnosticAccess().getWSTerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDiagnostic__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDiagnostic__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDiagnostic__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDiagnosticAccess().getPPMessageParserRuleCall_1_1_2()); }
	rulePPMessage
{ after(grammarAccess.getPPDiagnosticAccess().getPPMessageParserRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PPMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPMessage__Group__0__Impl
	rule__PPMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPMessageAccess().getInputParserRuleCall_0()); }
(	ruleInput)*
{ after(grammarAccess.getPPMessageAccess().getInputParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPMessage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPMessageAccess().getNEW_LINETerminalRuleCall_1()); }
	RULE_NEW_LINE
{ after(grammarAccess.getPPMessageAccess().getNEW_LINETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPLine__Group__0__Impl
	rule__PPLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPLineAccess().getPPInitialSectionParserRuleCall_0()); }
	rulePPInitialSection
{ after(grammarAccess.getPPLineAccess().getPPInitialSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPLine__Group__1__Impl
	rule__PPLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPLineAccess().getLineKeyword_1()); }

	'line' 

{ after(grammarAccess.getPPLineAccess().getLineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPLine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPLine__Group__2__Impl
	rule__PPLine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPLine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPLineAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)?
{ after(grammarAccess.getPPLineAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPLine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPLine__Group__3__Impl
	rule__PPLine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPLine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPLineAccess().getLineIndicatorParserRuleCall_3()); }
	ruleLineIndicator
{ after(grammarAccess.getPPLineAccess().getLineIndicatorParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPLine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPLine__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPLine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPLineAccess().getPPNewLineParserRuleCall_4()); }
	rulePPNewLine
{ after(grammarAccess.getPPLineAccess().getPPNewLineParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LineIndicator__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LineIndicator__Group_0__0__Impl
	rule__LineIndicator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineIndicator__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLineIndicatorAccess().getINTTerminalRuleCall_0_0()); }
(	RULE_INT)
{ after(grammarAccess.getLineIndicatorAccess().getINTTerminalRuleCall_0_0()); }
)
(
{ before(grammarAccess.getLineIndicatorAccess().getINTTerminalRuleCall_0_0()); }
(	RULE_INT)*
{ after(grammarAccess.getLineIndicatorAccess().getINTTerminalRuleCall_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LineIndicator__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LineIndicator__Group_0__1__Impl
	rule__LineIndicator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LineIndicator__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineIndicatorAccess().getWSTerminalRuleCall_0_1()); }
	RULE_WS
{ after(grammarAccess.getLineIndicatorAccess().getWSTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LineIndicator__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LineIndicator__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineIndicator__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineIndicatorAccess().getFileNameParserRuleCall_0_2()); }
	ruleFileName
{ after(grammarAccess.getLineIndicatorAccess().getFileNameParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FileName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileName__Group__0__Impl
	rule__FileName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileNameAccess().getQuotationMarkKeyword_0()); }

	'"' 

{ after(grammarAccess.getFileNameAccess().getQuotationMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileName__Group__1__Impl
	rule__FileName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileNameAccess().getFileNameCharactersParserRuleCall_1()); }
	ruleFileNameCharacters
{ after(grammarAccess.getFileNameAccess().getFileNameCharactersParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileNameAccess().getQuotationMarkKeyword_2()); }

	'"' 

{ after(grammarAccess.getFileNameAccess().getQuotationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FileNameCharacters__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileNameCharacters__Group__0__Impl
	rule__FileNameCharacters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileNameCharacters__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileNameCharactersAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
	RULE_SINGLE_CHARACTER
{ after(grammarAccess.getFileNameCharactersAccess().getSINGLE_CHARACTERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileNameCharacters__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileNameCharacters__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileNameCharacters__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileNameCharactersAccess().getFileNameCharacters2ParserRuleCall_1()); }
	ruleFileNameCharacters2
{ after(grammarAccess.getFileNameCharactersAccess().getFileNameCharacters2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FileNameCharacters2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileNameCharacters2__Group__0__Impl
	rule__FileNameCharacters2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileNameCharacters2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileNameCharacters2Access().getSINGLE_CHARACTERTerminalRuleCall_0()); }
	RULE_SINGLE_CHARACTER
{ after(grammarAccess.getFileNameCharacters2Access().getSINGLE_CHARACTERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileNameCharacters2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileNameCharacters2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileNameCharacters2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileNameCharacters2Access().getFileNameCharacters2ParserRuleCall_1()); }
	ruleFileNameCharacters2
{ after(grammarAccess.getFileNameCharacters2Access().getFileNameCharacters2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPInitialSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPInitialSection__Group__0__Impl
	rule__PPInitialSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPInitialSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPInitialSectionAccess().getWSTerminalRuleCall_0()); }
(	RULE_WS)?
{ after(grammarAccess.getPPInitialSectionAccess().getWSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPInitialSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPInitialSection__Group__1__Impl
	rule__PPInitialSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPInitialSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPInitialSectionAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getPPInitialSectionAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPInitialSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPInitialSection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPInitialSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPInitialSectionAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)?
{ after(grammarAccess.getPPInitialSectionAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PPConditional__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPConditional__Group__0__Impl
	rule__PPConditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPConditional__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPConditionalAccess().getPPIfSectionParserRuleCall_0()); }
	rulePPIfSection
{ after(grammarAccess.getPPConditionalAccess().getPPIfSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPConditional__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPConditional__Group__1__Impl
	rule__PPConditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPConditional__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPConditionalAccess().getPPElifSectionsParserRuleCall_1()); }
(	rulePPElifSections)?
{ after(grammarAccess.getPPConditionalAccess().getPPElifSectionsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPConditional__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPConditional__Group__2__Impl
	rule__PPConditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPConditional__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPConditionalAccess().getPPElseSectionParserRuleCall_2()); }
(	rulePPElseSection)?
{ after(grammarAccess.getPPConditionalAccess().getPPElseSectionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPConditional__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPConditional__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPConditional__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPConditionalAccess().getPPEndifParserRuleCall_3()); }
	rulePPEndif
{ after(grammarAccess.getPPConditionalAccess().getPPEndifParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPEndif__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEndif__Group__0__Impl
	rule__PPEndif__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEndif__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEndifAccess().getPPInitialSectionParserRuleCall_0()); }
	rulePPInitialSection
{ after(grammarAccess.getPPEndifAccess().getPPInitialSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEndif__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEndif__Group__1__Impl
	rule__PPEndif__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEndif__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEndifAccess().getEndifKeyword_1()); }

	'endif' 

{ after(grammarAccess.getPPEndifAccess().getEndifKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEndif__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEndif__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEndif__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEndifAccess().getPPNewLineParserRuleCall_2()); }
	rulePPNewLine
{ after(grammarAccess.getPPEndifAccess().getPPNewLineParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PPElseSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElseSection__Group__0__Impl
	rule__PPElseSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElseSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElseSectionAccess().getPPInitialSectionParserRuleCall_0()); }
	rulePPInitialSection
{ after(grammarAccess.getPPElseSectionAccess().getPPInitialSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElseSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElseSection__Group__1__Impl
	rule__PPElseSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElseSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElseSectionAccess().getElseKeyword_1()); }

	'else' 

{ after(grammarAccess.getPPElseSectionAccess().getElseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElseSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElseSection__Group__2__Impl
	rule__PPElseSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElseSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElseSectionAccess().getPPNewLineParserRuleCall_2()); }
	rulePPNewLine
{ after(grammarAccess.getPPElseSectionAccess().getPPNewLineParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElseSection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElseSection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElseSection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElseSectionAccess().getWSTerminalRuleCall_3()); }
(	RULE_WS)*
{ after(grammarAccess.getPPElseSectionAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPElifSections__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSections__Group__0__Impl
	rule__PPElifSections__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSections__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionsAccess().getPPElifSectionParserRuleCall_0()); }
	rulePPElifSection
{ after(grammarAccess.getPPElifSectionsAccess().getPPElifSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSections__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSections__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSections__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionsAccess().getPPElifSections2ParserRuleCall_1()); }
	rulePPElifSections2
{ after(grammarAccess.getPPElifSectionsAccess().getPPElifSections2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPElifSections2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSections2__Group__0__Impl
	rule__PPElifSections2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSections2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSections2Access().getPPElifSectionParserRuleCall_0()); }
	rulePPElifSection
{ after(grammarAccess.getPPElifSections2Access().getPPElifSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSections2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSections2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSections2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSections2Access().getPPElifSections2ParserRuleCall_1()); }
	rulePPElifSections2
{ after(grammarAccess.getPPElifSections2Access().getPPElifSections2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPElifSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__0__Impl
	rule__PPElifSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getPPInitialSectionParserRuleCall_0()); }
	rulePPInitialSection
{ after(grammarAccess.getPPElifSectionAccess().getPPInitialSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__1__Impl
	rule__PPElifSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getElifKeyword_1()); }
(
	'elif' 
)
{ after(grammarAccess.getPPElifSectionAccess().getElifKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__2__Impl
	rule__PPElifSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getPPElifSectionAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__3__Impl
	rule__PPElifSection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getPPExpressionParserRuleCall_3()); }
	rulePPExpression
{ after(grammarAccess.getPPElifSectionAccess().getPPExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__4__Impl
	rule__PPElifSection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getPPNewLineParserRuleCall_4()); }
	rulePPNewLine
{ after(grammarAccess.getPPElifSectionAccess().getPPNewLineParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPElifSection__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPElifSection__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPElifSection__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPElifSectionAccess().getWSTerminalRuleCall_5()); }
(	RULE_WS)*
{ after(grammarAccess.getPPElifSectionAccess().getWSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PPIfSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__0__Impl
	rule__PPIfSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getPPInitialSectionParserRuleCall_0()); }
	rulePPInitialSection
{ after(grammarAccess.getPPIfSectionAccess().getPPInitialSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPIfSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__1__Impl
	rule__PPIfSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getPPIfSectionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPIfSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__2__Impl
	rule__PPIfSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getPPIfSectionAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPIfSection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__3__Impl
	rule__PPIfSection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getPPExpressionParserRuleCall_3()); }
	rulePPExpression
{ after(grammarAccess.getPPIfSectionAccess().getPPExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPIfSection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__4__Impl
	rule__PPIfSection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getPPNewLineParserRuleCall_4()); }
	rulePPNewLine
{ after(grammarAccess.getPPIfSectionAccess().getPPNewLineParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPIfSection__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPIfSection__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPIfSection__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPIfSectionAccess().getWSTerminalRuleCall_5()); }
(	RULE_WS)*
{ after(grammarAccess.getPPIfSectionAccess().getWSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PPOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression__Group__0__Impl
	rule__PPOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpressionAccess().getPPAndExpressionParserRuleCall_0()); }
	rulePPAndExpression
{ after(grammarAccess.getPPOrExpressionAccess().getPPAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression__Group__1__Impl
	rule__PPOrExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpressionAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPOrExpressionAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpressionAccess().getPPOrExpression2ParserRuleCall_2()); }
(	rulePPOrExpression2)
{ after(grammarAccess.getPPOrExpressionAccess().getPPOrExpression2ParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PPOrExpression2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression2__Group__0__Impl
	rule__PPOrExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpression2Access().getVerticalLineVerticalLineKeyword_0()); }
(
	'||' 
)
{ after(grammarAccess.getPPOrExpression2Access().getVerticalLineVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression2__Group__1__Impl
	rule__PPOrExpression2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpression2Access().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPOrExpression2Access().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression2__Group__2__Impl
	rule__PPOrExpression2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpression2Access().getPPAndExpressionParserRuleCall_2()); }
	rulePPAndExpression
{ after(grammarAccess.getPPOrExpression2Access().getPPAndExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPOrExpression2__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPOrExpression2__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPOrExpression2__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOrExpression2Access().getPPOrExpression2ParserRuleCall_3()); }
(	rulePPOrExpression2)
{ after(grammarAccess.getPPOrExpression2Access().getPPOrExpression2ParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression__Group__0__Impl
	rule__PPAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpressionAccess().getPPEqualityExpressionParserRuleCall_0()); }
	rulePPEqualityExpression
{ after(grammarAccess.getPPAndExpressionAccess().getPPEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression__Group__1__Impl
	rule__PPAndExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpressionAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPAndExpressionAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpressionAccess().getPPAndExpression2ParserRuleCall_2()); }
(	rulePPAndExpression2)
{ after(grammarAccess.getPPAndExpressionAccess().getPPAndExpression2ParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PPAndExpression2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression2__Group__0__Impl
	rule__PPAndExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpression2Access().getAmpersandAmpersandKeyword_0()); }
(
	'&&' 
)
{ after(grammarAccess.getPPAndExpression2Access().getAmpersandAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression2__Group__1__Impl
	rule__PPAndExpression2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpression2Access().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPAndExpression2Access().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression2__Group__2__Impl
	rule__PPAndExpression2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpression2Access().getPPEqualityExpressionParserRuleCall_2()); }
	rulePPEqualityExpression
{ after(grammarAccess.getPPAndExpression2Access().getPPEqualityExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPAndExpression2__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPAndExpression2__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPAndExpression2__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPAndExpression2Access().getPPAndExpression2ParserRuleCall_3()); }
(	rulePPAndExpression2)
{ after(grammarAccess.getPPAndExpression2Access().getPPAndExpression2ParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPEqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression__Group__0__Impl
	rule__PPEqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpressionAccess().getPPUnaryExpressionParserRuleCall_0()); }
	rulePPUnaryExpression
{ after(grammarAccess.getPPEqualityExpressionAccess().getPPUnaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpressionAccess().getPPEqualityExpression2ParserRuleCall_1()); }
(	rulePPEqualityExpression2)*
{ after(grammarAccess.getPPEqualityExpressionAccess().getPPEqualityExpression2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPEqualityExpression2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression2__Group__0__Impl
	rule__PPEqualityExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getAlternatives_0()); }
(rule__PPEqualityExpression2__Alternatives_0)
{ after(grammarAccess.getPPEqualityExpression2Access().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEqualityExpression2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression2__Group__1__Impl
	rule__PPEqualityExpression2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPEqualityExpression2Access().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEqualityExpression2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression2__Group__2__Impl
	rule__PPEqualityExpression2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getPPUnaryExpressionParserRuleCall_2()); }
	rulePPUnaryExpression
{ after(grammarAccess.getPPEqualityExpression2Access().getPPUnaryExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPEqualityExpression2__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPEqualityExpression2__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPEqualityExpression2__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPEqualityExpression2Access().getPPEqualityExpression2ParserRuleCall_3()); }
	rulePPEqualityExpression2
{ after(grammarAccess.getPPEqualityExpression2Access().getPPEqualityExpression2ParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PPUnaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPUnaryExpression__Group_1__0__Impl
	rule__PPUnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPUnaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPUnaryExpressionAccess().getExclamationMarkKeyword_1_0()); }

	'!' 

{ after(grammarAccess.getPPUnaryExpressionAccess().getExclamationMarkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPUnaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPUnaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPUnaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPUnaryExpressionAccess().getPPUnaryExpressionParserRuleCall_1_1()); }
	rulePPUnaryExpression
{ after(grammarAccess.getPPUnaryExpressionAccess().getPPUnaryExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PPPrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__0__Impl
	rule__PPPrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getPPPrimaryExpressionAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPPrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__1__Impl
	rule__PPPrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getWSTerminalRuleCall_3_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPPPrimaryExpressionAccess().getWSTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPPrimaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__2__Impl
	rule__PPPrimaryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getPPExpressionParserRuleCall_3_2()); }
	rulePPExpression
{ after(grammarAccess.getPPPrimaryExpressionAccess().getPPExpressionParserRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPPrimaryExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__3__Impl
	rule__PPPrimaryExpression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getWSTerminalRuleCall_3_3()); }
(	RULE_WS)*
{ after(grammarAccess.getPPPrimaryExpressionAccess().getWSTerminalRuleCall_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPPrimaryExpression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPPrimaryExpression__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPPrimaryExpression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPPrimaryExpressionAccess().getRightParenthesisKeyword_3_4()); }

	')' 

{ after(grammarAccess.getPPPrimaryExpressionAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PPDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__0__Impl
	rule__PPDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getPPInitialSectionParserRuleCall_0()); }
	rulePPInitialSection
{ after(grammarAccess.getPPDeclarationAccess().getPPInitialSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__1__Impl
	rule__PPDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getAlternatives_1()); }
(rule__PPDeclaration__Alternatives_1)
{ after(grammarAccess.getPPDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__2__Impl
	rule__PPDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getWSTerminalRuleCall_2()); }
	RULE_WS
{ after(grammarAccess.getPPDeclarationAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__3__Impl
	rule__PPDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getConditionalSymbolParserRuleCall_3()); }
	ruleConditionalSymbol
{ after(grammarAccess.getPPDeclarationAccess().getConditionalSymbolParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPDeclarationAccess().getPPNewLineParserRuleCall_4()); }
	rulePPNewLine
{ after(grammarAccess.getPPDeclarationAccess().getPPNewLineParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PPNewLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPNewLine__Group__0__Impl
	rule__PPNewLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PPNewLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPNewLineAccess().getWSTerminalRuleCall_0()); }
(	RULE_WS)*
{ after(grammarAccess.getPPNewLineAccess().getWSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPNewLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPNewLine__Group__1__Impl
	rule__PPNewLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PPNewLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPNewLineAccess().getSL_COMMENTTerminalRuleCall_1()); }
(	RULE_SL_COMMENT)?
{ after(grammarAccess.getPPNewLineAccess().getSL_COMMENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PPNewLine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PPNewLine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PPNewLine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPNewLineAccess().getNEW_LINETerminalRuleCall_2()); }
	RULE_NEW_LINE
{ after(grammarAccess.getPPNewLineAccess().getNEW_LINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PredefinedType__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredefinedType__Group_13__0__Impl
	rule__PredefinedType__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredefinedType__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredefinedTypeAccess().getUlongKeyword_13_0()); }

	'ulong' 

{ after(grammarAccess.getPredefinedTypeAccess().getUlongKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredefinedType__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredefinedType__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredefinedType__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredefinedTypeAccess().getUshortKeyword_13_1()); }

	'ushort' 

{ after(grammarAccess.getPredefinedTypeAccess().getUshortKeyword_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_0__0__Impl
	rule__IntegerLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getAlternatives_0_0()); }
(rule__IntegerLiteral__Alternatives_0_0)
{ after(grammarAccess.getIntegerLiteralAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_0__1__Impl
	rule__IntegerLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIntegerLiteralAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
(	RULE_HEX_DIGIT)
{ after(grammarAccess.getIntegerLiteralAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
)
(
{ before(grammarAccess.getIntegerLiteralAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
(	RULE_HEX_DIGIT)*
{ after(grammarAccess.getIntegerLiteralAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_0_2()); }
	RULE_INTEGER_TYPE_SUFFIX
{ after(grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_1__0__Impl
	rule__IntegerLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_1_1()); }
(	RULE_INTEGER_TYPE_SUFFIX)?
{ after(grammarAccess.getIntegerLiteralAccess().getINTEGER_TYPE_SUFFIXTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__0__Impl
	rule__RealLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_0()); }
	RULE_INT
{ after(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__1__Impl
	rule__RealLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getRealLiteralAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__2__Impl
	rule__RealLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_2()); }
	RULE_INT
{ after(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__3__Impl
	rule__RealLiteral__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_0_3()); }
(	ruleExponentPart)?
{ after(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_0_4()); }
(	RULE_REAL_TYPE_SUFFIX)?
{ after(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RealLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_1__0__Impl
	rule__RealLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_1__1__Impl
	rule__RealLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_1_1()); }
	ruleExponentPart
{ after(grammarAccess.getRealLiteralAccess().getExponentPartParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_1_2()); }
(	RULE_REAL_TYPE_SUFFIX)?
{ after(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RealLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_2__0__Impl
	rule__RealLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_2_0()); }
	RULE_INT
{ after(grammarAccess.getRealLiteralAccess().getINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_2_1()); }
	RULE_REAL_TYPE_SUFFIX
{ after(grammarAccess.getRealLiteralAccess().getREAL_TYPE_SUFFIXTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExponentPart__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_0__0__Impl
	rule__ExponentPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getEKeyword_0_0()); }

	'e' 

{ after(grammarAccess.getExponentPartAccess().getEKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentPart__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_0__1__Impl
	rule__ExponentPart__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getOPERATOR_OR_SIGNTerminalRuleCall_0_1()); }
(	RULE_OPERATOR_OR_SIGN)?
{ after(grammarAccess.getExponentPartAccess().getOPERATOR_OR_SIGNTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentPart__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_0_2()); }
	RULE_INT
{ after(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExponentPart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_1__0__Impl
	rule__ExponentPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getEKeyword_1_0()); }

	'E' 

{ after(grammarAccess.getExponentPartAccess().getEKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentPart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_1__1__Impl
	rule__ExponentPart__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getOPERATOR_OR_SIGNTerminalRuleCall_1_1()); }
(	RULE_OPERATOR_OR_SIGN)?
{ after(grammarAccess.getExponentPartAccess().getOPERATOR_OR_SIGNTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentPart__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentPart__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
{ after(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CharacterLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharacterLiteral__Group__0__Impl
	rule__CharacterLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_0()); }

	'\'' 

{ after(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CharacterLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharacterLiteral__Group__1__Impl
	rule__CharacterLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getCharacterParserRuleCall_1()); }
	ruleCharacter
{ after(grammarAccess.getCharacterLiteralAccess().getCharacterParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CharacterLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharacterLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_2()); }

	'\'' 

{ after(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Character__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Character__Group_1__0__Impl
	rule__Character__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Character__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterAccess().getReverseSolidusKeyword_1_0()); }

	'\\' 

{ after(grammarAccess.getCharacterAccess().getReverseSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Character__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Character__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Character__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterAccess().getEscapeSequenceParserRuleCall_1_1()); }
	ruleEscapeSequence
{ after(grammarAccess.getCharacterAccess().getEscapeSequenceParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnicodeCharacterEscapeSequence__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__0__Impl
	rule__UnicodeCharacterEscapeSequence__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_0_0()); }

	'u' 

{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__1__Impl
	rule__UnicodeCharacterEscapeSequence__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__2__Impl
	rule__UnicodeCharacterEscapeSequence__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_2()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__3__Impl
	rule__UnicodeCharacterEscapeSequence__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_3()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_4()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnicodeCharacterEscapeSequence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__0__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_1_0()); }

	'U' 

{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getUKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__1__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_1()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__2__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_2()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__3__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_3()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__4__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_4()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__5__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_5()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__6__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_6()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__7__Impl
	rule__UnicodeCharacterEscapeSequence__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_7()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnicodeCharacterEscapeSequence__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnicodeCharacterEscapeSequence__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnicodeCharacterEscapeSequence__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_8()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getUnicodeCharacterEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__HexadecimalEscapeSequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group__0__Impl
	rule__HexadecimalEscapeSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getXKeyword_0()); }

	'x' 

{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getXKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HexadecimalEscapeSequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group__1__Impl
	rule__HexadecimalEscapeSequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HexadecimalEscapeSequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup_2()); }
(rule__HexadecimalEscapeSequence__Group_2__0)?
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HexadecimalEscapeSequence__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group_2__0__Impl
	rule__HexadecimalEscapeSequence__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_0()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HexadecimalEscapeSequence__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup_2_1()); }
(rule__HexadecimalEscapeSequence__Group_2_1__0)?
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HexadecimalEscapeSequence__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group_2_1__0__Impl
	rule__HexadecimalEscapeSequence__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_0()); }
	RULE_HEX_DIGIT
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HexadecimalEscapeSequence__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HexadecimalEscapeSequence__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HexadecimalEscapeSequence__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_1()); }
(	RULE_HEX_DIGIT)?
{ after(grammarAccess.getHexadecimalEscapeSequenceAccess().getHEX_DIGITTerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_0__0__Impl
	rule__StringLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_0()); }

	'"' 

{ after(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_0__1__Impl
	rule__StringLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getRegularStringCharacterParserRuleCall_0_1()); }
(	ruleRegularStringCharacter)*
{ after(grammarAccess.getStringLiteralAccess().getRegularStringCharacterParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_2()); }

	'"' 

{ after(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StringLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_1__0__Impl
	rule__StringLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getCommercialAtKeyword_1_0()); }

	'@' 

{ after(grammarAccess.getStringLiteralAccess().getCommercialAtKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_1__1__Impl
	rule__StringLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getVerbatimStringCharacterParserRuleCall_1_1()); }
(	ruleVerbatimStringCharacter)*
{ after(grammarAccess.getStringLiteralAccess().getVerbatimStringCharacterParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_1_2()); }

	'"' 

{ after(grammarAccess.getStringLiteralAccess().getQuotationMarkKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RegularStringCharacter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularStringCharacter__Group_1__0__Impl
	rule__RegularStringCharacter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularStringCharacter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularStringCharacterAccess().getReverseSolidusKeyword_1_0()); }

	'\\' 

{ after(grammarAccess.getRegularStringCharacterAccess().getReverseSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularStringCharacter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularStringCharacter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularStringCharacter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularStringCharacterAccess().getESCAPE_SEQUENCETerminalRuleCall_1_1()); }
	RULE_ESCAPE_SEQUENCE
{ after(grammarAccess.getRegularStringCharacterAccess().getESCAPE_SEQUENCETerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Identifier__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group_1__0__Impl
	rule__Identifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getCommercialAtKeyword_1_0()); }

	'@' 

{ after(grammarAccess.getIdentifierAccess().getCommercialAtKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getIDENTIFIER_START_CHARACTERTerminalRuleCall_1_1()); }
	RULE_IDENTIFIER_START_CHARACTER
{ after(grammarAccess.getIdentifierAccess().getIDENTIFIER_START_CHARACTERTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IdentifierOrKeyword__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrKeyword__Group__0__Impl
	rule__IdentifierOrKeyword__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrKeyword__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrKeywordAccess().getIDENTIFIER_START_CHARACTERTerminalRuleCall_0()); }
	RULE_IDENTIFIER_START_CHARACTER
{ after(grammarAccess.getIdentifierOrKeywordAccess().getIDENTIFIER_START_CHARACTERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierOrKeyword__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrKeyword__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrKeyword__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrKeywordAccess().getIdentifierPartCharacterParserRuleCall_1()); }
(	ruleIdentifierPartCharacter)*
{ after(grammarAccess.getIdentifierOrKeywordAccess().getIdentifierPartCharacterParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__NamespaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__0__Impl
	rule__NamespaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__1__Impl
	rule__NamespaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getQualifiedIdentifierParserRuleCall_1()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getNamespaceDeclarationAccess().getQualifiedIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__2__Impl
	rule__NamespaceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNamespaceBodyParserRuleCall_2()); }
	ruleNamespaceBody
{ after(grammarAccess.getNamespaceDeclarationAccess().getNamespaceBodyParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_3()); }
(
	';' 
)?
{ after(grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NamespaceBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceBody__Group__0__Impl
	rule__NamespaceBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getNamespaceBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceBody__Group__1__Impl
	rule__NamespaceBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceBodyAccess().getUsingDirectiveParserRuleCall_1()); }
(	ruleUsingDirective)*
{ after(grammarAccess.getNamespaceBodyAccess().getUsingDirectiveParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceBody__Group__2__Impl
	rule__NamespaceBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceBodyAccess().getNamespaceMemberDeclarationParserRuleCall_2()); }
(	ruleNamespaceMemberDeclaration)*
{ after(grammarAccess.getNamespaceBodyAccess().getNamespaceMemberDeclarationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceBodyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getNamespaceBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group_1__0__Impl
	rule__TypeDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getModifierParserRuleCall_1_0()); }
(	ruleModifier)*
{ after(grammarAccess.getTypeDeclarationAccess().getModifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getAlternatives_1_1()); }
(rule__TypeDeclaration__Alternatives_1_1)
{ after(grammarAccess.getTypeDeclarationAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DelegateDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelegateDeclaration__Group__0__Impl
	rule__DelegateDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegateDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateDeclarationAccess().getDelegateKeyword_0()); }

	'delegate' 

{ after(grammarAccess.getDelegateDeclarationAccess().getDelegateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelegateDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelegateDeclaration__Group__1__Impl
	rule__DelegateDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegateDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateDeclarationAccess().getTypeOrVoidParserRuleCall_1()); }
	ruleTypeOrVoid
{ after(grammarAccess.getDelegateDeclarationAccess().getTypeOrVoidParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelegateDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelegateDeclaration__Group__2__Impl
	rule__DelegateDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegateDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateDeclarationAccess().getIdentifierParserRuleCall_2()); }
	ruleIdentifier
{ after(grammarAccess.getDelegateDeclarationAccess().getIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelegateDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelegateDeclaration__Group__3__Impl
	rule__DelegateDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegateDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateDeclarationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDelegateDeclarationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelegateDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelegateDeclaration__Group__4__Impl
	rule__DelegateDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegateDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateDeclarationAccess().getFormalParameterListParserRuleCall_4()); }
(	ruleFormalParameterList)?
{ after(grammarAccess.getDelegateDeclarationAccess().getFormalParameterListParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelegateDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelegateDeclaration__Group__5__Impl
	rule__DelegateDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegateDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateDeclarationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDelegateDeclarationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelegateDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelegateDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegateDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateDeclarationAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getDelegateDeclarationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EnumDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__0__Impl
	rule__EnumDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__1__Impl
	rule__EnumDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getEnumDeclarationAccess().getIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__2__Impl
	rule__EnumDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getGroup_2()); }
(rule__EnumDeclaration__Group_2__0)?
{ after(grammarAccess.getEnumDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__3__Impl
	rule__EnumDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getEnumBodyParserRuleCall_3()); }
	ruleEnumBody
{ after(grammarAccess.getEnumDeclarationAccess().getEnumBodyParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getSemicolonKeyword_4()); }
(
	';' 
)?
{ after(grammarAccess.getEnumDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group_2__0__Impl
	rule__EnumDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getEnumDeclarationAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getIntegralTypeParserRuleCall_2_1()); }
	ruleIntegralType
{ after(grammarAccess.getEnumDeclarationAccess().getIntegralTypeParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__0__Impl
	rule__InterfaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getStructKeyword_0()); }

	'struct' 

{ after(grammarAccess.getInterfaceDeclarationAccess().getStructKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__1__Impl
	rule__InterfaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getInterfaceDeclarationAccess().getIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__2__Impl
	rule__InterfaceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getGroup_2()); }
(rule__InterfaceDeclaration__Group_2__0)?
{ after(grammarAccess.getInterfaceDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__3__Impl
	rule__InterfaceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceBodyParserRuleCall_3()); }
	ruleInterfaceBody
{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceBodyParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getSemicolonKeyword_4()); }
(
	';' 
)?
{ after(grammarAccess.getInterfaceDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group_2__0__Impl
	rule__InterfaceDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getInterfaceDeclarationAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getQualifiedIdentifierListParserRuleCall_2_1()); }
	ruleQualifiedIdentifierList
{ after(grammarAccess.getInterfaceDeclarationAccess().getQualifiedIdentifierListParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBody__Group__0__Impl
	rule__InterfaceBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getInterfaceBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBody__Group__1__Impl
	rule__InterfaceBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBodyAccess().getInterfaceMemberDeclarationParserRuleCall_1()); }
(	ruleInterfaceMemberDeclaration)*
{ after(grammarAccess.getInterfaceBodyAccess().getInterfaceMemberDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBodyAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getInterfaceBodyAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceMemberDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMemberDeclaration__Group__0__Impl
	rule__InterfaceMemberDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMemberDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getNewKeyword_0()); }
(
	'new' 
)?
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceMemberDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMemberDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMemberDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getAlternatives_1()); }
(rule__InterfaceMemberDeclaration__Alternatives_1)
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceMemberDeclaration__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMemberDeclaration__Group_1_2__0__Impl
	rule__InterfaceMemberDeclaration__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMemberDeclaration__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getTypeParserRuleCall_1_2_0()); }
	ruleType
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceMemberDeclaration__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMemberDeclaration__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMemberDeclaration__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getAlternatives_1_2_1()); }
(rule__InterfaceMemberDeclaration__Alternatives_1_2_1)
{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getAlternatives_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceIndexerDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceIndexerDeclaration__Group__0__Impl
	rule__InterfaceIndexerDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceIndexerDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceIndexerDeclarationAccess().getThisKeyword_0()); }

	'this' 

{ after(grammarAccess.getInterfaceIndexerDeclarationAccess().getThisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceIndexerDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceIndexerDeclaration__Group__1__Impl
	rule__InterfaceIndexerDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceIndexerDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceIndexerDeclarationAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getInterfaceIndexerDeclarationAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceIndexerDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceIndexerDeclaration__Group__2__Impl
	rule__InterfaceIndexerDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceIndexerDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceIndexerDeclarationAccess().getFormalParameterListParserRuleCall_2()); }
(	ruleFormalParameterList)
{ after(grammarAccess.getInterfaceIndexerDeclarationAccess().getFormalParameterListParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceIndexerDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceIndexerDeclaration__Group__3__Impl
	rule__InterfaceIndexerDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceIndexerDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceIndexerDeclarationAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getInterfaceIndexerDeclarationAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceIndexerDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceIndexerDeclaration__Group__4__Impl
	rule__InterfaceIndexerDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceIndexerDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceIndexerDeclarationAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getInterfaceIndexerDeclarationAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceIndexerDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceIndexerDeclaration__Group__5__Impl
	rule__InterfaceIndexerDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceIndexerDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceIndexerDeclarationAccess().getInterfaceAccessorsParserRuleCall_5()); }
	ruleInterfaceAccessors
{ after(grammarAccess.getInterfaceIndexerDeclarationAccess().getInterfaceAccessorsParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceIndexerDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceIndexerDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceIndexerDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceIndexerDeclarationAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getInterfaceIndexerDeclarationAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__InterfaceEventDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceEventDeclaration__Group__0__Impl
	rule__InterfaceEventDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceEventDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceEventDeclarationAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getInterfaceEventDeclarationAccess().getEventKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceEventDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceEventDeclaration__Group__1__Impl
	rule__InterfaceEventDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceEventDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceEventDeclarationAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getInterfaceEventDeclarationAccess().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceEventDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceEventDeclaration__Group__2__Impl
	rule__InterfaceEventDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceEventDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceEventDeclarationAccess().getIdentifierParserRuleCall_2()); }
	ruleIdentifier
{ after(grammarAccess.getInterfaceEventDeclarationAccess().getIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceEventDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceEventDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceEventDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceEventDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getInterfaceEventDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InterfacePropertyDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfacePropertyDeclaration__Group__0__Impl
	rule__InterfacePropertyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacePropertyDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfacePropertyDeclarationAccess().getIdentifierParserRuleCall_0()); }
	ruleIdentifier
{ after(grammarAccess.getInterfacePropertyDeclarationAccess().getIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfacePropertyDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfacePropertyDeclaration__Group__1__Impl
	rule__InterfacePropertyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacePropertyDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfacePropertyDeclarationAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getInterfacePropertyDeclarationAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfacePropertyDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfacePropertyDeclaration__Group__2__Impl
	rule__InterfacePropertyDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacePropertyDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfacePropertyDeclarationAccess().getInterfaceAccessorsParserRuleCall_2()); }
	ruleInterfaceAccessors
{ after(grammarAccess.getInterfacePropertyDeclarationAccess().getInterfaceAccessorsParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfacePropertyDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfacePropertyDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacePropertyDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfacePropertyDeclarationAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getInterfacePropertyDeclarationAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InterfaceAccessors__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group__0__Impl
	rule__InterfaceAccessors__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getAttributesParserRuleCall_0()); }
	ruleAttributes
{ after(grammarAccess.getInterfaceAccessorsAccess().getAttributesParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceAccessors__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getAlternatives_1()); }
(rule__InterfaceAccessors__Alternatives_1)
{ after(grammarAccess.getInterfaceAccessorsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceAccessors__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_0__0__Impl
	rule__InterfaceAccessors__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getGetKeyword_1_0_0()); }

	'get' 

{ after(grammarAccess.getInterfaceAccessorsAccess().getGetKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceAccessors__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_0__1__Impl
	rule__InterfaceAccessors__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getSemicolonKeyword_1_0_1()); }

	';' 

{ after(grammarAccess.getInterfaceAccessorsAccess().getSemicolonKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceAccessors__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getGroup_1_0_2()); }
(rule__InterfaceAccessors__Group_1_0_2__0)?
{ after(grammarAccess.getInterfaceAccessorsAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceAccessors__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_0_2__0__Impl
	rule__InterfaceAccessors__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getAttributesParserRuleCall_1_0_2_0()); }
	ruleAttributes
{ after(grammarAccess.getInterfaceAccessorsAccess().getAttributesParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceAccessors__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_0_2__1__Impl
	rule__InterfaceAccessors__Group_1_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getSetKeyword_1_0_2_1()); }

	'set' 

{ after(grammarAccess.getInterfaceAccessorsAccess().getSetKeyword_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceAccessors__Group_1_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getSemicolonKeyword_1_0_2_2()); }

	';' 

{ after(grammarAccess.getInterfaceAccessorsAccess().getSemicolonKeyword_1_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceAccessors__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_1__0__Impl
	rule__InterfaceAccessors__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getSetKeyword_1_1_0()); }

	'set' 

{ after(grammarAccess.getInterfaceAccessorsAccess().getSetKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceAccessors__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_1__1__Impl
	rule__InterfaceAccessors__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getSemicolonKeyword_1_1_1()); }

	';' 

{ after(grammarAccess.getInterfaceAccessorsAccess().getSemicolonKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceAccessors__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getGroup_1_1_2()); }
(rule__InterfaceAccessors__Group_1_1_2__0)?
{ after(grammarAccess.getInterfaceAccessorsAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceAccessors__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_1_2__0__Impl
	rule__InterfaceAccessors__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getAttributesParserRuleCall_1_1_2_0()); }
	ruleAttributes
{ after(grammarAccess.getInterfaceAccessorsAccess().getAttributesParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceAccessors__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_1_2__1__Impl
	rule__InterfaceAccessors__Group_1_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getGetKeyword_1_1_2_1()); }

	'get' 

{ after(grammarAccess.getInterfaceAccessorsAccess().getGetKeyword_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceAccessors__Group_1_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceAccessors__Group_1_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceAccessors__Group_1_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccessorsAccess().getSemicolonKeyword_1_1_2_2()); }

	';' 

{ after(grammarAccess.getInterfaceAccessorsAccess().getSemicolonKeyword_1_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceMethodDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMethodDeclaration__Group__0__Impl
	rule__InterfaceMethodDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMethodDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMethodDeclarationAccess().getTypeOrVoidParserRuleCall_0()); }
	ruleTypeOrVoid
{ after(grammarAccess.getInterfaceMethodDeclarationAccess().getTypeOrVoidParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceMethodDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMethodDeclaration__Group__1__Impl
	rule__InterfaceMethodDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMethodDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMethodDeclarationAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getInterfaceMethodDeclarationAccess().getIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceMethodDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMethodDeclaration__Group__2__Impl
	rule__InterfaceMethodDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMethodDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMethodDeclarationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getInterfaceMethodDeclarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceMethodDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMethodDeclaration__Group__3__Impl
	rule__InterfaceMethodDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMethodDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMethodDeclarationAccess().getFormalParameterListParserRuleCall_3()); }
(	ruleFormalParameterList)?
{ after(grammarAccess.getInterfaceMethodDeclarationAccess().getFormalParameterListParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceMethodDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMethodDeclaration__Group__4__Impl
	rule__InterfaceMethodDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMethodDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMethodDeclarationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getInterfaceMethodDeclarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceMethodDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceMethodDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMethodDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceMethodDeclarationAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getInterfaceMethodDeclarationAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StructDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group__0__Impl
	rule__StructDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationAccess().getStructKeyword_0()); }

	'struct' 

{ after(grammarAccess.getStructDeclarationAccess().getStructKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group__1__Impl
	rule__StructDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getStructDeclarationAccess().getIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group__2__Impl
	rule__StructDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationAccess().getGroup_2()); }
(rule__StructDeclaration__Group_2__0)?
{ after(grammarAccess.getStructDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group__3__Impl
	rule__StructDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationAccess().getStructBodyParserRuleCall_3()); }
	ruleStructBody
{ after(grammarAccess.getStructDeclarationAccess().getStructBodyParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_4()); }
(
	';' 
)?
{ after(grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StructDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group_2__0__Impl
	rule__StructDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getStructDeclarationAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationAccess().getQualifiedIdentifierListParserRuleCall_2_1()); }
	ruleQualifiedIdentifierList
{ after(grammarAccess.getStructDeclarationAccess().getQualifiedIdentifierListParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructBody__Group__0__Impl
	rule__StructBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getStructBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructBody__Group__1__Impl
	rule__StructBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructBodyAccess().getStructMemberDeclarationParserRuleCall_1()); }
(	ruleStructMemberDeclaration)*
{ after(grammarAccess.getStructBodyAccess().getStructMemberDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructBodyAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getStructBodyAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__StructMemberDeclarations2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructMemberDeclarations2__Group__0__Impl
	rule__StructMemberDeclarations2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructMemberDeclarations2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberDeclarations2Access().getStructMemberDeclarationParserRuleCall_0()); }
	ruleStructMemberDeclaration
{ after(grammarAccess.getStructMemberDeclarations2Access().getStructMemberDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructMemberDeclarations2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructMemberDeclarations2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructMemberDeclarations2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberDeclarations2Access().getStructMemberDeclarations2ParserRuleCall_1()); }
	ruleStructMemberDeclarations2
{ after(grammarAccess.getStructMemberDeclarations2Access().getStructMemberDeclarations2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassModifierParserRuleCall_0()); }
(	ruleClassModifier)*
{ after(grammarAccess.getClassDeclarationAccess().getClassModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__1__Impl
	rule__ClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }

	'class' 

{ after(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__2__Impl
	rule__ClassDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getIdentifierParserRuleCall_2()); }
	ruleIdentifier
{ after(grammarAccess.getClassDeclarationAccess().getIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__3__Impl
	rule__ClassDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassBaseParserRuleCall_3()); }
(	ruleClassBase)?
{ after(grammarAccess.getClassDeclarationAccess().getClassBaseParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__4__Impl
	rule__ClassDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassBodyParserRuleCall_4()); }
	ruleClassBody
{ after(grammarAccess.getClassDeclarationAccess().getClassBodyParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_5()); }
(
	';' 
)?
{ after(grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ClassBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBody__Group__0__Impl
	rule__ClassBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getClassBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBody__Group__1__Impl
	rule__ClassBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyAccess().getClassMemberDeclarationParserRuleCall_1()); }
(	ruleClassMemberDeclaration)*
{ after(grammarAccess.getClassBodyAccess().getClassMemberDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getClassBodyAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassMemberDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMemberDeclaration__Group_1__0__Impl
	rule__ClassMemberDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMemberDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberDeclarationAccess().getAttributesParserRuleCall_1_0()); }
	ruleAttributes
{ after(grammarAccess.getClassMemberDeclarationAccess().getAttributesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassMemberDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMemberDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMemberDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberDeclarationAccess().getAlternatives_1_1()); }
(rule__ClassMemberDeclaration__Alternatives_1_1)
{ after(grammarAccess.getClassMemberDeclarationAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticConstructorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticConstructorDeclaration__Group__0__Impl
	rule__StaticConstructorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorDeclarationAccess().getStaticConstructorModifiersParserRuleCall_0()); }
	ruleStaticConstructorModifiers
{ after(grammarAccess.getStaticConstructorDeclarationAccess().getStaticConstructorModifiersParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticConstructorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticConstructorDeclaration__Group__1__Impl
	rule__StaticConstructorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorDeclarationAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getStaticConstructorDeclarationAccess().getIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticConstructorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticConstructorDeclaration__Group__2__Impl
	rule__StaticConstructorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorDeclarationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getStaticConstructorDeclarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticConstructorDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticConstructorDeclaration__Group__3__Impl
	rule__StaticConstructorDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorDeclarationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getStaticConstructorDeclarationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticConstructorDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticConstructorDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_4()); }
	ruleMaybeEmptyBlock
{ after(grammarAccess.getStaticConstructorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticConstructorModifiers__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticConstructorModifiers__Group_0__0__Impl
	rule__StaticConstructorModifiers__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorModifiers__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorModifiersAccess().getExternKeyword_0_0()); }
(
	'extern' 
)?
{ after(grammarAccess.getStaticConstructorModifiersAccess().getExternKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticConstructorModifiers__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticConstructorModifiers__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorModifiers__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorModifiersAccess().getStaticKeyword_0_1()); }

	'static' 

{ after(grammarAccess.getStaticConstructorModifiersAccess().getStaticKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticConstructorModifiers__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticConstructorModifiers__Group_1__0__Impl
	rule__StaticConstructorModifiers__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorModifiers__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorModifiersAccess().getStaticKeyword_1_0()); }

	'static' 

{ after(grammarAccess.getStaticConstructorModifiersAccess().getStaticKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticConstructorModifiers__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticConstructorModifiers__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticConstructorModifiers__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticConstructorModifiersAccess().getExternKeyword_1_1()); }

	'extern' 

{ after(grammarAccess.getStaticConstructorModifiersAccess().getExternKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DestructorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DestructorDeclaration__Group__0__Impl
	rule__DestructorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructorDeclarationAccess().getExternKeyword_0()); }
(
	'extern' 
)?
{ after(grammarAccess.getDestructorDeclarationAccess().getExternKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DestructorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DestructorDeclaration__Group__1__Impl
	rule__DestructorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructorDeclarationAccess().getTildeKeyword_1()); }

	'~' 

{ after(grammarAccess.getDestructorDeclarationAccess().getTildeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DestructorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DestructorDeclaration__Group__2__Impl
	rule__DestructorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructorDeclarationAccess().getIdentifierParserRuleCall_2()); }
	ruleIdentifier
{ after(grammarAccess.getDestructorDeclarationAccess().getIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DestructorDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DestructorDeclaration__Group__3__Impl
	rule__DestructorDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructorDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructorDeclarationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDestructorDeclarationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DestructorDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DestructorDeclaration__Group__4__Impl
	rule__DestructorDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructorDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructorDeclarationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getDestructorDeclarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DestructorDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DestructorDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructorDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_5()); }
	ruleMaybeEmptyBlock
{ after(grammarAccess.getDestructorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConstructorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclaration__Group__0__Impl
	rule__ConstructorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getConstructorModifierParserRuleCall_0()); }
(	ruleConstructorModifier)*
{ after(grammarAccess.getConstructorDeclarationAccess().getConstructorModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclaration__Group__1__Impl
	rule__ConstructorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getConstructorDeclaratorParserRuleCall_1()); }
	ruleConstructorDeclarator
{ after(grammarAccess.getConstructorDeclarationAccess().getConstructorDeclaratorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_2()); }
	ruleMaybeEmptyBlock
{ after(grammarAccess.getConstructorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstructorDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclarator__Group__0__Impl
	rule__ConstructorDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclaratorAccess().getIdentifierParserRuleCall_0()); }
	ruleIdentifier
{ after(grammarAccess.getConstructorDeclaratorAccess().getIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclarator__Group__1__Impl
	rule__ConstructorDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclaratorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConstructorDeclaratorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclarator__Group__2__Impl
	rule__ConstructorDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclaratorAccess().getFormalParameterListParserRuleCall_2()); }
(	ruleFormalParameterList)?
{ after(grammarAccess.getConstructorDeclaratorAccess().getFormalParameterListParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclarator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclarator__Group__3__Impl
	rule__ConstructorDeclarator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclaratorAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getConstructorDeclaratorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclarator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclarator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclaratorAccess().getConstructorInitializerParserRuleCall_4()); }
(	ruleConstructorInitializer)?
{ after(grammarAccess.getConstructorDeclaratorAccess().getConstructorInitializerParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstructorInitializer__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_0__0__Impl
	rule__ConstructorInitializer__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getColonKeyword_0_0()); }

	':' 

{ after(grammarAccess.getConstructorInitializerAccess().getColonKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInitializer__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_0__1__Impl
	rule__ConstructorInitializer__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getBaseKeyword_0_1()); }

	'base' 

{ after(grammarAccess.getConstructorInitializerAccess().getBaseKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInitializer__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_0__2__Impl
	rule__ConstructorInitializer__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getConstructorInitializerAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInitializer__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_0__3__Impl
	rule__ConstructorInitializer__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getArgumentListParserRuleCall_0_3()); }
	ruleArgumentList
{ after(grammarAccess.getConstructorInitializerAccess().getArgumentListParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInitializer__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getConstructorInitializerAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstructorInitializer__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_1__0__Impl
	rule__ConstructorInitializer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getConstructorInitializerAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInitializer__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_1__1__Impl
	rule__ConstructorInitializer__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getThisKeyword_1_1()); }

	'this' 

{ after(grammarAccess.getConstructorInitializerAccess().getThisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInitializer__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_1__2__Impl
	rule__ConstructorInitializer__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getLeftParenthesisKeyword_1_2()); }

	'(' 

{ after(grammarAccess.getConstructorInitializerAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInitializer__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_1__3__Impl
	rule__ConstructorInitializer__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getArgumentListParserRuleCall_1_3()); }
	ruleArgumentList
{ after(grammarAccess.getConstructorInitializerAccess().getArgumentListParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInitializer__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInitializer__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInitializer__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInitializerAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getConstructorInitializerAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArgumentList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentList__Group__0__Impl
	rule__ArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getArgumentParserRuleCall_0()); }
	ruleArgument
{ after(grammarAccess.getArgumentListAccess().getArgumentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getArgumentListAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Argument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getRefOrOutParserRuleCall_0()); }
(	ruleRefOrOut)?
{ after(grammarAccess.getArgumentAccess().getRefOrOutParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getArgumentAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperatorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDeclaration__Group__0__Impl
	rule__OperatorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOperatorDeclarationAccess().getOperatorModifierParserRuleCall_0()); }
(	ruleOperatorModifier)
{ after(grammarAccess.getOperatorDeclarationAccess().getOperatorModifierParserRuleCall_0()); }
)
(
{ before(grammarAccess.getOperatorDeclarationAccess().getOperatorModifierParserRuleCall_0()); }
(	ruleOperatorModifier)*
{ after(grammarAccess.getOperatorDeclarationAccess().getOperatorModifierParserRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDeclaration__Group__1__Impl
	rule__OperatorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDeclarationAccess().getOperatorDeclaratorParserRuleCall_1()); }
	ruleOperatorDeclarator
{ after(grammarAccess.getOperatorDeclarationAccess().getOperatorDeclaratorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_2()); }
	ruleMaybeEmptyBlock
{ after(grammarAccess.getOperatorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConversionOperatorDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConversionOperatorDeclarator__Group__0__Impl
	rule__ConversionOperatorDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConversionOperatorDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversionOperatorDeclaratorAccess().getConversionKindParserRuleCall_0()); }
	ruleConversionKind
{ after(grammarAccess.getConversionOperatorDeclaratorAccess().getConversionKindParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConversionOperatorDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConversionOperatorDeclarator__Group__1__Impl
	rule__ConversionOperatorDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConversionOperatorDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversionOperatorDeclaratorAccess().getOperatorKeyword_1()); }

	'operator' 

{ after(grammarAccess.getConversionOperatorDeclaratorAccess().getOperatorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConversionOperatorDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConversionOperatorDeclarator__Group__2__Impl
	rule__ConversionOperatorDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConversionOperatorDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversionOperatorDeclaratorAccess().getTypeParserRuleCall_2()); }
	ruleType
{ after(grammarAccess.getConversionOperatorDeclaratorAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConversionOperatorDeclarator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConversionOperatorDeclarator__Group__3__Impl
	rule__ConversionOperatorDeclarator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConversionOperatorDeclarator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversionOperatorDeclaratorAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getConversionOperatorDeclaratorAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConversionOperatorDeclarator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConversionOperatorDeclarator__Group__4__Impl
	rule__ConversionOperatorDeclarator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConversionOperatorDeclarator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversionOperatorDeclaratorAccess().getTypeParserRuleCall_4()); }
	ruleType
{ after(grammarAccess.getConversionOperatorDeclaratorAccess().getTypeParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConversionOperatorDeclarator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConversionOperatorDeclarator__Group__5__Impl
	rule__ConversionOperatorDeclarator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConversionOperatorDeclarator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversionOperatorDeclaratorAccess().getIdentifierParserRuleCall_5()); }
	ruleIdentifier
{ after(grammarAccess.getConversionOperatorDeclaratorAccess().getIdentifierParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConversionOperatorDeclarator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConversionOperatorDeclarator__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConversionOperatorDeclarator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversionOperatorDeclaratorAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getConversionOperatorDeclaratorAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__BinaryOperatorDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__0__Impl
	rule__BinaryOperatorDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperatorDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__1__Impl
	rule__BinaryOperatorDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getOperatorKeyword_1()); }

	'operator' 

{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getOperatorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperatorDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__2__Impl
	rule__BinaryOperatorDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getOverloadableBinaryOperatorParserRuleCall_2()); }
	ruleOverloadableBinaryOperator
{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getOverloadableBinaryOperatorParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperatorDeclarator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__3__Impl
	rule__BinaryOperatorDeclarator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperatorDeclarator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__4__Impl
	rule__BinaryOperatorDeclarator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getTypeParserRuleCall_4()); }
	ruleType
{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getTypeParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperatorDeclarator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__5__Impl
	rule__BinaryOperatorDeclarator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getIdentifierParserRuleCall_5()); }
	ruleIdentifier
{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getIdentifierParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperatorDeclarator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__6__Impl
	rule__BinaryOperatorDeclarator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperatorDeclarator__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__7__Impl
	rule__BinaryOperatorDeclarator__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getTypeParserRuleCall_7()); }
	ruleType
{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getTypeParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperatorDeclarator__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__8__Impl
	rule__BinaryOperatorDeclarator__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getIdentifierParserRuleCall_8()); }
	ruleIdentifier
{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getIdentifierParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperatorDeclarator__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperatorDeclarator__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorDeclarator__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorDeclaratorAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getBinaryOperatorDeclaratorAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__UnaryOperatorDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperatorDeclarator__Group__0__Impl
	rule__UnaryOperatorDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperatorDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorDeclaratorAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getUnaryOperatorDeclaratorAccess().getTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperatorDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperatorDeclarator__Group__1__Impl
	rule__UnaryOperatorDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperatorDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorDeclaratorAccess().getOperatorKeyword_1()); }

	'operator' 

{ after(grammarAccess.getUnaryOperatorDeclaratorAccess().getOperatorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperatorDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperatorDeclarator__Group__2__Impl
	rule__UnaryOperatorDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperatorDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorDeclaratorAccess().getOverloadableUnaryOperatorParserRuleCall_2()); }
	ruleOverloadableUnaryOperator
{ after(grammarAccess.getUnaryOperatorDeclaratorAccess().getOverloadableUnaryOperatorParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperatorDeclarator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperatorDeclarator__Group__3__Impl
	rule__UnaryOperatorDeclarator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperatorDeclarator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorDeclaratorAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getUnaryOperatorDeclaratorAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperatorDeclarator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperatorDeclarator__Group__4__Impl
	rule__UnaryOperatorDeclarator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperatorDeclarator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorDeclaratorAccess().getTypeParserRuleCall_4()); }
	ruleType
{ after(grammarAccess.getUnaryOperatorDeclaratorAccess().getTypeParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperatorDeclarator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperatorDeclarator__Group__5__Impl
	rule__UnaryOperatorDeclarator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperatorDeclarator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorDeclaratorAccess().getIdentifierParserRuleCall_5()); }
	ruleIdentifier
{ after(grammarAccess.getUnaryOperatorDeclaratorAccess().getIdentifierParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperatorDeclarator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperatorDeclarator__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperatorDeclarator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorDeclaratorAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getUnaryOperatorDeclaratorAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IndexerDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclaration__Group__0__Impl
	rule__IndexerDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclarationAccess().getIndexerModifierParserRuleCall_0()); }
(	ruleIndexerModifier)*
{ after(grammarAccess.getIndexerDeclarationAccess().getIndexerModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclaration__Group__1__Impl
	rule__IndexerDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclarationAccess().getIndexerDeclaratorParserRuleCall_1()); }
	ruleIndexerDeclarator
{ after(grammarAccess.getIndexerDeclarationAccess().getIndexerDeclaratorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclaration__Group__2__Impl
	rule__IndexerDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getIndexerDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclaration__Group__3__Impl
	rule__IndexerDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclarationAccess().getAccessorDeclarationsParserRuleCall_3()); }
	ruleAccessorDeclarations
{ after(grammarAccess.getIndexerDeclarationAccess().getAccessorDeclarationsParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclarationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getIndexerDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IndexerDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group__0__Impl
	rule__IndexerDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getIndexerDeclaratorAccess().getTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getAlternatives_1()); }
(rule__IndexerDeclarator__Alternatives_1)
{ after(grammarAccess.getIndexerDeclaratorAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexerDeclarator__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_0__0__Impl
	rule__IndexerDeclarator__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getThisKeyword_1_0_0()); }

	'this' 

{ after(grammarAccess.getIndexerDeclaratorAccess().getThisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclarator__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_0__1__Impl
	rule__IndexerDeclarator__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getLeftSquareBracketKeyword_1_0_1()); }

	'[' 

{ after(grammarAccess.getIndexerDeclaratorAccess().getLeftSquareBracketKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclarator__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_0__2__Impl
	rule__IndexerDeclarator__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getFormalParameterListParserRuleCall_1_0_2()); }
(	ruleFormalParameterList)
{ after(grammarAccess.getIndexerDeclaratorAccess().getFormalParameterListParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclarator__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getRightSquareBracketKeyword_1_0_3()); }

	']' 

{ after(grammarAccess.getIndexerDeclaratorAccess().getRightSquareBracketKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IndexerDeclarator__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_1__0__Impl
	rule__IndexerDeclarator__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getQualifiedIdentifierParserRuleCall_1_1_0()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getIndexerDeclaratorAccess().getQualifiedIdentifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclarator__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_1__1__Impl
	rule__IndexerDeclarator__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getFullStopKeyword_1_1_1()); }

	'.' 

{ after(grammarAccess.getIndexerDeclaratorAccess().getFullStopKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclarator__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_1__2__Impl
	rule__IndexerDeclarator__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getThisKeyword_1_1_2()); }

	'this' 

{ after(grammarAccess.getIndexerDeclaratorAccess().getThisKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclarator__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_1__3__Impl
	rule__IndexerDeclarator__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getLeftSquareBracketKeyword_1_1_3()); }

	'[' 

{ after(grammarAccess.getIndexerDeclaratorAccess().getLeftSquareBracketKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclarator__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_1__4__Impl
	rule__IndexerDeclarator__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getFormalParameterListParserRuleCall_1_1_4()); }
(	ruleFormalParameterList)
{ after(grammarAccess.getIndexerDeclaratorAccess().getFormalParameterListParserRuleCall_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexerDeclarator__Group_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexerDeclarator__Group_1_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexerDeclarator__Group_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexerDeclaratorAccess().getRightSquareBracketKeyword_1_1_5()); }

	']' 

{ after(grammarAccess.getIndexerDeclaratorAccess().getRightSquareBracketKeyword_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EventDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__0__Impl
	rule__EventDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getEventModifierParserRuleCall_0()); }
(	ruleEventModifier)*
{ after(grammarAccess.getEventDeclarationAccess().getEventModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__1__Impl
	rule__EventDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getEventKeyword_1()); }

	'event' 

{ after(grammarAccess.getEventDeclarationAccess().getEventKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__2__Impl
	rule__EventDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getTypeParserRuleCall_2()); }
	ruleType
{ after(grammarAccess.getEventDeclarationAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getAlternatives_3()); }
(rule__EventDeclaration__Alternatives_3)
{ after(grammarAccess.getEventDeclarationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EventDeclaration__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3_0__0__Impl
	rule__EventDeclaration__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEventDeclarationAccess().getGroup_3_0_0()); }
(rule__EventDeclaration__Group_3_0_0__0)
{ after(grammarAccess.getEventDeclarationAccess().getGroup_3_0_0()); }
)
(
{ before(grammarAccess.getEventDeclarationAccess().getGroup_3_0_0()); }
(rule__EventDeclaration__Group_3_0_0__0)*
{ after(grammarAccess.getEventDeclarationAccess().getGroup_3_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getSemicolonKeyword_3_0_1()); }

	';' 

{ after(grammarAccess.getEventDeclarationAccess().getSemicolonKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventDeclaration__Group_3_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3_0_0__0__Impl
	rule__EventDeclaration__Group_3_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getVariableDeclaratorParserRuleCall_3_0_0_0()); }
	ruleVariableDeclarator
{ after(grammarAccess.getEventDeclarationAccess().getVariableDeclaratorParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_3_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getCommaKeyword_3_0_0_1()); }

	',' 

{ after(grammarAccess.getEventDeclarationAccess().getCommaKeyword_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventDeclaration__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3_1__0__Impl
	rule__EventDeclaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getQualifiedIdentifierParserRuleCall_3_1_0()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getEventDeclarationAccess().getQualifiedIdentifierParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3_1__1__Impl
	rule__EventDeclaration__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getLeftCurlyBracketKeyword_3_1_1()); }

	'{' 

{ after(grammarAccess.getEventDeclarationAccess().getLeftCurlyBracketKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3_1__2__Impl
	rule__EventDeclaration__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getEventAccessorDeclarationsParserRuleCall_3_1_2()); }
	ruleEventAccessorDeclarations
{ after(grammarAccess.getEventDeclarationAccess().getEventAccessorDeclarationsParserRuleCall_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getRightCurlyBracketKeyword_3_1_3()); }

	'}' 

{ after(grammarAccess.getEventDeclarationAccess().getRightCurlyBracketKeyword_3_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EventAccessorDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventAccessorDeclarations__Group__0__Impl
	rule__EventAccessorDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventAccessorDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getAttributesParserRuleCall_0()); }
	ruleAttributes
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getAttributesParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventAccessorDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventAccessorDeclarations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventAccessorDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getAlternatives_1()); }
(rule__EventAccessorDeclarations__Alternatives_1)
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventAccessorDeclarations__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventAccessorDeclarations__Group_1_0__0__Impl
	rule__EventAccessorDeclarations__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventAccessorDeclarations__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getAddAccessorDeclarationParserRuleCall_1_0_0()); }
	ruleAddAccessorDeclaration
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getAddAccessorDeclarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventAccessorDeclarations__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventAccessorDeclarations__Group_1_0__1__Impl
	rule__EventAccessorDeclarations__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventAccessorDeclarations__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getAttributesParserRuleCall_1_0_1()); }
	ruleAttributes
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getAttributesParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventAccessorDeclarations__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventAccessorDeclarations__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventAccessorDeclarations__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getRemoveAccessorDeclarationParserRuleCall_1_0_2()); }
	ruleRemoveAccessorDeclaration
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getRemoveAccessorDeclarationParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EventAccessorDeclarations__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventAccessorDeclarations__Group_1_1__0__Impl
	rule__EventAccessorDeclarations__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventAccessorDeclarations__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getRemoveAccessorDeclarationParserRuleCall_1_1_0()); }
	ruleRemoveAccessorDeclaration
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getRemoveAccessorDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventAccessorDeclarations__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventAccessorDeclarations__Group_1_1__1__Impl
	rule__EventAccessorDeclarations__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventAccessorDeclarations__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getAttributesParserRuleCall_1_1_1()); }
	ruleAttributes
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getAttributesParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventAccessorDeclarations__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventAccessorDeclarations__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventAccessorDeclarations__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccessorDeclarationsAccess().getAddAccessorDeclarationParserRuleCall_1_1_2()); }
	ruleAddAccessorDeclaration
{ after(grammarAccess.getEventAccessorDeclarationsAccess().getAddAccessorDeclarationParserRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RemoveAccessorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoveAccessorDeclaration__Group__0__Impl
	rule__RemoveAccessorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveAccessorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveAccessorDeclarationAccess().getRemoveKeyword_0()); }

	'remove' 

{ after(grammarAccess.getRemoveAccessorDeclarationAccess().getRemoveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveAccessorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoveAccessorDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveAccessorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveAccessorDeclarationAccess().getBlockParserRuleCall_1()); }
	ruleBlock
{ after(grammarAccess.getRemoveAccessorDeclarationAccess().getBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddAccessorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddAccessorDeclaration__Group__0__Impl
	rule__AddAccessorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddAccessorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccessorDeclarationAccess().getAddKeyword_0()); }

	'add' 

{ after(grammarAccess.getAddAccessorDeclarationAccess().getAddKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddAccessorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddAccessorDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddAccessorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccessorDeclarationAccess().getBlockParserRuleCall_1()); }
	ruleBlock
{ after(grammarAccess.getAddAccessorDeclarationAccess().getBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__0__Impl
	rule__PropertyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getPropertyModifierParserRuleCall_0()); }
(	rulePropertyModifier)*
{ after(grammarAccess.getPropertyDeclarationAccess().getPropertyModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__1__Impl
	rule__PropertyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getPropertyDeclarationAccess().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__2__Impl
	rule__PropertyDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getQualifiedIdentifierParserRuleCall_2()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getPropertyDeclarationAccess().getQualifiedIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__3__Impl
	rule__PropertyDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPropertyDeclarationAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__4__Impl
	rule__PropertyDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAccessorDeclarationsParserRuleCall_4()); }
	ruleAccessorDeclarations
{ after(grammarAccess.getPropertyDeclarationAccess().getAccessorDeclarationsParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPropertyDeclarationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AccessorDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessorDeclarations__Group__0__Impl
	rule__AccessorDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessorDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getAttributesParserRuleCall_0()); }
	ruleAttributes
{ after(grammarAccess.getAccessorDeclarationsAccess().getAttributesParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessorDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessorDeclarations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessorDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getAlternatives_1()); }
(rule__AccessorDeclarations__Alternatives_1)
{ after(grammarAccess.getAccessorDeclarationsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AccessorDeclarations__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessorDeclarations__Group_1_0__0__Impl
	rule__AccessorDeclarations__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessorDeclarations__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getGetAccessorDeclarationParserRuleCall_1_0_0()); }
	ruleGetAccessorDeclaration
{ after(grammarAccess.getAccessorDeclarationsAccess().getGetAccessorDeclarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessorDeclarations__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessorDeclarations__Group_1_0__1__Impl
	rule__AccessorDeclarations__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessorDeclarations__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getAttributesParserRuleCall_1_0_1()); }
	ruleAttributes
{ after(grammarAccess.getAccessorDeclarationsAccess().getAttributesParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessorDeclarations__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessorDeclarations__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessorDeclarations__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getSetAccessorDeclarationParserRuleCall_1_0_2()); }
(	ruleSetAccessorDeclaration)?
{ after(grammarAccess.getAccessorDeclarationsAccess().getSetAccessorDeclarationParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AccessorDeclarations__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessorDeclarations__Group_1_1__0__Impl
	rule__AccessorDeclarations__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessorDeclarations__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getSetAccessorDeclarationParserRuleCall_1_1_0()); }
	ruleSetAccessorDeclaration
{ after(grammarAccess.getAccessorDeclarationsAccess().getSetAccessorDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessorDeclarations__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessorDeclarations__Group_1_1__1__Impl
	rule__AccessorDeclarations__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessorDeclarations__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getAttributesParserRuleCall_1_1_1()); }
	ruleAttributes
{ after(grammarAccess.getAccessorDeclarationsAccess().getAttributesParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessorDeclarations__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessorDeclarations__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessorDeclarations__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorDeclarationsAccess().getGetAccessorDeclarationParserRuleCall_1_1_2()); }
(	ruleGetAccessorDeclaration)?
{ after(grammarAccess.getAccessorDeclarationsAccess().getGetAccessorDeclarationParserRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SetAccessorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAccessorDeclaration__Group__0__Impl
	rule__SetAccessorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAccessorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccessorDeclarationAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getSetAccessorDeclarationAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAccessorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAccessorDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAccessorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccessorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_1()); }
	ruleMaybeEmptyBlock
{ after(grammarAccess.getSetAccessorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GetAccessorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetAccessorDeclaration__Group__0__Impl
	rule__GetAccessorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetAccessorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetAccessorDeclarationAccess().getGetKeyword_0()); }

	'get' 

{ after(grammarAccess.getGetAccessorDeclarationAccess().getGetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetAccessorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetAccessorDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetAccessorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetAccessorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_1()); }
	ruleMaybeEmptyBlock
{ after(grammarAccess.getGetAccessorDeclarationAccess().getMaybeEmptyBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__0__Impl
	rule__MethodDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getMethodHeaderParserRuleCall_0()); }
	ruleMethodHeader
{ after(grammarAccess.getMethodDeclarationAccess().getMethodHeaderParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getMaybeEmptyBlockParserRuleCall_1()); }
	ruleMaybeEmptyBlock
{ after(grammarAccess.getMethodDeclarationAccess().getMaybeEmptyBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodHeader__Group__0__Impl
	rule__MethodHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodHeaderAccess().getAttributesParserRuleCall_0()); }
	ruleAttributes
{ after(grammarAccess.getMethodHeaderAccess().getAttributesParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodHeader__Group__1__Impl
	rule__MethodHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodHeaderAccess().getMethodModifierParserRuleCall_1()); }
(	ruleMethodModifier)*
{ after(grammarAccess.getMethodHeaderAccess().getMethodModifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodHeader__Group__2__Impl
	rule__MethodHeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodHeaderAccess().getTypeOrVoidParserRuleCall_2()); }
	ruleTypeOrVoid
{ after(grammarAccess.getMethodHeaderAccess().getTypeOrVoidParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodHeader__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodHeader__Group__3__Impl
	rule__MethodHeader__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodHeaderAccess().getWSTerminalRuleCall_3()); }
	RULE_WS
{ after(grammarAccess.getMethodHeaderAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodHeader__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodHeader__Group__4__Impl
	rule__MethodHeader__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodHeaderAccess().getQualifiedIdentifierParserRuleCall_4()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getMethodHeaderAccess().getQualifiedIdentifierParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodHeader__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodHeader__Group__5__Impl
	rule__MethodHeader__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodHeaderAccess().getLeftParenthesisKeyword_5()); }

	'(' 

{ after(grammarAccess.getMethodHeaderAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodHeader__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodHeader__Group__6__Impl
	rule__MethodHeader__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodHeaderAccess().getFormalParameterListParserRuleCall_6()); }
(	ruleFormalParameterList)?
{ after(grammarAccess.getMethodHeaderAccess().getFormalParameterListParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodHeader__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodHeader__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodHeaderAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getMethodHeaderAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__FormalParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterList__Group__0__Impl
	rule__FormalParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getFixedParametersParserRuleCall_0()); }
(	ruleFixedParameters)
{ after(grammarAccess.getFormalParameterListAccess().getFixedParametersParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getAlternatives_1()); }
(rule__FormalParameterList__Alternatives_1)
{ after(grammarAccess.getFormalParameterListAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParameterList__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterList__Group_1_0__0__Impl
	rule__FormalParameterList__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getCommaKeyword_1_0_0()); }

	',' 

{ after(grammarAccess.getFormalParameterListAccess().getCommaKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterList__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterList__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterList__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterListAccess().getParameterArrayParserRuleCall_1_0_1()); }
	ruleParameterArray
{ after(grammarAccess.getFormalParameterListAccess().getParameterArrayParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterArray__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterArray__Group__0__Impl
	rule__ParameterArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArray__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterArrayAccess().getAttributesParserRuleCall_0()); }
	ruleAttributes
{ after(grammarAccess.getParameterArrayAccess().getAttributesParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterArray__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterArray__Group__1__Impl
	rule__ParameterArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArray__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterArrayAccess().getParamsKeyword_1()); }

	'params' 

{ after(grammarAccess.getParameterArrayAccess().getParamsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterArray__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterArray__Group__2__Impl
	rule__ParameterArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArray__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterArrayAccess().getArrayTypeParserRuleCall_2()); }
	ruleArrayType
{ after(grammarAccess.getParameterArrayAccess().getArrayTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterArray__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterArray__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArray__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterArrayAccess().getIdentifierParserRuleCall_3()); }
	ruleIdentifier
{ after(grammarAccess.getParameterArrayAccess().getIdentifierParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FixedParameters__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedParameters__Group__0__Impl
	rule__FixedParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedParameters__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedParametersAccess().getFixedParameterParserRuleCall_0()); }
(	ruleFixedParameter)
{ after(grammarAccess.getFixedParametersAccess().getFixedParameterParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedParameters__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedParameters__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedParameters__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedParametersAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getFixedParametersAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FixedParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedParameter__Group__0__Impl
	rule__FixedParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedParameterAccess().getRefOrOutParserRuleCall_0()); }
(	ruleRefOrOut)?
{ after(grammarAccess.getFixedParameterAccess().getRefOrOutParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedParameter__Group__1__Impl
	rule__FixedParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedParameterAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getFixedParameterAccess().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedParameterAccess().getIdentifierParserRuleCall_2()); }
	ruleIdentifier
{ after(grammarAccess.getFixedParameterAccess().getIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FieldDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__0__Impl
	rule__FieldDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getFieldModifierParserRuleCall_0()); }
(	ruleFieldModifier)*
{ after(grammarAccess.getFieldDeclarationAccess().getFieldModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__1__Impl
	rule__FieldDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getFieldDeclarationAccess().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__2__Impl
	rule__FieldDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFieldDeclarationAccess().getGroup_2()); }
(rule__FieldDeclaration__Group_2__0)
{ after(grammarAccess.getFieldDeclarationAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getFieldDeclarationAccess().getGroup_2()); }
(rule__FieldDeclaration__Group_2__0)*
{ after(grammarAccess.getFieldDeclarationAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FieldDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group_2__0__Impl
	rule__FieldDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getVariableDeclaratorParserRuleCall_2_0()); }
	ruleVariableDeclarator
{ after(grammarAccess.getFieldDeclarationAccess().getVariableDeclaratorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getCommaKeyword_2_1()); }

	',' 

{ after(grammarAccess.getFieldDeclarationAccess().getCommaKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__0__Impl
	rule__VariableDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getIdentifierParserRuleCall_0()); }
	ruleIdentifier
{ after(grammarAccess.getVariableDeclaratorAccess().getIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__1__Impl
	rule__VariableDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getVariableDeclaratorAccess().getIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__2__Impl
	rule__VariableDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getVariableInitializerParserRuleCall_3()); }
	ruleVariableInitializer
{ after(grammarAccess.getVariableDeclaratorAccess().getVariableInitializerParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayInitializer__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_0__0__Impl
	rule__ArrayInitializer__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0_0()); }

	'{' 

{ after(grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_0_1()); }

	'}' 

{ after(grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayInitializer__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_1__0__Impl
	rule__ArrayInitializer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_1__1__Impl
	rule__ArrayInitializer__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArrayInitializerAccess().getGroup_1_1()); }
(rule__ArrayInitializer__Group_1_1__0)
{ after(grammarAccess.getArrayInitializerAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getArrayInitializerAccess().getGroup_1_1()); }
(rule__ArrayInitializer__Group_1_1__0)*
{ after(grammarAccess.getArrayInitializerAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_1__2__Impl
	rule__ArrayInitializer__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getCommaKeyword_1_2()); }
(
	',' 
)?
{ after(grammarAccess.getArrayInitializerAccess().getCommaKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_1_3()); }

	'}' 

{ after(grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayInitializer__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_1_1__0__Impl
	rule__ArrayInitializer__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getVariableInitializerParserRuleCall_1_1_0()); }
	ruleVariableInitializer
{ after(grammarAccess.getArrayInitializerAccess().getVariableInitializerParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitializer__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializerAccess().getCommaKeyword_1_1_1()); }

	',' 

{ after(grammarAccess.getArrayInitializerAccess().getCommaKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__0__Impl
	rule__ConstantDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstantModifierParserRuleCall_0()); }
(	ruleConstantModifier)*
{ after(grammarAccess.getConstantDeclarationAccess().getConstantModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__1__Impl
	rule__ConstantDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstKeyword_1()); }

	'const' 

{ after(grammarAccess.getConstantDeclarationAccess().getConstKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__2__Impl
	rule__ConstantDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getTypeParserRuleCall_2()); }
	ruleType
{ after(grammarAccess.getConstantDeclarationAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__3__Impl
	rule__ConstantDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConstantDeclarationAccess().getGroup_3()); }
(rule__ConstantDeclaration__Group_3__0)
{ after(grammarAccess.getConstantDeclarationAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getConstantDeclarationAccess().getGroup_3()); }
(rule__ConstantDeclaration__Group_3__0)*
{ after(grammarAccess.getConstantDeclarationAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getConstantDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstantDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group_3__0__Impl
	rule__ConstantDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstantDeclaratorParserRuleCall_3_0()); }
	ruleConstantDeclarator
{ after(grammarAccess.getConstantDeclarationAccess().getConstantDeclaratorParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getCommaKeyword_3_1()); }

	',' 

{ after(grammarAccess.getConstantDeclarationAccess().getCommaKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclarator__Group__0__Impl
	rule__ConstantDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclaratorAccess().getIdentifierParserRuleCall_0()); }
	ruleIdentifier
{ after(grammarAccess.getConstantDeclaratorAccess().getIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclarator__Group__1__Impl
	rule__ConstantDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclaratorAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getConstantDeclaratorAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclarator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclaratorAccess().getExpressionParserRuleCall_2()); }
	ruleExpression
{ after(grammarAccess.getConstantDeclaratorAccess().getExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassBase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBase__Group__0__Impl
	rule__ClassBase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBaseAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getClassBaseAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBaseAccess().getAlternatives_1()); }
(rule__ClassBase__Alternatives_1)
{ after(grammarAccess.getClassBaseAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassBase__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBase__Group_1_1__0__Impl
	rule__ClassBase__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBase__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBaseAccess().getBuiltInClassTypeParserRuleCall_1_1_0()); }
	ruleBuiltInClassType
{ after(grammarAccess.getClassBaseAccess().getBuiltInClassTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBase__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBase__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBase__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBaseAccess().getGroup_1_1_1()); }
(rule__ClassBase__Group_1_1_1__0)?
{ after(grammarAccess.getClassBaseAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassBase__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBase__Group_1_1_1__0__Impl
	rule__ClassBase__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBase__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBaseAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getClassBaseAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBase__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBase__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBase__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBaseAccess().getQualifiedIdentifierListParserRuleCall_1_1_1_1()); }
	ruleQualifiedIdentifierList
{ after(grammarAccess.getClassBaseAccess().getQualifiedIdentifierListParserRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedIdentifierList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifierList__Group__0__Impl
	rule__QualifiedIdentifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifierList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierListAccess().getQualifiedIdentifierParserRuleCall_0()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getQualifiedIdentifierListAccess().getQualifiedIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifierList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifierList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierListAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getQualifiedIdentifierListAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GlobalAttributeSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalAttributeSection__Group__0__Impl
	rule__GlobalAttributeSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalAttributeSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalAttributeSectionAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getGlobalAttributeSectionAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalAttributeSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalAttributeSection__Group__1__Impl
	rule__GlobalAttributeSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalAttributeSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalAttributeSectionAccess().getAssemblyKeyword_1()); }

	'assembly' 

{ after(grammarAccess.getGlobalAttributeSectionAccess().getAssemblyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalAttributeSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalAttributeSection__Group__2__Impl
	rule__GlobalAttributeSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalAttributeSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalAttributeSectionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getGlobalAttributeSectionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalAttributeSection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalAttributeSection__Group__3__Impl
	rule__GlobalAttributeSection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalAttributeSection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalAttributeSectionAccess().getAttributeListParserRuleCall_3()); }
	ruleAttributeList
{ after(grammarAccess.getGlobalAttributeSectionAccess().getAttributeListParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalAttributeSection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalAttributeSection__Group__4__Impl
	rule__GlobalAttributeSection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalAttributeSection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalAttributeSectionAccess().getCommaKeyword_4()); }
(
	',' 
)?
{ after(grammarAccess.getGlobalAttributeSectionAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalAttributeSection__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalAttributeSection__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalAttributeSection__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalAttributeSectionAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getGlobalAttributeSectionAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AttributeSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSection__Group__0__Impl
	rule__AttributeSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSectionAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getAttributeSectionAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSection__Group__1__Impl
	rule__AttributeSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSectionAccess().getGroup_1()); }
(rule__AttributeSection__Group_1__0)?
{ after(grammarAccess.getAttributeSectionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSection__Group__2__Impl
	rule__AttributeSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSectionAccess().getAttributeListParserRuleCall_2()); }
	ruleAttributeList
{ after(grammarAccess.getAttributeSectionAccess().getAttributeListParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSection__Group__3__Impl
	rule__AttributeSection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSectionAccess().getCommaKeyword_3()); }
(
	',' 
)?
{ after(grammarAccess.getAttributeSectionAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSectionAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getAttributeSectionAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AttributeSection__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSection__Group_1__0__Impl
	rule__AttributeSection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSectionAccess().getAttributeTargetParserRuleCall_1_0()); }
	ruleAttributeTarget
{ after(grammarAccess.getAttributeSectionAccess().getAttributeTargetParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSection__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSection__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSectionAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getAttributeSectionAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeList__Group__0__Impl
	rule__AttributeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getAttributeParserRuleCall_0()); }
	ruleAttribute
{ after(grammarAccess.getAttributeListAccess().getAttributeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getAttributeListAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttributeNameParserRuleCall_0()); }
	ruleAttributeName
{ after(grammarAccess.getAttributeAccess().getAttributeNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttributeArgumentsParserRuleCall_1()); }
(	ruleAttributeArguments)?
{ after(grammarAccess.getAttributeAccess().getAttributeArgumentsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeArguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeArguments__Group__0__Impl
	rule__AttributeArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeArgumentsAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getAttributeArgumentsAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeArguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeArguments__Group__1__Impl
	rule__AttributeArguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeArgumentsAccess().getExpressionListParserRuleCall_1()); }
(	ruleExpressionList)?
{ after(grammarAccess.getAttributeArgumentsAccess().getExpressionListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeArguments__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeArguments__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeArguments__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeArgumentsAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getAttributeArgumentsAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
{ after(grammarAccess.getExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_1()); }
(rule__Expression__Alternatives_1)
{ after(grammarAccess.getExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_1__0__Impl
	rule__Expression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBARTerminalRuleCall_1_1_0()); }
	RULE_BAR
{ after(grammarAccess.getExpressionAccess().getBARTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_1__1__Impl
	rule__Expression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_1_1_1()); }
	ruleExpression
{ after(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression2ParserRuleCall_1_1_2()); }
	ruleExpression2
{ after(grammarAccess.getExpressionAccess().getExpression2ParserRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_0__0__Impl
	rule__Expression2__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getQuestionMarkKeyword_0_0()); }

	'?' 

{ after(grammarAccess.getExpression2Access().getQuestionMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_0__1__Impl
	rule__Expression2__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_0__2__Impl
	rule__Expression2__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getExpression2Access().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_0__3__Impl
	rule__Expression2__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_0_3()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_0_4()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression2__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_1__0__Impl
	rule__Expression2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getExpression2Access().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_1__1__Impl
	rule__Expression2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_1_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_1_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_2__0__Impl
	rule__Expression2__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getAmpersandAmpersandKeyword_2_0()); }

	'&&' 

{ after(grammarAccess.getExpression2Access().getAmpersandAmpersandKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_2__1__Impl
	rule__Expression2__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_2_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_2_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_3__0__Impl
	rule__Expression2__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getBARTerminalRuleCall_3_0()); }
	RULE_BAR
{ after(grammarAccess.getExpression2Access().getBARTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_3__1__Impl
	rule__Expression2__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_3_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_3_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_4__0__Impl
	rule__Expression2__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getCircumflexAccentKeyword_4_0()); }

	'^' 

{ after(grammarAccess.getExpression2Access().getCircumflexAccentKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_4__1__Impl
	rule__Expression2__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_4_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_4_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_5__0__Impl
	rule__Expression2__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getAMPERSANDTerminalRuleCall_5_0()); }
	RULE_AMPERSAND
{ after(grammarAccess.getExpression2Access().getAMPERSANDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_5__1__Impl
	rule__Expression2__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_5_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_5_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_6__0__Impl
	rule__Expression2__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getEXPRESSION_EQUALITY_OPERATORTerminalRuleCall_6_0()); }
	RULE_EXPRESSION_EQUALITY_OPERATOR
{ after(grammarAccess.getExpression2Access().getEXPRESSION_EQUALITY_OPERATORTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_6__1__Impl
	rule__Expression2__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_6_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_6_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_7__0__Impl
	rule__Expression2__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionRelationalOperatorParserRuleCall_7_0()); }
	ruleExpressionRelationalOperator
{ after(grammarAccess.getExpression2Access().getExpressionRelationalOperatorParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_7__1__Impl
	rule__Expression2__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_7_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_7_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_8__0__Impl
	rule__Expression2__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getIsKeyword_8_0()); }

	'is' 

{ after(grammarAccess.getExpression2Access().getIsKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_8__1__Impl
	rule__Expression2__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getBuiltInTypeParserRuleCall_8_1()); }
	ruleBuiltInType
{ after(grammarAccess.getExpression2Access().getBuiltInTypeParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_8_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_9__0__Impl
	rule__Expression2__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionShiftOperatorParserRuleCall_9_0()); }
	ruleExpressionShiftOperator
{ after(grammarAccess.getExpression2Access().getExpressionShiftOperatorParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_9__1__Impl
	rule__Expression2__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_9_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_9_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_10__0__Impl
	rule__Expression2__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getOPERATOR_OR_SIGNTerminalRuleCall_10_0()); }
	RULE_OPERATOR_OR_SIGN
{ after(grammarAccess.getExpression2Access().getOPERATOR_OR_SIGNTerminalRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_10__1__Impl
	rule__Expression2__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_10_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_10_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_11__0__Impl
	rule__Expression2__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getAsteriskKeyword_11_0()); }

	'*' 

{ after(grammarAccess.getExpression2Access().getAsteriskKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_11__1__Impl
	rule__Expression2__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_11_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_11_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_12__0__Impl
	rule__Expression2__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getSolidusKeyword_12_0()); }

	'/' 

{ after(grammarAccess.getExpression2Access().getSolidusKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_12__1__Impl
	rule__Expression2__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_12_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_12_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression2__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_13__0__Impl
	rule__Expression2__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getPercentSignKeyword_13_0()); }

	'%' 

{ after(grammarAccess.getExpression2Access().getPercentSignKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_13__1__Impl
	rule__Expression2__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpressionParserRuleCall_13_1()); }
	ruleExpression
{ after(grammarAccess.getExpression2Access().getExpressionParserRuleCall_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression2__Group_13__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_13_2()); }
	ruleExpression2
{ after(grammarAccess.getExpression2Access().getExpression2ParserRuleCall_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryOperatorParserRuleCall_0_0()); }
	ruleExpressionUnaryOperator
{ after(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionParserRuleCall_0_1()); }
	ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getUnaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__1__Impl
	rule__UnaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getTypeParserRuleCall_1_1()); }
	ruleType
{ after(grammarAccess.getUnaryExpressionAccess().getTypeParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__2__Impl
	rule__UnaryExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getUnaryExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionParserRuleCall_1_3()); }
	ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UsingDirective__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingDirective__Group__0__Impl
	rule__UsingDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingDirective__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingDirectiveAccess().getUsingKeyword_0()); }

	'using' 

{ after(grammarAccess.getUsingDirectiveAccess().getUsingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsingDirective__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingDirective__Group__1__Impl
	rule__UsingDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingDirective__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingDirectiveAccess().getGroup_1()); }
(rule__UsingDirective__Group_1__0)?
{ after(grammarAccess.getUsingDirectiveAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsingDirective__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingDirective__Group__2__Impl
	rule__UsingDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingDirective__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingDirectiveAccess().getQualifiedIdentifierParserRuleCall_2()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getUsingDirectiveAccess().getQualifiedIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsingDirective__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingDirective__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingDirective__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingDirectiveAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getUsingDirectiveAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UsingDirective__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingDirective__Group_1__0__Impl
	rule__UsingDirective__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingDirective__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingDirectiveAccess().getIdentifierParserRuleCall_1_0()); }
	ruleIdentifier
{ after(grammarAccess.getUsingDirectiveAccess().getIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsingDirective__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingDirective__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingDirective__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingDirectiveAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getUsingDirectiveAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNonArrayTypeParserRuleCall_0()); }
	ruleNonArrayType
{ after(grammarAccess.getTypeAccess().getNonArrayTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRANK_SPECIFIERTerminalRuleCall_1()); }
(	RULE_RANK_SPECIFIER)*
{ after(grammarAccess.getTypeAccess().getRANK_SPECIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__0__Impl
	rule__ArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getNonArrayTypeParserRuleCall_0()); }
	ruleNonArrayType
{ after(grammarAccess.getArrayTypeAccess().getNonArrayTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArrayTypeAccess().getRANK_SPECIFIERTerminalRuleCall_1()); }
(	RULE_RANK_SPECIFIER)
{ after(grammarAccess.getArrayTypeAccess().getRANK_SPECIFIERTerminalRuleCall_1()); }
)
(
{ before(grammarAccess.getArrayTypeAccess().getRANK_SPECIFIERTerminalRuleCall_1()); }
(	RULE_RANK_SPECIFIER)*
{ after(grammarAccess.getArrayTypeAccess().getRANK_SPECIFIERTerminalRuleCall_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedIdentifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group__0__Impl
	rule__QualifiedIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getIdentifierParserRuleCall_0()); }
	ruleIdentifier
{ after(grammarAccess.getQualifiedIdentifierAccess().getIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumBody__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group_0__0__Impl
	rule__EnumBody__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getLeftCurlyBracketKeyword_0_0()); }

	'{' 

{ after(grammarAccess.getEnumBodyAccess().getLeftCurlyBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBody__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getRightCurlyBracketKeyword_0_1()); }

	'}' 

{ after(grammarAccess.getEnumBodyAccess().getRightCurlyBracketKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumBody__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group_1__0__Impl
	rule__EnumBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getEnumBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBody__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group_1__1__Impl
	rule__EnumBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEnumBodyAccess().getGroup_1_1()); }
(rule__EnumBody__Group_1_1__0)
{ after(grammarAccess.getEnumBodyAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getEnumBodyAccess().getGroup_1_1()); }
(rule__EnumBody__Group_1_1__0)*
{ after(grammarAccess.getEnumBodyAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBody__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group_1__2__Impl
	rule__EnumBody__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getCommaKeyword_1_2()); }
(
	',' 
)?
{ after(grammarAccess.getEnumBodyAccess().getCommaKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBody__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getRightCurlyBracketKeyword_1_3()); }

	'}' 

{ after(grammarAccess.getEnumBodyAccess().getRightCurlyBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumBody__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group_1_1__0__Impl
	rule__EnumBody__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getEnumMemberDeclarationParserRuleCall_1_1_0()); }
	ruleEnumMemberDeclaration
{ after(grammarAccess.getEnumBodyAccess().getEnumMemberDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBody__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBody__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBody__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyAccess().getCommaKeyword_1_1_1()); }

	',' 

{ after(grammarAccess.getEnumBodyAccess().getCommaKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumMemberDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumMemberDeclaration__Group__0__Impl
	rule__EnumMemberDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberDeclarationAccess().getAttributesParserRuleCall_0()); }
	ruleAttributes
{ after(grammarAccess.getEnumMemberDeclarationAccess().getAttributesParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMemberDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumMemberDeclaration__Group__1__Impl
	rule__EnumMemberDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberDeclarationAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getEnumMemberDeclarationAccess().getIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMemberDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumMemberDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberDeclarationAccess().getGroup_2()); }
(rule__EnumMemberDeclaration__Group_2__0)?
{ after(grammarAccess.getEnumMemberDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumMemberDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumMemberDeclaration__Group_2__0__Impl
	rule__EnumMemberDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberDeclarationAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getEnumMemberDeclarationAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMemberDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumMemberDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberDeclarationAccess().getExpressionParserRuleCall_2_1()); }
	ruleExpression
{ after(grammarAccess.getEnumMemberDeclarationAccess().getExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EmbeddedStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedStatement__Group_1__0__Impl
	rule__EmbeddedStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedStatementAccess().getStatementExpressionParserRuleCall_1_0()); }
	ruleStatementExpression
{ after(grammarAccess.getEmbeddedStatementAccess().getStatementExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedStatementAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getEmbeddedStatementAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EmbeddedStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedStatement__Group_6__0__Impl
	rule__EmbeddedStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedStatement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedStatementAccess().getCheckedKeyword_6_0()); }

	'checked' 

{ after(grammarAccess.getEmbeddedStatementAccess().getCheckedKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedStatement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedStatementAccess().getBlockParserRuleCall_6_1()); }
	ruleBlock
{ after(grammarAccess.getEmbeddedStatementAccess().getBlockParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EmbeddedStatement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedStatement__Group_7__0__Impl
	rule__EmbeddedStatement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedStatement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedStatementAccess().getUncheckedKeyword_7_0()); }

	'unchecked' 

{ after(grammarAccess.getEmbeddedStatementAccess().getUncheckedKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedStatement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedStatement__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedStatement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedStatementAccess().getBlockParserRuleCall_7_1()); }
	ruleBlock
{ after(grammarAccess.getEmbeddedStatementAccess().getBlockParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UsingStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingStatement__Group__0__Impl
	rule__UsingStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingStatementAccess().getUsingKeyword_0()); }

	'using' 

{ after(grammarAccess.getUsingStatementAccess().getUsingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsingStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingStatement__Group__1__Impl
	rule__UsingStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getUsingStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsingStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingStatement__Group__2__Impl
	rule__UsingStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingStatementAccess().getResourceAquisitionParserRuleCall_2()); }
	ruleResourceAquisition
{ after(grammarAccess.getUsingStatementAccess().getResourceAquisitionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsingStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingStatement__Group__3__Impl
	rule__UsingStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getUsingStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsingStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsingStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingStatementAccess().getEmbeddedStatementParserRuleCall_4()); }
	ruleEmbeddedStatement
{ after(grammarAccess.getUsingStatementAccess().getEmbeddedStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LocalVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group__0__Impl
	rule__LocalVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getLocalVariableDeclarationAccess().getTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getGroup_1()); }
(rule__LocalVariableDeclaration__Group_1__0)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getGroup_1()); }
(rule__LocalVariableDeclaration__Group_1__0)*
{ after(grammarAccess.getLocalVariableDeclarationAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVariableDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group_1__0__Impl
	rule__LocalVariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getVariableDeclaratorParserRuleCall_1_0()); }
	ruleVariableDeclarator
{ after(grammarAccess.getLocalVariableDeclarationAccess().getVariableDeclaratorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getCommaKeyword_1_1()); }

	',' 

{ after(grammarAccess.getLocalVariableDeclarationAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LockStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LockStatement__Group__0__Impl
	rule__LockStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LockStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockStatementAccess().getLockKeyword_0()); }

	'lock' 

{ after(grammarAccess.getLockStatementAccess().getLockKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LockStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LockStatement__Group__1__Impl
	rule__LockStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LockStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getLockStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LockStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LockStatement__Group__2__Impl
	rule__LockStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LockStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockStatementAccess().getExpressionParserRuleCall_2()); }
	ruleExpression
{ after(grammarAccess.getLockStatementAccess().getExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LockStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LockStatement__Group__3__Impl
	rule__LockStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LockStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getLockStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LockStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LockStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LockStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockStatementAccess().getEmbeddedStatementParserRuleCall_4()); }
	ruleEmbeddedStatement
{ after(grammarAccess.getLockStatementAccess().getEmbeddedStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TryStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_0__0__Impl
	rule__TryStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getTryKeyword_0_0()); }

	'try' 

{ after(grammarAccess.getTryStatementAccess().getTryKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_0__1__Impl
	rule__TryStatement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getBlockParserRuleCall_0_1()); }
	ruleBlock
{ after(grammarAccess.getTryStatementAccess().getBlockParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getGroup_0_2()); }
(rule__TryStatement__Group_0_2__0)
{ after(grammarAccess.getTryStatementAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TryStatement__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_0_2__0__Impl
	rule__TryStatement__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getCatchClausesParserRuleCall_0_2_0()); }
	ruleCatchClauses
{ after(grammarAccess.getTryStatementAccess().getCatchClausesParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinallyClauseParserRuleCall_0_2_1()); }
(	ruleFinallyClause)?
{ after(grammarAccess.getTryStatementAccess().getFinallyClauseParserRuleCall_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_1__0__Impl
	rule__TryStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getTryKeyword_1_0()); }

	'try' 

{ after(grammarAccess.getTryStatementAccess().getTryKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_1__1__Impl
	rule__TryStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getBlockParserRuleCall_1_1()); }
	ruleBlock
{ after(grammarAccess.getTryStatementAccess().getBlockParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinallyClauseParserRuleCall_1_2()); }
	ruleFinallyClause
{ after(grammarAccess.getTryStatementAccess().getFinallyClauseParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FinallyClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FinallyClause__Group__0__Impl
	rule__FinallyClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FinallyClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinallyClauseAccess().getFinallyKeyword_0()); }

	'finally' 

{ after(grammarAccess.getFinallyClauseAccess().getFinallyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FinallyClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FinallyClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FinallyClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinallyClauseAccess().getBlockParserRuleCall_1()); }
	ruleBlock
{ after(grammarAccess.getFinallyClauseAccess().getBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CatchClauses__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClauses__Group_0__0__Impl
	rule__CatchClauses__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauses__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCatchClausesAccess().getSpecificCatchClauseParserRuleCall_0_0()); }
(	ruleSpecificCatchClause)
{ after(grammarAccess.getCatchClausesAccess().getSpecificCatchClauseParserRuleCall_0_0()); }
)
(
{ before(grammarAccess.getCatchClausesAccess().getSpecificCatchClauseParserRuleCall_0_0()); }
(	ruleSpecificCatchClause)*
{ after(grammarAccess.getCatchClausesAccess().getSpecificCatchClauseParserRuleCall_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClauses__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClauses__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauses__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClausesAccess().getGeneralCatchClauseParserRuleCall_0_1()); }
(	ruleGeneralCatchClause)?
{ after(grammarAccess.getCatchClausesAccess().getGeneralCatchClauseParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CatchClauses__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClauses__Group_1__0__Impl
	rule__CatchClauses__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauses__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClausesAccess().getSpecificCatchClauseParserRuleCall_1_0()); }
(	ruleSpecificCatchClause)*
{ after(grammarAccess.getCatchClausesAccess().getSpecificCatchClauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClauses__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClauses__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauses__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClausesAccess().getGeneralCatchClauseParserRuleCall_1_1()); }
	ruleGeneralCatchClause
{ after(grammarAccess.getCatchClausesAccess().getGeneralCatchClauseParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GeneralCatchClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeneralCatchClause__Group__0__Impl
	rule__GeneralCatchClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCatchClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralCatchClauseAccess().getCatchKeyword_0()); }

	'catch' 

{ after(grammarAccess.getGeneralCatchClauseAccess().getCatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralCatchClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeneralCatchClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCatchClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralCatchClauseAccess().getBlockParserRuleCall_1()); }
	ruleBlock
{ after(grammarAccess.getGeneralCatchClauseAccess().getBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecificCatchClause__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_0__0__Impl
	rule__SpecificCatchClause__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getCatchKeyword_0_0()); }

	'catch' 

{ after(grammarAccess.getSpecificCatchClauseAccess().getCatchKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_0__1__Impl
	rule__SpecificCatchClause__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getSpecificCatchClauseAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_0__2__Impl
	rule__SpecificCatchClause__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getBuiltInClassTypeParserRuleCall_0_2()); }
	ruleBuiltInClassType
{ after(grammarAccess.getSpecificCatchClauseAccess().getBuiltInClassTypeParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_0__3__Impl
	rule__SpecificCatchClause__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getIdentifierParserRuleCall_0_3()); }
(	ruleIdentifier)?
{ after(grammarAccess.getSpecificCatchClauseAccess().getIdentifierParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_0__4__Impl
	rule__SpecificCatchClause__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getSpecificCatchClauseAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getBlockParserRuleCall_0_5()); }
	ruleBlock
{ after(grammarAccess.getSpecificCatchClauseAccess().getBlockParserRuleCall_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SpecificCatchClause__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_1__0__Impl
	rule__SpecificCatchClause__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getCatchKeyword_1_0()); }

	'catch' 

{ after(grammarAccess.getSpecificCatchClauseAccess().getCatchKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_1__1__Impl
	rule__SpecificCatchClause__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getSpecificCatchClauseAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_1__2__Impl
	rule__SpecificCatchClause__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getQualifiedIdentifierParserRuleCall_1_2()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getSpecificCatchClauseAccess().getQualifiedIdentifierParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_1__3__Impl
	rule__SpecificCatchClause__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getIdentifierParserRuleCall_1_3()); }
(	ruleIdentifier)?
{ after(grammarAccess.getSpecificCatchClauseAccess().getIdentifierParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_1__4__Impl
	rule__SpecificCatchClause__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getSpecificCatchClauseAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecificCatchClause__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecificCatchClause__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecificCatchClause__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificCatchClauseAccess().getBlockParserRuleCall_1_5()); }
	ruleBlock
{ after(grammarAccess.getSpecificCatchClauseAccess().getBlockParserRuleCall_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ThrowStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowStatement__Group__0__Impl
	rule__ThrowStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStatementAccess().getThrowKeyword_0()); }

	'throw' 

{ after(grammarAccess.getThrowStatementAccess().getThrowKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowStatement__Group__1__Impl
	rule__ThrowStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStatementAccess().getExpressionParserRuleCall_1()); }
(	ruleExpression)?
{ after(grammarAccess.getThrowStatementAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionParserRuleCall_1()); }
(	ruleExpression)?
{ after(grammarAccess.getReturnStatementAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GotoStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__0__Impl
	rule__GotoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getGotoKeyword_0()); }

	'goto' 

{ after(grammarAccess.getGotoStatementAccess().getGotoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__1__Impl
	rule__GotoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getGotoStatementAccess().getIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__2__Impl
	rule__GotoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getGotoStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__3__Impl
	rule__GotoStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getGotoKeyword_3()); }

	'goto' 

{ after(grammarAccess.getGotoStatementAccess().getGotoKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__4__Impl
	rule__GotoStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getCaseKeyword_4()); }

	'case' 

{ after(grammarAccess.getGotoStatementAccess().getCaseKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__5__Impl
	rule__GotoStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getExpressionParserRuleCall_5()); }
	ruleExpression
{ after(grammarAccess.getGotoStatementAccess().getExpressionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__6__Impl
	rule__GotoStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getGotoStatementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__7__Impl
	rule__GotoStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getGotoKeyword_7()); }

	'goto' 

{ after(grammarAccess.getGotoStatementAccess().getGotoKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__8__Impl
	rule__GotoStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getDefaultKeyword_8()); }

	'default' 

{ after(grammarAccess.getGotoStatementAccess().getDefaultKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getSemicolonKeyword_9()); }

	';' 

{ after(grammarAccess.getGotoStatementAccess().getSemicolonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__ContinueStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContinueStatement__Group__0__Impl
	rule__ContinueStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContinueStatementAccess().getContinueKeyword_0()); }

	'continue' 

{ after(grammarAccess.getContinueStatementAccess().getContinueKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContinueStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BreakStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__0__Impl
	rule__BreakStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getBreakKeyword_0()); }

	'break' 

{ after(grammarAccess.getBreakStatementAccess().getBreakKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForeachStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__0__Impl
	rule__ForeachStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getForeachKeyword_0()); }

	'foreach' 

{ after(grammarAccess.getForeachStatementAccess().getForeachKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__1__Impl
	rule__ForeachStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForeachStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__2__Impl
	rule__ForeachStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getTypeParserRuleCall_2()); }
	ruleType
{ after(grammarAccess.getForeachStatementAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__3__Impl
	rule__ForeachStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getIdentifierParserRuleCall_3()); }
	ruleIdentifier
{ after(grammarAccess.getForeachStatementAccess().getIdentifierParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__4__Impl
	rule__ForeachStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getInKeyword_4()); }

	'in' 

{ after(grammarAccess.getForeachStatementAccess().getInKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__5__Impl
	rule__ForeachStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getExpressionParserRuleCall_5()); }
	ruleExpression
{ after(grammarAccess.getForeachStatementAccess().getExpressionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__6__Impl
	rule__ForeachStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getForeachStatementAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getEmbeddedStatementParserRuleCall_7()); }
	ruleEmbeddedStatement
{ after(grammarAccess.getForeachStatementAccess().getEmbeddedStatementParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ForStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForInitializerParserRuleCall_2()); }
(	ruleForInitializer)?
{ after(grammarAccess.getForStatementAccess().getForInitializerParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getExpressionParserRuleCall_4()); }
(	ruleExpression)?
{ after(grammarAccess.getForStatementAccess().getExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__5__Impl
	rule__ForStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__6__Impl
	rule__ForStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getStatementExpressionListParserRuleCall_6()); }
(	ruleStatementExpressionList)?
{ after(grammarAccess.getForStatementAccess().getStatementExpressionListParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__7__Impl
	rule__ForStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getEmbeddedStatementParserRuleCall_8()); }
	ruleEmbeddedStatement
{ after(grammarAccess.getForStatementAccess().getEmbeddedStatementParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__StatementExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpressionList__Group__0__Impl
	rule__StatementExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionListAccess().getStatementExpressionParserRuleCall_0()); }
	ruleStatementExpression
{ after(grammarAccess.getStatementExpressionListAccess().getStatementExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionListAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getStatementExpressionListAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_0__0__Impl
	rule__StatementExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getPrimaryExpressionParserRuleCall_0_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getStatementExpressionAccess().getPrimaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getAlternatives_0_1()); }
(rule__StatementExpression__Alternatives_0_1)
{ after(grammarAccess.getStatementExpressionAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementExpression__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_0_1_0__0__Impl
	rule__StatementExpression__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getLeftParenthesisKeyword_0_1_0_0()); }

	'(' 

{ after(grammarAccess.getStatementExpressionAccess().getLeftParenthesisKeyword_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_0_1_0__1__Impl
	rule__StatementExpression__Group_0_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getArgumentListParserRuleCall_0_1_0_1()); }
	ruleArgumentList
{ after(grammarAccess.getStatementExpressionAccess().getArgumentListParserRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_0_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_0_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_0_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getRightParenthesisKeyword_0_1_0_2()); }

	')' 

{ after(grammarAccess.getStatementExpressionAccess().getRightParenthesisKeyword_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatementExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_1__0__Impl
	rule__StatementExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getNewKeyword_1_0()); }

	'new' 

{ after(grammarAccess.getStatementExpressionAccess().getNewKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_1__1__Impl
	rule__StatementExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getTypeParserRuleCall_1_1()); }
	ruleType
{ after(grammarAccess.getStatementExpressionAccess().getTypeParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_1__2__Impl
	rule__StatementExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getLeftParenthesisKeyword_1_2()); }

	'(' 

{ after(grammarAccess.getStatementExpressionAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_1__3__Impl
	rule__StatementExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getArgumentListParserRuleCall_1_3()); }
	ruleArgumentList
{ after(grammarAccess.getStatementExpressionAccess().getArgumentListParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getStatementExpressionAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StatementExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_2__0__Impl
	rule__StatementExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getUnaryExpressionParserRuleCall_2_0()); }
	ruleUnaryExpression
{ after(grammarAccess.getStatementExpressionAccess().getUnaryExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_2__1__Impl
	rule__StatementExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getASSIGNEMENT_OPERATORTerminalRuleCall_2_1()); }
	RULE_ASSIGNEMENT_OPERATOR
{ after(grammarAccess.getStatementExpressionAccess().getASSIGNEMENT_OPERATORTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getExpressionParserRuleCall_2_2()); }
	ruleExpression
{ after(grammarAccess.getStatementExpressionAccess().getExpressionParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatementExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_3__0__Impl
	rule__StatementExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getINCREMENT_DECREMENTTerminalRuleCall_3_0()); }
	RULE_INCREMENT_DECREMENT
{ after(grammarAccess.getStatementExpressionAccess().getINCREMENT_DECREMENTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getPrimaryExpressionParserRuleCall_3_1()); }
	rulePrimaryExpression
{ after(grammarAccess.getStatementExpressionAccess().getPrimaryExpressionParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNewKeyword_0_0()); }

	'new' 

{ after(grammarAccess.getPrimaryExpressionAccess().getNewKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0_1()); }
(rule__PrimaryExpression__Alternatives_0_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_0__0__Impl
	rule__PrimaryExpression__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNonArrayTypeParserRuleCall_0_1_0_0()); }
	ruleNonArrayType
{ after(grammarAccess.getPrimaryExpressionAccess().getNonArrayTypeParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_0__1__Impl
	rule__PrimaryExpression__Group_0_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_0_1_0_1()); }

	'[' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_0__2__Impl
	rule__PrimaryExpression__Group_0_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionListParserRuleCall_0_1_0_2()); }
	ruleExpressionList
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionListParserRuleCall_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_0__3__Impl
	rule__PrimaryExpression__Group_0_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_0_1_0_3()); }

	']' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_0_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_0__4__Impl
	rule__PrimaryExpression__Group_0_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRANK_SPECIFIERTerminalRuleCall_0_1_0_4()); }
(	RULE_RANK_SPECIFIER)*
{ after(grammarAccess.getPrimaryExpressionAccess().getRANK_SPECIFIERTerminalRuleCall_0_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArrayInitializerParserRuleCall_0_1_0_5()); }
(	ruleArrayInitializer)?
{ after(grammarAccess.getPrimaryExpressionAccess().getArrayInitializerParserRuleCall_0_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PrimaryExpression__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_1__0__Impl
	rule__PrimaryExpression__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArrayTypeParserRuleCall_0_1_1_0()); }
	ruleArrayType
{ after(grammarAccess.getPrimaryExpressionAccess().getArrayTypeParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArrayInitializerParserRuleCall_0_1_1_1()); }
	ruleArrayInitializer
{ after(grammarAccess.getPrimaryExpressionAccess().getArrayInitializerParserRuleCall_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_2__0__Impl
	rule__PrimaryExpression__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeParserRuleCall_0_1_2_0()); }
	ruleType
{ after(grammarAccess.getPrimaryExpressionAccess().getTypeParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_2__1__Impl
	rule__PrimaryExpression__Group_0_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_1_2_1()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_2__2__Impl
	rule__PrimaryExpression__Group_0_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgumentListParserRuleCall_0_1_2_2()); }
	ruleArgumentList
{ after(grammarAccess.getPrimaryExpressionAccess().getArgumentListParserRuleCall_0_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_1_2_3()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__1__Impl
	rule__PrimaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_2_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBaseKeyword_3_0()); }

	'base' 

{ after(grammarAccess.getPrimaryExpressionAccess().getBaseKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_3_1()); }
(rule__PrimaryExpression__Alternatives_3_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_3_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_1_0__0__Impl
	rule__PrimaryExpression__Group_3_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_3_1_0_0()); }

	'.' 

{ after(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIdentifierParserRuleCall_3_1_0_1()); }
	ruleIdentifier
{ after(grammarAccess.getPrimaryExpressionAccess().getIdentifierParserRuleCall_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_1_1__0__Impl
	rule__PrimaryExpression__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_3_1_1_0()); }

	'[' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_1_1__1__Impl
	rule__PrimaryExpression__Group_3_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionListParserRuleCall_3_1_1_1()); }
	ruleExpressionList
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionListParserRuleCall_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_3_1_1_2()); }

	']' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_3_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPredefinedTypeParserRuleCall_4_0()); }
	rulePredefinedType
{ after(grammarAccess.getPrimaryExpressionAccess().getPredefinedTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__1__Impl
	rule__PrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_4_1()); }

	'.' 

{ after(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIdentifierParserRuleCall_4_2()); }
	ruleIdentifier
{ after(grammarAccess.getPrimaryExpressionAccess().getIdentifierParserRuleCall_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__0__Impl
	rule__PrimaryExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeofKeyword_6_0()); }

	'typeof' 

{ after(grammarAccess.getPrimaryExpressionAccess().getTypeofKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__1__Impl
	rule__PrimaryExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_6_1()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__2__Impl
	rule__PrimaryExpression__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeOrVoidParserRuleCall_6_2()); }
	ruleTypeOrVoid
{ after(grammarAccess.getPrimaryExpressionAccess().getTypeOrVoidParserRuleCall_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_6_3()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_7__0__Impl
	rule__PrimaryExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCheckedKeyword_7_0()); }

	'checked' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCheckedKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_7__1__Impl
	rule__PrimaryExpression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_7_1()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_7__2__Impl
	rule__PrimaryExpression__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_7_2()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_7_3()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_8__0__Impl
	rule__PrimaryExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getUncheckedKeyword_8_0()); }

	'unchecked' 

{ after(grammarAccess.getPrimaryExpressionAccess().getUncheckedKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_8__1__Impl
	rule__PrimaryExpression__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_8_1()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_8__2__Impl
	rule__PrimaryExpression__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_8_2()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_8_3()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group__0__Impl
	rule__PrimaryExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getAlternatives_0()); }
(rule__PrimaryExpression2__Alternatives_0)
{ after(grammarAccess.getPrimaryExpression2Access().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getPrimaryExpression2ParserRuleCall_1()); }
	rulePrimaryExpression2
{ after(grammarAccess.getPrimaryExpression2Access().getPrimaryExpression2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression2__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group_0_0__0__Impl
	rule__PrimaryExpression2__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getFullStopKeyword_0_0_0()); }

	'.' 

{ after(grammarAccess.getPrimaryExpression2Access().getFullStopKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression2__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getIdentifierParserRuleCall_0_0_1()); }
	ruleIdentifier
{ after(grammarAccess.getPrimaryExpression2Access().getIdentifierParserRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression2__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group_0_1__0__Impl
	rule__PrimaryExpression2__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getLeftParenthesisKeyword_0_1_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpression2Access().getLeftParenthesisKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression2__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group_0_1__1__Impl
	rule__PrimaryExpression2__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getArgumentListParserRuleCall_0_1_1()); }
	ruleArgumentList
{ after(grammarAccess.getPrimaryExpression2Access().getArgumentListParserRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression2__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getRightParenthesisKeyword_0_1_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpression2Access().getRightParenthesisKeyword_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression2__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group_0_2__0__Impl
	rule__PrimaryExpression2__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getLeftSquareBracketKeyword_0_2_0()); }

	'[' 

{ after(grammarAccess.getPrimaryExpression2Access().getLeftSquareBracketKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression2__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group_0_2__1__Impl
	rule__PrimaryExpression2__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getExpressionListParserRuleCall_0_2_1()); }
	ruleExpressionList
{ after(grammarAccess.getPrimaryExpression2Access().getExpressionListParserRuleCall_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression2__Group_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression2__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression2__Group_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpression2Access().getRightSquareBracketKeyword_0_2_2()); }

	']' 

{ after(grammarAccess.getPrimaryExpression2Access().getRightSquareBracketKeyword_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DoStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__0__Impl
	rule__DoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__1__Impl
	rule__DoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getEmbeddedStatementParserRuleCall_1()); }
	ruleEmbeddedStatement
{ after(grammarAccess.getDoStatementAccess().getEmbeddedStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__2__Impl
	rule__DoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__3__Impl
	rule__DoStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__4__Impl
	rule__DoStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getExpressionParserRuleCall_4()); }
	ruleExpression
{ after(grammarAccess.getDoStatementAccess().getExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__5__Impl
	rule__DoStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getExpressionParserRuleCall_2()); }
	ruleExpression
{ after(grammarAccess.getWhileStatementAccess().getExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getEmbeddedStatementParserRuleCall_4()); }
	ruleEmbeddedStatement
{ after(grammarAccess.getWhileStatementAccess().getEmbeddedStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SwitchStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__0__Impl
	rule__SwitchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__1__Impl
	rule__SwitchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__2__Impl
	rule__SwitchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getExpressionParserRuleCall_2()); }
	ruleExpression
{ after(grammarAccess.getSwitchStatementAccess().getExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__3__Impl
	rule__SwitchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__4__Impl
	rule__SwitchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__5__Impl
	rule__SwitchStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchSectionParserRuleCall_5()); }
(	ruleSwitchSection)*
{ after(grammarAccess.getSwitchStatementAccess().getSwitchSectionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SwitchSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchSection__Group__0__Impl
	rule__SwitchSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSwitchSectionAccess().getSwitchLabelParserRuleCall_0()); }
(	ruleSwitchLabel)
{ after(grammarAccess.getSwitchSectionAccess().getSwitchLabelParserRuleCall_0()); }
)
(
{ before(grammarAccess.getSwitchSectionAccess().getSwitchLabelParserRuleCall_0()); }
(	ruleSwitchLabel)*
{ after(grammarAccess.getSwitchSectionAccess().getSwitchLabelParserRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchSection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSwitchSectionAccess().getStatementParserRuleCall_1()); }
(	ruleStatement)
{ after(grammarAccess.getSwitchSectionAccess().getStatementParserRuleCall_1()); }
)
(
{ before(grammarAccess.getSwitchSectionAccess().getStatementParserRuleCall_1()); }
(	ruleStatement)*
{ after(grammarAccess.getSwitchSectionAccess().getStatementParserRuleCall_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SwitchLabel__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchLabel__Group_0__0__Impl
	rule__SwitchLabel__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchLabelAccess().getCaseKeyword_0_0()); }

	'case' 

{ after(grammarAccess.getSwitchLabelAccess().getCaseKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchLabel__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchLabel__Group_0__1__Impl
	rule__SwitchLabel__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchLabelAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getSwitchLabelAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchLabel__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchLabel__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchLabelAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getSwitchLabelAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SwitchLabel__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchLabel__Group_1__0__Impl
	rule__SwitchLabel__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchLabelAccess().getDefaultKeyword_1_0()); }

	'default' 

{ after(grammarAccess.getSwitchLabelAccess().getDefaultKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchLabel__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchLabel__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchLabelAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getSwitchLabelAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExpressionParserRuleCall_2()); }
	ruleExpression
{ after(grammarAccess.getIfStatementAccess().getExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getEmbeddedStatementParserRuleCall_4()); }
	ruleEmbeddedStatement
{ after(grammarAccess.getIfStatementAccess().getEmbeddedStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElsePartParserRuleCall_5()); }
(	ruleElsePart)?
{ after(grammarAccess.getIfStatementAccess().getElsePartParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ElsePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsePart__Group__0__Impl
	rule__ElsePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsePartAccess().getElseKeyword_0()); }

	'else' 

{ after(grammarAccess.getElsePartAccess().getElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsePart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsePartAccess().getEmbeddedStatementParserRuleCall_1()); }
	ruleEmbeddedStatement
{ after(grammarAccess.getElsePartAccess().getEmbeddedStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementParserRuleCall_1()); }
(	ruleStatement)*
{ after(grammarAccess.getBlockAccess().getStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MaybeEmptyBlock__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaybeEmptyBlock__Group_0__0__Impl
	rule__MaybeEmptyBlock__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaybeEmptyBlock__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaybeEmptyBlockAccess().getLeftCurlyBracketKeyword_0_0()); }

	'{' 

{ after(grammarAccess.getMaybeEmptyBlockAccess().getLeftCurlyBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaybeEmptyBlock__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaybeEmptyBlock__Group_0__1__Impl
	rule__MaybeEmptyBlock__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaybeEmptyBlock__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaybeEmptyBlockAccess().getStatementParserRuleCall_0_1()); }
(	ruleStatement)*
{ after(grammarAccess.getMaybeEmptyBlockAccess().getStatementParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaybeEmptyBlock__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaybeEmptyBlock__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaybeEmptyBlock__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaybeEmptyBlockAccess().getRightCurlyBracketKeyword_0_2()); }

	'}' 

{ after(grammarAccess.getMaybeEmptyBlockAccess().getRightCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__InputsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getInputsInputParserRuleCall_0()); }
	ruleInput{ after(grammarAccess.getModelAccess().getInputsInputParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_LESS_THAN : '<';

RULE_GREATER_THAN : '>';

RULE_BAR : '|';

RULE_AMPERSAND : '&';

RULE_INCREMENT_DECREMENT : ('++'|'--');

RULE_OPERATOR_OR_SIGN : ('+'|'-');

RULE_REAL_TYPE_SUFFIX : ('F'|'f'|'D'|'d'|'M'|'m');

RULE_LETTER : ('A'..'Z'|'a'..'z');

RULE_IDENTIFIER_START_CHARACTER : (RULE_LETTER|'_');

RULE_QUOTE_ESCAPE_SEQUENCE : '""';

RULE_ESCAPE_SEQUENCE : ('\''|'"'|'\\'|'0'|'a'|'b'|'f'|'n'|'r'|'t'|'v');

RULE_NEW_LINE : ('\r'|'\n')*;

RULE_RANK_SPECIFIER : '[' ','* ']';

RULE_INTEGER_TYPE_SUFFIX : ('U'|'u'|'L'|'l'|'UL'|'Ul'|'uL'|'ul'|'LU'|'Lu'|'lU'|'lu');

RULE_HEX_DIGIT : ('0'..'9'|('A'..'F'|'a'..'f'));

RULE_EXPRESSION_EQUALITY_OPERATOR : ('=='|'!=');

RULE_ASSIGNEMENT_OPERATOR : ('='|'+='|'-='|'*='|'/='|'%='|'&='|'^='|'<<='|'>>=');

RULE_OPERATOR_OR_PUNCTUATOR : ('{'|'}'|'['|']'|'('|')'|'.'|','|':'|';'|'+'|'-'|'*'|'/'|'%'|'&'|'|'|'^'|'!'|'~'|'<'|'>'|'?'|'++'|'--'|'&&'|'||'|'<<'|'>>'|'<='|'>='|'->'|RULE_ASSIGNEMENT_OPERATOR|RULE_EXPRESSION_EQUALITY_OPERATOR);

RULE_SINGLE_CHARACTER : .?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t')+;


